ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB46:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #define VREFINT_CAL_ADDR          ((uint16_t*) ((uint32_t) 0x1FF80078))
  36:Core/Src/main.c **** #define MIN_VOLTAGE               5000
  37:Core/Src/main.c **** #define MAX_VOLTAGE               22000
  38:Core/Src/main.c **** #define MIN_CURRENT               200
  39:Core/Src/main.c **** #define SLEEP_VOLTAGE             1000
  40:Core/Src/main.c **** #define CHARGE_VOLTAGE_THESHOLD   2600
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** UART_HandleTypeDef huart2;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_ADC_Init(void);
  66:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  67:Core/Src/main.c **** static void MX_SPI1_Init(void);
  68:Core/Src/main.c **** static void MX_TIM2_Init(void);
  69:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** // *** Load switch functions *** //
  72:Core/Src/main.c **** void load_switch_enable(void);
  73:Core/Src/main.c **** void load_switch_disable(void);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** // *** Blocking led functions ***//
  76:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2);
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
  79:Core/Src/main.c **** void Enable_buck_converter(void);
  80:Core/Src/main.c **** void Disable_buck_converter(void);
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  85:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** uint16_t ADC_CH5, ADC_CH6, ADC_CH7, ADC_REF;
  88:Core/Src/main.c **** uint16_t supply_voltage_mv = 0;
  89:Core/Src/main.c **** uint16_t input_voltage_mv = 0;
  90:Core/Src/main.c **** uint16_t buck_output_voltage_mv = 0;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 3


  91:Core/Src/main.c **** uint16_t buck_current_ma = 0;
  92:Core/Src/main.c **** uint8_t previous_state = 0;
  93:Core/Src/main.c **** uint16_t timer_check = 0;
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** // Buffer keeping SPI commands to change resistance of programmable potentiometer 
  96:Core/Src/main.c **** uint8_t spi_buffer [2] = {0, 0};
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** // State machine
  99:Core/Src/main.c **** typedef enum {INIT, START_CHARGING, CHARGING, STOP_CHARGING, OVER_VOLTAGE, SLEEP} State_type;
 100:Core/Src/main.c **** State_type current_state = INIT;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* USER CODE END 0 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****   * @brief  The application entry point.
 106:Core/Src/main.c ****   * @retval int
 107:Core/Src/main.c ****   */
 108:Core/Src/main.c **** int main(void)
 109:Core/Src/main.c **** {
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 117:Core/Src/main.c ****   HAL_Init();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END Init */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Configure the system clock */
 124:Core/Src/main.c ****   SystemClock_Config();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Initialize all configured peripherals */
 131:Core/Src/main.c ****   MX_GPIO_Init();
 132:Core/Src/main.c ****   MX_ADC_Init();
 133:Core/Src/main.c ****   MX_USART2_UART_Init();
 134:Core/Src/main.c ****   MX_SPI1_Init();
 135:Core/Src/main.c ****   MX_TIM2_Init();
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc, ADC_SINGLE_ENDED);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END 2 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Infinite loop */
 143:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 144:Core/Src/main.c ****   while (1)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     /* USER CODE END WHILE */
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 4


 148:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     // Start ADC Conversion and read two ADC values
 151:Core/Src/main.c **** 		HAL_ADC_Start(&hadc);
 152:Core/Src/main.c ****     
 153:Core/Src/main.c ****     // ADC_CHANNEL_5 & Read The ADC Conversion Result
 154:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 155:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     // ADC_CHANNEL_6 & Read The ADC Conversion Result
 158:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 159:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     // ADC_CHANNEL_7 & Read The ADC Conversion Result
 162:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 163:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     // ADC_CHANNEL_VREFINT & Read The ADC Conversion Result
 166:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 167:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     // Stop ADC Conversion
 170:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     // Calculate supply voltage MCU
 173:Core/Src/main.c ****     supply_voltage_mv = 1200*4096/ADC_REF;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****     // Calculate input voltage BUCK converter
 176:Core/Src/main.c ****     input_voltage_mv = ADC_CH5*supply_voltage_mv/4096*224700/4700;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     // Calculate buck converter output voltage
 179:Core/Src/main.c ****     buck_output_voltage_mv = ADC_CH7*supply_voltage_mv/4096*71000/15000;
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     // Calculate buck converter output current
 182:Core/Src/main.c ****     buck_current_ma = ADC_CH6*supply_voltage_mv/4096*1000/780;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     if(input_voltage_mv > MAX_VOLTAGE){
 186:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 187:Core/Src/main.c ****     }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     
 190:Core/Src/main.c ****     ///////////////////////////
 191:Core/Src/main.c ****     // *** State machine *** //
 192:Core/Src/main.c ****     ///////////////////////////
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****     switch (current_state){
 195:Core/Src/main.c ****       case INIT:
 196:Core/Src/main.c ****         // No charging may occur in the INIT phase
 197:Core/Src/main.c ****         Disable_buck_converter();
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****         // Check input voltage before start charging
 200:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE && input_voltage_mv > MIN_VOLTAGE){
 201:Core/Src/main.c ****           current_state = START_CHARGING;
 202:Core/Src/main.c ****           break;
 203:Core/Src/main.c ****         }
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 5


 205:Core/Src/main.c ****         // Check input voltage in not below minimum voltage
 206:Core/Src/main.c ****         if(input_voltage_mv < SLEEP_VOLTAGE){
 207:Core/Src/main.c ****           current_state = SLEEP;
 208:Core/Src/main.c ****         }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_RESET);
 211:Core/Src/main.c ****         spi_buffer[1] = 100;
 212:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 100);
 213:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****         // Blink led
 216:Core/Src/main.c ****         led_blink(500, 500);
 217:Core/Src/main.c ****       break;
 218:Core/Src/main.c ****       case START_CHARGING: 
 219:Core/Src/main.c ****         // Enable buck converter safely
 220:Core/Src/main.c ****         Enable_buck_converter();
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****         // Change state
 223:Core/Src/main.c ****         current_state = CHARGING;
 224:Core/Src/main.c ****       break;
 225:Core/Src/main.c ****       case CHARGING:
 226:Core/Src/main.c ****         led_blink(900, 100);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****         // If under voltage occurs, wait for enough voltage to resume
 229:Core/Src/main.c ****         if(input_voltage_mv < MIN_VOLTAGE){
 230:Core/Src/main.c ****           current_state = INIT;
 231:Core/Src/main.c ****           break;
 232:Core/Src/main.c ****         }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****         // Check for current lower then MIN_CURRENT after 10 sec
 235:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT && timer_check > 10 && supply_voltage_mv > CHARGE_VOLTAGE_
 236:Core/Src/main.c ****           timer_check = 0;
 237:Core/Src/main.c ****           current_state = STOP_CHARGING;
 238:Core/Src/main.c ****         }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_RESET);
 241:Core/Src/main.c ****         spi_buffer[1] = 100;
 242:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 200);
 243:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****         timer_check++;
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****       break;
 248:Core/Src/main.c ****       case STOP_CHARGING:
 249:Core/Src/main.c ****         // Disable buck conveter safely
 250:Core/Src/main.c ****         Disable_buck_converter();
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT){
 253:Core/Src/main.c ****           current_state = SLEEP;
 254:Core/Src/main.c ****         }
 255:Core/Src/main.c ****         else{
 256:Core/Src/main.c ****           current_state = INIT;
 257:Core/Src/main.c ****         }
 258:Core/Src/main.c ****       break;
 259:Core/Src/main.c ****       case OVER_VOLTAGE:
 260:Core/Src/main.c ****         led_blink(100, 100);
 261:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 6


 262:Core/Src/main.c ****         // Disable buck conveter safely
 263:Core/Src/main.c ****         Disable_buck_converter();
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****         // Check for save voltage
 266:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE){
 267:Core/Src/main.c ****           current_state = INIT;
 268:Core/Src/main.c ****         }
 269:Core/Src/main.c ****       break;
 270:Core/Src/main.c ****       case SLEEP:
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****         // Disable LED
 273:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****         // Check if input voltage is above 2 V and enable timer interrupt
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****         // Reconfigure GPIO pins for sleep mode: EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin
 278:Core/Src/main.c ****         // GPIO_InitTypeDef GPIO_InitStruct;
 279:Core/Src/main.c ****         // GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin;
 280:Core/Src/main.c ****         // GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 281:Core/Src/main.c ****         // GPIO_InitStruct.Pull = GPIO_NOPULL;
 282:Core/Src/main.c ****         // HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 283:Core/Src/main.c ****         
 284:Core/Src/main.c ****         // Disable the systick interrupt
 285:Core/Src/main.c ****         HAL_SuspendTick();
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****         // Enter Stop Mode
 288:Core/Src/main.c ****         HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****         // Change state
 291:Core/Src/main.c ****         current_state = INIT;
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****       break;
 294:Core/Src/main.c ****       default:
 295:Core/Src/main.c ****       current_state = INIT;
 296:Core/Src/main.c ****       break;
 297:Core/Src/main.c ****     }
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****     uint8_t length = 10;
 300:Core/Src/main.c ****     uint8_t buffer [length];
 301:Core/Src/main.c ****     buffer [0] = 0x02;
 302:Core/Src/main.c ****     buffer [1] = length;
 303:Core/Src/main.c ****     buffer [2] = (input_voltage_mv >> 8);
 304:Core/Src/main.c ****     buffer [3] = (uint8_t)(input_voltage_mv);
 305:Core/Src/main.c ****     buffer [4] = (buck_output_voltage_mv >> 8);
 306:Core/Src/main.c ****     buffer [5] = (uint8_t)(buck_output_voltage_mv);
 307:Core/Src/main.c ****     buffer [6] = (buck_current_ma >> 8);
 308:Core/Src/main.c ****     buffer [7] = (uint8_t)(buck_current_ma);
 309:Core/Src/main.c ****     buffer [8] = (supply_voltage_mv >> 8);
 310:Core/Src/main.c ****     buffer [9] = (uint8_t)(supply_voltage_mv);
 311:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, buffer, length, 100);
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   /* USER CODE END 3 */
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /**
 318:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 7


 319:Core/Src/main.c ****   * @retval None
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c **** void SystemClock_Config(void)
 322:Core/Src/main.c **** {
 323:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 324:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 325:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 328:Core/Src/main.c ****   */
 329:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 332:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 335:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 336:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 337:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 338:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 339:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     Error_Handler();
 342:Core/Src/main.c ****   }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 345:Core/Src/main.c ****   */
 346:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 347:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 348:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 349:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 350:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 351:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 358:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 359:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c **** }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c ****   * @brief ADC Initialization Function
 367:Core/Src/main.c ****   * @param None
 368:Core/Src/main.c ****   * @retval None
 369:Core/Src/main.c ****   */
 370:Core/Src/main.c **** static void MX_ADC_Init(void)
 371:Core/Src/main.c **** {
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 8


 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c ****   hadc.Instance = ADC1;
 386:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 387:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 388:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 389:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 390:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 391:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 392:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 393:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 394:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 395:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 396:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 397:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 398:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 399:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 400:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 401:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 402:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 403:Core/Src/main.c ****   {
 404:Core/Src/main.c ****     Error_Handler();
 405:Core/Src/main.c ****   }
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 408:Core/Src/main.c ****   */
 409:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 410:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 411:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 417:Core/Src/main.c ****   */
 418:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 419:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 420:Core/Src/main.c ****   {
 421:Core/Src/main.c ****     Error_Handler();
 422:Core/Src/main.c ****   }
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 427:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 9


 433:Core/Src/main.c ****   */
 434:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 435:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 436:Core/Src/main.c ****   {
 437:Core/Src/main.c ****     Error_Handler();
 438:Core/Src/main.c ****   }
 439:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** }
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** /**
 446:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 447:Core/Src/main.c ****   * @param None
 448:Core/Src/main.c ****   * @retval None
 449:Core/Src/main.c ****   */
 450:Core/Src/main.c **** static void MX_SPI1_Init(void)
 451:Core/Src/main.c **** {
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 460:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 461:Core/Src/main.c ****   hspi1.Instance = SPI1;
 462:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 463:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 464:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 465:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 466:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 467:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 468:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 469:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 470:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 471:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 472:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 473:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 474:Core/Src/main.c ****   {
 475:Core/Src/main.c ****     Error_Handler();
 476:Core/Src/main.c ****   }
 477:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** }
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** /**
 484:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 485:Core/Src/main.c ****   * @param None
 486:Core/Src/main.c ****   * @retval None
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c **** static void MX_TIM2_Init(void)
 489:Core/Src/main.c **** {
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 10


 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 496:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 501:Core/Src/main.c ****   htim2.Instance = TIM2;
 502:Core/Src/main.c ****   htim2.Init.Prescaler = 2000;
 503:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 504:Core/Src/main.c ****   htim2.Init.Period = 1000;
 505:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 506:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 507:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 508:Core/Src/main.c ****   {
 509:Core/Src/main.c ****     Error_Handler();
 510:Core/Src/main.c ****   }
 511:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 512:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief USART2 Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 534:Core/Src/main.c **** {
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 543:Core/Src/main.c ****   huart2.Instance = USART2;
 544:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 545:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 546:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 11


 547:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 548:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 549:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 550:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 551:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 552:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 553:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 554:Core/Src/main.c ****   {
 555:Core/Src/main.c ****     Error_Handler();
 556:Core/Src/main.c ****   }
 557:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** }
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** /**
 564:Core/Src/main.c ****   * @brief GPIO Initialization Function
 565:Core/Src/main.c ****   * @param None
 566:Core/Src/main.c ****   * @retval None
 567:Core/Src/main.c ****   */
 568:Core/Src/main.c **** static void MX_GPIO_Init(void)
 569:Core/Src/main.c **** {
  26              		.loc 1 569 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 C646     		mov	lr, r8
  38 0004 00B5     		push	{lr}
  39              		.cfi_def_cfa_offset 24
  40              		.cfi_offset 8, -24
  41 0006 88B0     		sub	sp, sp, #32
  42              		.cfi_def_cfa_offset 56
 570:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 570 3 view .LVU1
  44              		.loc 1 570 20 is_stmt 0 view .LVU2
  45 0008 1422     		movs	r2, #20
  46 000a 0021     		movs	r1, #0
  47 000c 03A8     		add	r0, sp, #12
  48 000e FFF7FEFF 		bl	memset
  49              	.LVL0:
 571:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 572:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 575:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 575 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 575 3 view .LVU4
  53              		.loc 1 575 3 view .LVU5
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 12


  54 0012 294B     		ldr	r3, .L2
  55 0014 D96A     		ldr	r1, [r3, #44]
  56 0016 0422     		movs	r2, #4
  57 0018 1143     		orrs	r1, r2
  58 001a D962     		str	r1, [r3, #44]
  59              		.loc 1 575 3 view .LVU6
  60 001c D96A     		ldr	r1, [r3, #44]
  61 001e 0A40     		ands	r2, r1
  62 0020 0092     		str	r2, [sp]
  63              		.loc 1 575 3 view .LVU7
  64 0022 009A     		ldr	r2, [sp]
  65              	.LBE4:
  66              		.loc 1 575 3 view .LVU8
 576:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 576 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 576 3 view .LVU10
  70              		.loc 1 576 3 view .LVU11
  71 0024 DA6A     		ldr	r2, [r3, #44]
  72 0026 0125     		movs	r5, #1
  73 0028 2A43     		orrs	r2, r5
  74 002a DA62     		str	r2, [r3, #44]
  75              		.loc 1 576 3 view .LVU12
  76 002c DA6A     		ldr	r2, [r3, #44]
  77 002e 2A40     		ands	r2, r5
  78 0030 0192     		str	r2, [sp, #4]
  79              		.loc 1 576 3 view .LVU13
  80 0032 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
  82              		.loc 1 576 3 view .LVU14
 577:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  83              		.loc 1 577 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 577 3 view .LVU16
  86              		.loc 1 577 3 view .LVU17
  87 0034 D96A     		ldr	r1, [r3, #44]
  88 0036 0222     		movs	r2, #2
  89 0038 1143     		orrs	r1, r2
  90 003a D962     		str	r1, [r3, #44]
  91              		.loc 1 577 3 view .LVU18
  92 003c DB6A     		ldr	r3, [r3, #44]
  93 003e 1A40     		ands	r2, r3
  94 0040 0292     		str	r2, [sp, #8]
  95              		.loc 1 577 3 view .LVU19
  96 0042 029B     		ldr	r3, [sp, #8]
  97              	.LBE6:
  98              		.loc 1 577 3 view .LVU20
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 580:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  99              		.loc 1 580 3 view .LVU21
 100 0044 8024     		movs	r4, #128
 101 0046 E401     		lsls	r4, r4, #7
 102 0048 1C4B     		ldr	r3, .L2+4
 103 004a 9846     		mov	r8, r3
 104 004c 0022     		movs	r2, #0
 105 004e 2100     		movs	r1, r4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 13


 106 0050 1800     		movs	r0, r3
 107 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 583:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin
 109              		.loc 1 583 3 view .LVU22
 110 0056 1A4F     		ldr	r7, .L2+8
 111 0058 A026     		movs	r6, #160
 112 005a F605     		lsls	r6, r6, #23
 113 005c 0022     		movs	r2, #0
 114 005e 3900     		movs	r1, r7
 115 0060 3000     		movs	r0, r6
 116 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL2:
 584:Core/Src/main.c ****                           |SC_Pin, GPIO_PIN_RESET);
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 587:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 118              		.loc 1 587 3 view .LVU23
 119              		.loc 1 587 23 is_stmt 0 view .LVU24
 120 0066 0394     		str	r4, [sp, #12]
 588:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 121              		.loc 1 588 3 is_stmt 1 view .LVU25
 122              		.loc 1 588 24 is_stmt 0 view .LVU26
 123 0068 0495     		str	r5, [sp, #16]
 589:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 589 3 is_stmt 1 view .LVU27
 125              		.loc 1 589 24 is_stmt 0 view .LVU28
 126 006a 0024     		movs	r4, #0
 127 006c 0594     		str	r4, [sp, #20]
 590:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 128              		.loc 1 590 3 is_stmt 1 view .LVU29
 129              		.loc 1 590 25 is_stmt 0 view .LVU30
 130 006e 0694     		str	r4, [sp, #24]
 591:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 131              		.loc 1 591 3 is_stmt 1 view .LVU31
 132 0070 03A9     		add	r1, sp, #12
 133 0072 4046     		mov	r0, r8
 134 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 135              	.LVL3:
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /*Configure GPIO pins : EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin
 594:Core/Src/main.c ****                            SC_Pin */
 595:Core/Src/main.c ****   GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin
 136              		.loc 1 595 3 view .LVU32
 137              		.loc 1 595 23 is_stmt 0 view .LVU33
 138 0078 0397     		str	r7, [sp, #12]
 596:Core/Src/main.c ****                           |SC_Pin;
 597:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 139              		.loc 1 597 3 is_stmt 1 view .LVU34
 140              		.loc 1 597 24 is_stmt 0 view .LVU35
 141 007a 0495     		str	r5, [sp, #16]
 598:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 598 3 is_stmt 1 view .LVU36
 143              		.loc 1 598 24 is_stmt 0 view .LVU37
 144 007c 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 14


 599:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 145              		.loc 1 599 3 is_stmt 1 view .LVU38
 146              		.loc 1 599 25 is_stmt 0 view .LVU39
 147 007e 0694     		str	r4, [sp, #24]
 600:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 600 3 is_stmt 1 view .LVU40
 149 0080 03A9     		add	r1, sp, #12
 150 0082 3000     		movs	r0, r6
 151 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL4:
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /*Configure GPIO pin : INT_Pin */
 603:Core/Src/main.c ****   GPIO_InitStruct.Pin = INT_Pin;
 153              		.loc 1 603 3 view .LVU41
 154              		.loc 1 603 23 is_stmt 0 view .LVU42
 155 0088 8023     		movs	r3, #128
 156 008a DB00     		lsls	r3, r3, #3
 157 008c 0393     		str	r3, [sp, #12]
 604:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 158              		.loc 1 604 3 is_stmt 1 view .LVU43
 159              		.loc 1 604 24 is_stmt 0 view .LVU44
 160 008e 8823     		movs	r3, #136
 161 0090 5B03     		lsls	r3, r3, #13
 162 0092 0493     		str	r3, [sp, #16]
 605:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 605 3 is_stmt 1 view .LVU45
 164              		.loc 1 605 24 is_stmt 0 view .LVU46
 165 0094 0594     		str	r4, [sp, #20]
 606:Core/Src/main.c ****   HAL_GPIO_Init(INT_GPIO_Port, &GPIO_InitStruct);
 166              		.loc 1 606 3 is_stmt 1 view .LVU47
 167 0096 03A9     		add	r1, sp, #12
 168 0098 3000     		movs	r0, r6
 169 009a FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL5:
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /* EXTI interrupt init*/
 609:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 171              		.loc 1 609 3 view .LVU48
 172 009e 0022     		movs	r2, #0
 173 00a0 0021     		movs	r1, #0
 174 00a2 0720     		movs	r0, #7
 175 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 176              	.LVL6:
 610:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 177              		.loc 1 610 3 view .LVU49
 178 00a8 0720     		movs	r0, #7
 179 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 180              	.LVL7:
 611:Core/Src/main.c **** 
 612:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 613:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 614:Core/Src/main.c **** }
 181              		.loc 1 614 1 is_stmt 0 view .LVU50
 182 00ae 08B0     		add	sp, sp, #32
 183              		@ sp needed
 184 00b0 80BC     		pop	{r7}
 185 00b2 B846     		mov	r8, r7
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 15


 186 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 187              	.L3:
 188 00b6 C046     		.align	2
 189              	.L2:
 190 00b8 00100240 		.word	1073876992
 191 00bc 00080050 		.word	1342179328
 192 00c0 13420000 		.word	16915
 193              		.cfi_endproc
 194              	.LFE46:
 196              		.section	.text.load_switch_enable,"ax",%progbits
 197              		.align	1
 198              		.global	load_switch_enable
 199              		.syntax unified
 200              		.code	16
 201              		.thumb_func
 203              	load_switch_enable:
 204              	.LFB47:
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 617:Core/Src/main.c **** 
 618:Core/Src/main.c **** // *** Load Switch functions *** //
 619:Core/Src/main.c **** // Enable load switch 1 and 2
 620:Core/Src/main.c **** void load_switch_enable(void){
 205              		.loc 1 620 30 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 10B5     		push	{r4, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 621:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 213              		.loc 1 621 3 view .LVU52
 214 0002 A024     		movs	r4, #160
 215 0004 E405     		lsls	r4, r4, #23
 216 0006 0122     		movs	r2, #1
 217 0008 0121     		movs	r1, #1
 218 000a 2000     		movs	r0, r4
 219 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL8:
 622:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 221              		.loc 1 622 3 view .LVU53
 222 0010 0122     		movs	r2, #1
 223 0012 0221     		movs	r1, #2
 224 0014 2000     		movs	r0, r4
 225 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL9:
 623:Core/Src/main.c **** }
 227              		.loc 1 623 1 is_stmt 0 view .LVU54
 228              		@ sp needed
 229 001a 10BD     		pop	{r4, pc}
 230              		.cfi_endproc
 231              	.LFE47:
 233              		.section	.text.load_switch_disable,"ax",%progbits
 234              		.align	1
 235              		.global	load_switch_disable
 236              		.syntax unified
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 16


 237              		.code	16
 238              		.thumb_func
 240              	load_switch_disable:
 241              	.LFB48:
 624:Core/Src/main.c **** 
 625:Core/Src/main.c **** // Disable load switch 1 and 2
 626:Core/Src/main.c **** void load_switch_disable(void){
 242              		.loc 1 626 31 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 627:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_RESET);
 250              		.loc 1 627 3 view .LVU56
 251 0002 A024     		movs	r4, #160
 252 0004 E405     		lsls	r4, r4, #23
 253 0006 0022     		movs	r2, #0
 254 0008 0121     		movs	r1, #1
 255 000a 2000     		movs	r0, r4
 256 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 257              	.LVL10:
 628:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_RESET);
 258              		.loc 1 628 3 view .LVU57
 259 0010 0022     		movs	r2, #0
 260 0012 0221     		movs	r1, #2
 261 0014 2000     		movs	r0, r4
 262 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 263              	.LVL11:
 629:Core/Src/main.c **** }
 264              		.loc 1 629 1 is_stmt 0 view .LVU58
 265              		@ sp needed
 266 001a 10BD     		pop	{r4, pc}
 267              		.cfi_endproc
 268              	.LFE48:
 270              		.section	.text.led_blink,"ax",%progbits
 271              		.align	1
 272              		.global	led_blink
 273              		.syntax unified
 274              		.code	16
 275              		.thumb_func
 277              	led_blink:
 278              	.LVL12:
 279              	.LFB49:
 630:Core/Src/main.c **** 
 631:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2){
 280              		.loc 1 631 61 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		.loc 1 631 61 is_stmt 0 view .LVU60
 285 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 286              		.cfi_def_cfa_offset 24
 287              		.cfi_offset 3, -24
 288              		.cfi_offset 4, -20
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 17


 289              		.cfi_offset 5, -16
 290              		.cfi_offset 6, -12
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 0500     		movs	r5, r0
 294 0004 0C00     		movs	r4, r1
 632:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 295              		.loc 1 632 3 is_stmt 1 view .LVU61
 296 0006 8027     		movs	r7, #128
 297 0008 FF01     		lsls	r7, r7, #7
 298 000a 094E     		ldr	r6, .L7
 299 000c 0022     		movs	r2, #0
 300 000e 3900     		movs	r1, r7
 301              	.LVL13:
 302              		.loc 1 632 3 is_stmt 0 view .LVU62
 303 0010 3000     		movs	r0, r6
 304              	.LVL14:
 305              		.loc 1 632 3 view .LVU63
 306 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL15:
 633:Core/Src/main.c ****   HAL_Delay(time_delay_1);
 308              		.loc 1 633 3 is_stmt 1 view .LVU64
 309 0016 2800     		movs	r0, r5
 310 0018 FFF7FEFF 		bl	HAL_Delay
 311              	.LVL16:
 634:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 312              		.loc 1 634 3 view .LVU65
 313 001c 0122     		movs	r2, #1
 314 001e 3900     		movs	r1, r7
 315 0020 3000     		movs	r0, r6
 316 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 317              	.LVL17:
 635:Core/Src/main.c ****   HAL_Delay(time_delay_2);
 318              		.loc 1 635 3 view .LVU66
 319 0026 2000     		movs	r0, r4
 320 0028 FFF7FEFF 		bl	HAL_Delay
 321              	.LVL18:
 636:Core/Src/main.c **** }
 322              		.loc 1 636 1 is_stmt 0 view .LVU67
 323              		@ sp needed
 324 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 325              	.L8:
 326 002e C046     		.align	2
 327              	.L7:
 328 0030 00080050 		.word	1342179328
 329              		.cfi_endproc
 330              	.LFE49:
 332              		.section	.text.Enable_buck_converter,"ax",%progbits
 333              		.align	1
 334              		.global	Enable_buck_converter
 335              		.syntax unified
 336              		.code	16
 337              		.thumb_func
 339              	Enable_buck_converter:
 340              	.LFB51:
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** // *** WAKE UP *** //
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 18


 639:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 640:Core/Src/main.c **** {
 641:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 642:Core/Src/main.c ****   //{
 643:Core/Src/main.c **** 	  SystemClock_Config();
 644:Core/Src/main.c **** 	  HAL_ResumeTick();
 645:Core/Src/main.c ****   //}
 646:Core/Src/main.c **** }
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
 649:Core/Src/main.c **** void Enable_buck_converter(void){
 341              		.loc 1 649 33 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345 0000 10B5     		push	{r4, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 650:Core/Src/main.c ****   // Enable load switches
 651:Core/Src/main.c ****   load_switch_enable();
 349              		.loc 1 651 3 view .LVU69
 350 0002 FFF7FEFF 		bl	load_switch_enable
 351              	.LVL19:
 652:Core/Src/main.c **** 
 653:Core/Src/main.c ****   HAL_Delay(100);
 352              		.loc 1 653 3 view .LVU70
 353 0006 6420     		movs	r0, #100
 354 0008 FFF7FEFF 		bl	HAL_Delay
 355              	.LVL20:
 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   // Enable CC/CV buck converter
 656:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_SET);
 356              		.loc 1 656 3 view .LVU71
 357 000c 8021     		movs	r1, #128
 358 000e A024     		movs	r4, #160
 359 0010 E405     		lsls	r4, r4, #23
 360 0012 0122     		movs	r2, #1
 361 0014 8900     		lsls	r1, r1, #2
 362 0016 2000     		movs	r0, r4
 363 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 364              	.LVL21:
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****   // Connect input voltage to buck converter
 659:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_SET);
 365              		.loc 1 659 3 view .LVU72
 366 001c 0122     		movs	r2, #1
 367 001e 1021     		movs	r1, #16
 368 0020 2000     		movs	r0, r4
 369 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 370              	.LVL22:
 660:Core/Src/main.c **** }
 371              		.loc 1 660 1 is_stmt 0 view .LVU73
 372              		@ sp needed
 373 0026 10BD     		pop	{r4, pc}
 374              		.cfi_endproc
 375              	.LFE51:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 19


 377              		.section	.text.Disable_buck_converter,"ax",%progbits
 378              		.align	1
 379              		.global	Disable_buck_converter
 380              		.syntax unified
 381              		.code	16
 382              		.thumb_func
 384              	Disable_buck_converter:
 385              	.LFB52:
 661:Core/Src/main.c **** 
 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** void Disable_buck_converter(void){
 386              		.loc 1 663 34 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 10B5     		push	{r4, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 4, -8
 393              		.cfi_offset 14, -4
 664:Core/Src/main.c ****     // Disable CC/CV buck converter
 665:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_RESET);
 394              		.loc 1 665 3 view .LVU75
 395 0002 8021     		movs	r1, #128
 396 0004 A024     		movs	r4, #160
 397 0006 E405     		lsls	r4, r4, #23
 398 0008 0022     		movs	r2, #0
 399 000a 8900     		lsls	r1, r1, #2
 400 000c 2000     		movs	r0, r4
 401 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 402              	.LVL23:
 666:Core/Src/main.c ****   
 667:Core/Src/main.c ****   // Disconnect input voltage from buck converter
 668:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_RESET);
 403              		.loc 1 668 3 view .LVU76
 404 0012 0022     		movs	r2, #0
 405 0014 1021     		movs	r1, #16
 406 0016 2000     		movs	r0, r4
 407 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 408              	.LVL24:
 669:Core/Src/main.c **** 
 670:Core/Src/main.c ****   // Disable load switches
 671:Core/Src/main.c ****   load_switch_disable();
 409              		.loc 1 671 3 view .LVU77
 410 001c FFF7FEFF 		bl	load_switch_disable
 411              	.LVL25:
 672:Core/Src/main.c **** }
 412              		.loc 1 672 1 is_stmt 0 view .LVU78
 413              		@ sp needed
 414 0020 10BD     		pop	{r4, pc}
 415              		.cfi_endproc
 416              	.LFE52:
 418              		.section	.text.Error_Handler,"ax",%progbits
 419              		.align	1
 420              		.global	Error_Handler
 421              		.syntax unified
 422              		.code	16
 423              		.thumb_func
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 20


 425              	Error_Handler:
 426              	.LFB53:
 673:Core/Src/main.c **** 
 674:Core/Src/main.c **** /* USER CODE END 4 */
 675:Core/Src/main.c **** 
 676:Core/Src/main.c **** /**
 677:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 678:Core/Src/main.c ****   * @retval None
 679:Core/Src/main.c ****   */
 680:Core/Src/main.c **** void Error_Handler(void)
 681:Core/Src/main.c **** {
 427              		.loc 1 681 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ Volatile: function does not return.
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 682:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 683:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 684:Core/Src/main.c ****   __disable_irq();
 433              		.loc 1 684 3 view .LVU80
 434              	.LBB7:
 435              	.LBI7:
 436              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 21


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 22


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 437              		.loc 2 140 27 view .LVU81
 438              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 439              		.loc 2 142 3 view .LVU82
 440              		.syntax divided
 441              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 23


 442 0000 72B6     		cpsid i
 443              	@ 0 "" 2
 444              		.thumb
 445              		.syntax unified
 446              	.L12:
 447              	.LBE8:
 448              	.LBE7:
 685:Core/Src/main.c ****   while (1)
 449              		.loc 1 685 3 discriminator 1 view .LVU83
 686:Core/Src/main.c ****   {
 687:Core/Src/main.c ****   }
 450              		.loc 1 687 3 discriminator 1 view .LVU84
 685:Core/Src/main.c ****   while (1)
 451              		.loc 1 685 9 discriminator 1 view .LVU85
 452 0002 FEE7     		b	.L12
 453              		.cfi_endproc
 454              	.LFE53:
 456              		.section	.text.MX_ADC_Init,"ax",%progbits
 457              		.align	1
 458              		.syntax unified
 459              		.code	16
 460              		.thumb_func
 462              	MX_ADC_Init:
 463              	.LFB42:
 371:Core/Src/main.c **** 
 464              		.loc 1 371 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 00B5     		push	{lr}
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 14, -4
 471 0002 83B0     		sub	sp, sp, #12
 472              		.cfi_def_cfa_offset 16
 377:Core/Src/main.c **** 
 473              		.loc 1 377 3 view .LVU87
 377:Core/Src/main.c **** 
 474              		.loc 1 377 26 is_stmt 0 view .LVU88
 475 0004 0822     		movs	r2, #8
 476 0006 0021     		movs	r1, #0
 477 0008 6846     		mov	r0, sp
 478 000a FFF7FEFF 		bl	memset
 479              	.LVL26:
 385:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 480              		.loc 1 385 3 is_stmt 1 view .LVU89
 385:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 481              		.loc 1 385 17 is_stmt 0 view .LVU90
 482 000e 2948     		ldr	r0, .L24
 483 0010 294B     		ldr	r3, .L24+4
 484 0012 0360     		str	r3, [r0]
 386:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 485              		.loc 1 386 3 is_stmt 1 view .LVU91
 386:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 486              		.loc 1 386 30 is_stmt 0 view .LVU92
 487 0014 0023     		movs	r3, #0
 488 0016 C363     		str	r3, [r0, #60]
 387:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 24


 489              		.loc 1 387 3 is_stmt 1 view .LVU93
 387:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 490              		.loc 1 387 28 is_stmt 0 view .LVU94
 491 0018 C022     		movs	r2, #192
 492 001a 1206     		lsls	r2, r2, #24
 493 001c 4260     		str	r2, [r0, #4]
 388:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 494              		.loc 1 388 3 is_stmt 1 view .LVU95
 388:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 495              		.loc 1 388 24 is_stmt 0 view .LVU96
 496 001e 8360     		str	r3, [r0, #8]
 389:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 497              		.loc 1 389 3 is_stmt 1 view .LVU97
 389:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 498              		.loc 1 389 26 is_stmt 0 view .LVU98
 499 0020 0722     		movs	r2, #7
 500 0022 8263     		str	r2, [r0, #56]
 390:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 501              		.loc 1 390 3 is_stmt 1 view .LVU99
 390:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 502              		.loc 1 390 26 is_stmt 0 view .LVU100
 503 0024 063A     		subs	r2, r2, #6
 504 0026 0261     		str	r2, [r0, #16]
 391:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 505              		.loc 1 391 3 is_stmt 1 view .LVU101
 391:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 506              		.loc 1 391 23 is_stmt 0 view .LVU102
 507 0028 C360     		str	r3, [r0, #12]
 392:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 508              		.loc 1 392 3 is_stmt 1 view .LVU103
 392:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 509              		.loc 1 392 32 is_stmt 0 view .LVU104
 510 002a 2021     		movs	r1, #32
 511 002c 4254     		strb	r2, [r0, r1]
 393:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 512              		.loc 1 393 3 is_stmt 1 view .LVU105
 393:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 513              		.loc 1 393 35 is_stmt 0 view .LVU106
 514 002e 0131     		adds	r1, r1, #1
 515 0030 4354     		strb	r3, [r0, r1]
 394:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 516              		.loc 1 394 3 is_stmt 1 view .LVU107
 394:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 517              		.loc 1 394 34 is_stmt 0 view .LVU108
 518 0032 8362     		str	r3, [r0, #40]
 395:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 519              		.loc 1 395 3 is_stmt 1 view .LVU109
 395:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 520              		.loc 1 395 30 is_stmt 0 view .LVU110
 521 0034 C221     		movs	r1, #194
 522 0036 FF31     		adds	r1, r1, #255
 523 0038 4162     		str	r1, [r0, #36]
 396:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 524              		.loc 1 396 3 is_stmt 1 view .LVU111
 396:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 525              		.loc 1 396 35 is_stmt 0 view .LVU112
 526 003a 9639     		subs	r1, r1, #150
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 25


 527 003c FF39     		subs	r1, r1, #255
 528 003e 4354     		strb	r3, [r0, r1]
 397:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 529              		.loc 1 397 3 is_stmt 1 view .LVU113
 397:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 530              		.loc 1 397 26 is_stmt 0 view .LVU114
 531 0040 2839     		subs	r1, r1, #40
 532 0042 4161     		str	r1, [r0, #20]
 398:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 533              		.loc 1 398 3 is_stmt 1 view .LVU115
 398:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 534              		.loc 1 398 21 is_stmt 0 view .LVU116
 535 0044 0363     		str	r3, [r0, #48]
 399:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 536              		.loc 1 399 3 is_stmt 1 view .LVU117
 399:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 537              		.loc 1 399 30 is_stmt 0 view .LVU118
 538 0046 8361     		str	r3, [r0, #24]
 400:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 539              		.loc 1 400 3 is_stmt 1 view .LVU119
 400:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 540              		.loc 1 400 35 is_stmt 0 view .LVU120
 541 0048 4263     		str	r2, [r0, #52]
 401:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 542              		.loc 1 401 3 is_stmt 1 view .LVU121
 401:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 543              		.loc 1 401 34 is_stmt 0 view .LVU122
 544 004a C361     		str	r3, [r0, #28]
 402:Core/Src/main.c ****   {
 545              		.loc 1 402 3 is_stmt 1 view .LVU123
 402:Core/Src/main.c ****   {
 546              		.loc 1 402 7 is_stmt 0 view .LVU124
 547 004c FFF7FEFF 		bl	HAL_ADC_Init
 548              	.LVL27:
 402:Core/Src/main.c ****   {
 549              		.loc 1 402 6 view .LVU125
 550 0050 0028     		cmp	r0, #0
 551 0052 24D1     		bne	.L19
 409:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 552              		.loc 1 409 3 is_stmt 1 view .LVU126
 409:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 553              		.loc 1 409 19 is_stmt 0 view .LVU127
 554 0054 194B     		ldr	r3, .L24+8
 555 0056 0093     		str	r3, [sp]
 410:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 556              		.loc 1 410 3 is_stmt 1 view .LVU128
 410:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 557              		.loc 1 410 16 is_stmt 0 view .LVU129
 558 0058 8023     		movs	r3, #128
 559 005a 5B01     		lsls	r3, r3, #5
 560 005c 0193     		str	r3, [sp, #4]
 411:Core/Src/main.c ****   {
 561              		.loc 1 411 3 is_stmt 1 view .LVU130
 411:Core/Src/main.c ****   {
 562              		.loc 1 411 7 is_stmt 0 view .LVU131
 563 005e 1548     		ldr	r0, .L24
 564 0060 6946     		mov	r1, sp
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 26


 565 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 566              	.LVL28:
 411:Core/Src/main.c ****   {
 567              		.loc 1 411 6 view .LVU132
 568 0066 0028     		cmp	r0, #0
 569 0068 1BD1     		bne	.L20
 418:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 570              		.loc 1 418 3 is_stmt 1 view .LVU133
 418:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 571              		.loc 1 418 19 is_stmt 0 view .LVU134
 572 006a 154B     		ldr	r3, .L24+12
 573 006c 0093     		str	r3, [sp]
 419:Core/Src/main.c ****   {
 574              		.loc 1 419 3 is_stmt 1 view .LVU135
 419:Core/Src/main.c ****   {
 575              		.loc 1 419 7 is_stmt 0 view .LVU136
 576 006e 1148     		ldr	r0, .L24
 577 0070 6946     		mov	r1, sp
 578 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 579              	.LVL29:
 419:Core/Src/main.c ****   {
 580              		.loc 1 419 6 view .LVU137
 581 0076 0028     		cmp	r0, #0
 582 0078 15D1     		bne	.L21
 426:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 583              		.loc 1 426 3 is_stmt 1 view .LVU138
 426:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 584              		.loc 1 426 19 is_stmt 0 view .LVU139
 585 007a 124B     		ldr	r3, .L24+16
 586 007c 0093     		str	r3, [sp]
 427:Core/Src/main.c ****   {
 587              		.loc 1 427 3 is_stmt 1 view .LVU140
 427:Core/Src/main.c ****   {
 588              		.loc 1 427 7 is_stmt 0 view .LVU141
 589 007e 0D48     		ldr	r0, .L24
 590 0080 6946     		mov	r1, sp
 591 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 592              	.LVL30:
 427:Core/Src/main.c ****   {
 593              		.loc 1 427 6 view .LVU142
 594 0086 0028     		cmp	r0, #0
 595 0088 0FD1     		bne	.L22
 434:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 596              		.loc 1 434 3 is_stmt 1 view .LVU143
 434:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 597              		.loc 1 434 19 is_stmt 0 view .LVU144
 598 008a 0F4B     		ldr	r3, .L24+20
 599 008c 0093     		str	r3, [sp]
 435:Core/Src/main.c ****   {
 600              		.loc 1 435 3 is_stmt 1 view .LVU145
 435:Core/Src/main.c ****   {
 601              		.loc 1 435 7 is_stmt 0 view .LVU146
 602 008e 0948     		ldr	r0, .L24
 603 0090 6946     		mov	r1, sp
 604 0092 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 605              	.LVL31:
 435:Core/Src/main.c ****   {
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 27


 606              		.loc 1 435 6 view .LVU147
 607 0096 0028     		cmp	r0, #0
 608 0098 09D1     		bne	.L23
 443:Core/Src/main.c **** 
 609              		.loc 1 443 1 view .LVU148
 610 009a 03B0     		add	sp, sp, #12
 611              		@ sp needed
 612 009c 00BD     		pop	{pc}
 613              	.L19:
 404:Core/Src/main.c ****   }
 614              		.loc 1 404 5 is_stmt 1 view .LVU149
 615 009e FFF7FEFF 		bl	Error_Handler
 616              	.LVL32:
 617              	.L20:
 413:Core/Src/main.c ****   }
 618              		.loc 1 413 5 view .LVU150
 619 00a2 FFF7FEFF 		bl	Error_Handler
 620              	.LVL33:
 621              	.L21:
 421:Core/Src/main.c ****   }
 622              		.loc 1 421 5 view .LVU151
 623 00a6 FFF7FEFF 		bl	Error_Handler
 624              	.LVL34:
 625              	.L22:
 429:Core/Src/main.c ****   }
 626              		.loc 1 429 5 view .LVU152
 627 00aa FFF7FEFF 		bl	Error_Handler
 628              	.LVL35:
 629              	.L23:
 437:Core/Src/main.c ****   }
 630              		.loc 1 437 5 view .LVU153
 631 00ae FFF7FEFF 		bl	Error_Handler
 632              	.LVL36:
 633              	.L25:
 634 00b2 C046     		.align	2
 635              	.L24:
 636 00b4 00000000 		.word	hadc
 637 00b8 00240140 		.word	1073816576
 638 00bc 20000014 		.word	335544352
 639 00c0 40000018 		.word	402653248
 640 00c4 8000001C 		.word	469762176
 641 00c8 00000244 		.word	1140981760
 642              		.cfi_endproc
 643              	.LFE42:
 645              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 646              		.align	1
 647              		.syntax unified
 648              		.code	16
 649              		.thumb_func
 651              	MX_USART2_UART_Init:
 652              	.LFB45:
 534:Core/Src/main.c **** 
 653              		.loc 1 534 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 28


 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 4, -8
 660              		.cfi_offset 14, -4
 543:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 661              		.loc 1 543 3 view .LVU155
 543:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 662              		.loc 1 543 19 is_stmt 0 view .LVU156
 663 0002 0B48     		ldr	r0, .L29
 664 0004 0B4B     		ldr	r3, .L29+4
 665 0006 0360     		str	r3, [r0]
 544:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 666              		.loc 1 544 3 is_stmt 1 view .LVU157
 544:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 667              		.loc 1 544 24 is_stmt 0 view .LVU158
 668 0008 E123     		movs	r3, #225
 669 000a 5B02     		lsls	r3, r3, #9
 670 000c 4360     		str	r3, [r0, #4]
 545:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 671              		.loc 1 545 3 is_stmt 1 view .LVU159
 545:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 672              		.loc 1 545 26 is_stmt 0 view .LVU160
 673 000e 0023     		movs	r3, #0
 674 0010 8360     		str	r3, [r0, #8]
 546:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 675              		.loc 1 546 3 is_stmt 1 view .LVU161
 546:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 676              		.loc 1 546 24 is_stmt 0 view .LVU162
 677 0012 C360     		str	r3, [r0, #12]
 547:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 678              		.loc 1 547 3 is_stmt 1 view .LVU163
 547:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 679              		.loc 1 547 22 is_stmt 0 view .LVU164
 680 0014 0361     		str	r3, [r0, #16]
 548:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 681              		.loc 1 548 3 is_stmt 1 view .LVU165
 548:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 682              		.loc 1 548 20 is_stmt 0 view .LVU166
 683 0016 0C22     		movs	r2, #12
 684 0018 4261     		str	r2, [r0, #20]
 549:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 685              		.loc 1 549 3 is_stmt 1 view .LVU167
 549:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 686              		.loc 1 549 25 is_stmt 0 view .LVU168
 687 001a 8361     		str	r3, [r0, #24]
 550:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 688              		.loc 1 550 3 is_stmt 1 view .LVU169
 550:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 689              		.loc 1 550 28 is_stmt 0 view .LVU170
 690 001c C361     		str	r3, [r0, #28]
 551:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 691              		.loc 1 551 3 is_stmt 1 view .LVU171
 551:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 692              		.loc 1 551 30 is_stmt 0 view .LVU172
 693 001e 0362     		str	r3, [r0, #32]
 552:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 694              		.loc 1 552 3 is_stmt 1 view .LVU173
 552:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 29


 695              		.loc 1 552 38 is_stmt 0 view .LVU174
 696 0020 4362     		str	r3, [r0, #36]
 553:Core/Src/main.c ****   {
 697              		.loc 1 553 3 is_stmt 1 view .LVU175
 553:Core/Src/main.c ****   {
 698              		.loc 1 553 7 is_stmt 0 view .LVU176
 699 0022 FFF7FEFF 		bl	HAL_UART_Init
 700              	.LVL37:
 553:Core/Src/main.c ****   {
 701              		.loc 1 553 6 view .LVU177
 702 0026 0028     		cmp	r0, #0
 703 0028 00D1     		bne	.L28
 561:Core/Src/main.c **** 
 704              		.loc 1 561 1 view .LVU178
 705              		@ sp needed
 706 002a 10BD     		pop	{r4, pc}
 707              	.L28:
 555:Core/Src/main.c ****   }
 708              		.loc 1 555 5 is_stmt 1 view .LVU179
 709 002c FFF7FEFF 		bl	Error_Handler
 710              	.LVL38:
 711              	.L30:
 712              		.align	2
 713              	.L29:
 714 0030 00000000 		.word	huart2
 715 0034 00440040 		.word	1073759232
 716              		.cfi_endproc
 717              	.LFE45:
 719              		.section	.text.MX_SPI1_Init,"ax",%progbits
 720              		.align	1
 721              		.syntax unified
 722              		.code	16
 723              		.thumb_func
 725              	MX_SPI1_Init:
 726              	.LFB43:
 451:Core/Src/main.c **** 
 727              		.loc 1 451 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731 0000 10B5     		push	{r4, lr}
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 4, -8
 734              		.cfi_offset 14, -4
 461:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 735              		.loc 1 461 3 view .LVU181
 461:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 736              		.loc 1 461 18 is_stmt 0 view .LVU182
 737 0002 0D48     		ldr	r0, .L34
 738 0004 0D4B     		ldr	r3, .L34+4
 739 0006 0360     		str	r3, [r0]
 462:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 740              		.loc 1 462 3 is_stmt 1 view .LVU183
 462:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 741              		.loc 1 462 19 is_stmt 0 view .LVU184
 742 0008 8223     		movs	r3, #130
 743 000a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 30


 744 000c 4360     		str	r3, [r0, #4]
 463:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 745              		.loc 1 463 3 is_stmt 1 view .LVU185
 463:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 746              		.loc 1 463 24 is_stmt 0 view .LVU186
 747 000e 0023     		movs	r3, #0
 748 0010 8360     		str	r3, [r0, #8]
 464:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 749              		.loc 1 464 3 is_stmt 1 view .LVU187
 464:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 750              		.loc 1 464 23 is_stmt 0 view .LVU188
 751 0012 C360     		str	r3, [r0, #12]
 465:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 752              		.loc 1 465 3 is_stmt 1 view .LVU189
 465:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 753              		.loc 1 465 26 is_stmt 0 view .LVU190
 754 0014 0361     		str	r3, [r0, #16]
 466:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 755              		.loc 1 466 3 is_stmt 1 view .LVU191
 466:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 756              		.loc 1 466 23 is_stmt 0 view .LVU192
 757 0016 4361     		str	r3, [r0, #20]
 467:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 758              		.loc 1 467 3 is_stmt 1 view .LVU193
 467:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 759              		.loc 1 467 18 is_stmt 0 view .LVU194
 760 0018 8022     		movs	r2, #128
 761 001a 9200     		lsls	r2, r2, #2
 762 001c 8261     		str	r2, [r0, #24]
 468:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 763              		.loc 1 468 3 is_stmt 1 view .LVU195
 468:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 764              		.loc 1 468 32 is_stmt 0 view .LVU196
 765 001e C361     		str	r3, [r0, #28]
 469:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 766              		.loc 1 469 3 is_stmt 1 view .LVU197
 469:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 767              		.loc 1 469 23 is_stmt 0 view .LVU198
 768 0020 0362     		str	r3, [r0, #32]
 470:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 769              		.loc 1 470 3 is_stmt 1 view .LVU199
 470:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 770              		.loc 1 470 21 is_stmt 0 view .LVU200
 771 0022 4362     		str	r3, [r0, #36]
 471:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 772              		.loc 1 471 3 is_stmt 1 view .LVU201
 471:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 773              		.loc 1 471 29 is_stmt 0 view .LVU202
 774 0024 8362     		str	r3, [r0, #40]
 472:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 775              		.loc 1 472 3 is_stmt 1 view .LVU203
 472:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 776              		.loc 1 472 28 is_stmt 0 view .LVU204
 777 0026 0733     		adds	r3, r3, #7
 778 0028 C362     		str	r3, [r0, #44]
 473:Core/Src/main.c ****   {
 779              		.loc 1 473 3 is_stmt 1 view .LVU205
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 31


 473:Core/Src/main.c ****   {
 780              		.loc 1 473 7 is_stmt 0 view .LVU206
 781 002a FFF7FEFF 		bl	HAL_SPI_Init
 782              	.LVL39:
 473:Core/Src/main.c ****   {
 783              		.loc 1 473 6 view .LVU207
 784 002e 0028     		cmp	r0, #0
 785 0030 00D1     		bne	.L33
 481:Core/Src/main.c **** 
 786              		.loc 1 481 1 view .LVU208
 787              		@ sp needed
 788 0032 10BD     		pop	{r4, pc}
 789              	.L33:
 475:Core/Src/main.c ****   }
 790              		.loc 1 475 5 is_stmt 1 view .LVU209
 791 0034 FFF7FEFF 		bl	Error_Handler
 792              	.LVL40:
 793              	.L35:
 794              		.align	2
 795              	.L34:
 796 0038 00000000 		.word	hspi1
 797 003c 00300140 		.word	1073819648
 798              		.cfi_endproc
 799              	.LFE43:
 801              		.section	.text.MX_TIM2_Init,"ax",%progbits
 802              		.align	1
 803              		.syntax unified
 804              		.code	16
 805              		.thumb_func
 807              	MX_TIM2_Init:
 808              	.LFB44:
 489:Core/Src/main.c **** 
 809              		.loc 1 489 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 24
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813 0000 00B5     		push	{lr}
 814              		.cfi_def_cfa_offset 4
 815              		.cfi_offset 14, -4
 816 0002 87B0     		sub	sp, sp, #28
 817              		.cfi_def_cfa_offset 32
 495:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 818              		.loc 1 495 3 view .LVU211
 495:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 819              		.loc 1 495 26 is_stmt 0 view .LVU212
 820 0004 1022     		movs	r2, #16
 821 0006 0021     		movs	r1, #0
 822 0008 02A8     		add	r0, sp, #8
 823 000a FFF7FEFF 		bl	memset
 824              	.LVL41:
 496:Core/Src/main.c **** 
 825              		.loc 1 496 3 is_stmt 1 view .LVU213
 496:Core/Src/main.c **** 
 826              		.loc 1 496 27 is_stmt 0 view .LVU214
 827 000e 0822     		movs	r2, #8
 828 0010 0021     		movs	r1, #0
 829 0012 6846     		mov	r0, sp
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 32


 830 0014 FFF7FEFF 		bl	memset
 831              	.LVL42:
 501:Core/Src/main.c ****   htim2.Init.Prescaler = 2000;
 832              		.loc 1 501 3 is_stmt 1 view .LVU215
 501:Core/Src/main.c ****   htim2.Init.Prescaler = 2000;
 833              		.loc 1 501 18 is_stmt 0 view .LVU216
 834 0018 1548     		ldr	r0, .L43
 835 001a 8023     		movs	r3, #128
 836 001c DB05     		lsls	r3, r3, #23
 837 001e 0360     		str	r3, [r0]
 502:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 838              		.loc 1 502 3 is_stmt 1 view .LVU217
 502:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 839              		.loc 1 502 24 is_stmt 0 view .LVU218
 840 0020 FA23     		movs	r3, #250
 841 0022 DB00     		lsls	r3, r3, #3
 842 0024 4360     		str	r3, [r0, #4]
 503:Core/Src/main.c ****   htim2.Init.Period = 1000;
 843              		.loc 1 503 3 is_stmt 1 view .LVU219
 503:Core/Src/main.c ****   htim2.Init.Period = 1000;
 844              		.loc 1 503 26 is_stmt 0 view .LVU220
 845 0026 0023     		movs	r3, #0
 846 0028 8360     		str	r3, [r0, #8]
 504:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 847              		.loc 1 504 3 is_stmt 1 view .LVU221
 504:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 848              		.loc 1 504 21 is_stmt 0 view .LVU222
 849 002a FA22     		movs	r2, #250
 850 002c 9200     		lsls	r2, r2, #2
 851 002e C260     		str	r2, [r0, #12]
 505:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 852              		.loc 1 505 3 is_stmt 1 view .LVU223
 505:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 853              		.loc 1 505 28 is_stmt 0 view .LVU224
 854 0030 0361     		str	r3, [r0, #16]
 506:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 855              		.loc 1 506 3 is_stmt 1 view .LVU225
 506:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 856              		.loc 1 506 32 is_stmt 0 view .LVU226
 857 0032 4361     		str	r3, [r0, #20]
 507:Core/Src/main.c ****   {
 858              		.loc 1 507 3 is_stmt 1 view .LVU227
 507:Core/Src/main.c ****   {
 859              		.loc 1 507 7 is_stmt 0 view .LVU228
 860 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 861              	.LVL43:
 507:Core/Src/main.c ****   {
 862              		.loc 1 507 6 view .LVU229
 863 0038 0028     		cmp	r0, #0
 864 003a 13D1     		bne	.L40
 511:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 865              		.loc 1 511 3 is_stmt 1 view .LVU230
 511:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 866              		.loc 1 511 34 is_stmt 0 view .LVU231
 867 003c 8023     		movs	r3, #128
 868 003e 5B01     		lsls	r3, r3, #5
 869 0040 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 33


 512:Core/Src/main.c ****   {
 870              		.loc 1 512 3 is_stmt 1 view .LVU232
 512:Core/Src/main.c ****   {
 871              		.loc 1 512 7 is_stmt 0 view .LVU233
 872 0042 0B48     		ldr	r0, .L43
 873 0044 02A9     		add	r1, sp, #8
 874 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 875              	.LVL44:
 512:Core/Src/main.c ****   {
 876              		.loc 1 512 6 view .LVU234
 877 004a 0028     		cmp	r0, #0
 878 004c 0CD1     		bne	.L41
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 879              		.loc 1 516 3 is_stmt 1 view .LVU235
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 880              		.loc 1 516 37 is_stmt 0 view .LVU236
 881 004e 0023     		movs	r3, #0
 882 0050 0093     		str	r3, [sp]
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 883              		.loc 1 517 3 is_stmt 1 view .LVU237
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 884              		.loc 1 517 33 is_stmt 0 view .LVU238
 885 0052 0193     		str	r3, [sp, #4]
 518:Core/Src/main.c ****   {
 886              		.loc 1 518 3 is_stmt 1 view .LVU239
 518:Core/Src/main.c ****   {
 887              		.loc 1 518 7 is_stmt 0 view .LVU240
 888 0054 0648     		ldr	r0, .L43
 889 0056 6946     		mov	r1, sp
 890 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 891              	.LVL45:
 518:Core/Src/main.c ****   {
 892              		.loc 1 518 6 view .LVU241
 893 005c 0028     		cmp	r0, #0
 894 005e 05D1     		bne	.L42
 526:Core/Src/main.c **** 
 895              		.loc 1 526 1 view .LVU242
 896 0060 07B0     		add	sp, sp, #28
 897              		@ sp needed
 898 0062 00BD     		pop	{pc}
 899              	.L40:
 509:Core/Src/main.c ****   }
 900              		.loc 1 509 5 is_stmt 1 view .LVU243
 901 0064 FFF7FEFF 		bl	Error_Handler
 902              	.LVL46:
 903              	.L41:
 514:Core/Src/main.c ****   }
 904              		.loc 1 514 5 view .LVU244
 905 0068 FFF7FEFF 		bl	Error_Handler
 906              	.LVL47:
 907              	.L42:
 520:Core/Src/main.c ****   }
 908              		.loc 1 520 5 view .LVU245
 909 006c FFF7FEFF 		bl	Error_Handler
 910              	.LVL48:
 911              	.L44:
 912              		.align	2
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 34


 913              	.L43:
 914 0070 00000000 		.word	htim2
 915              		.cfi_endproc
 916              	.LFE44:
 918              		.section	.text.SystemClock_Config,"ax",%progbits
 919              		.align	1
 920              		.global	SystemClock_Config
 921              		.syntax unified
 922              		.code	16
 923              		.thumb_func
 925              	SystemClock_Config:
 926              	.LFB41:
 322:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 927              		.loc 1 322 1 view -0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 96
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931 0000 00B5     		push	{lr}
 932              		.cfi_def_cfa_offset 4
 933              		.cfi_offset 14, -4
 934 0002 99B0     		sub	sp, sp, #100
 935              		.cfi_def_cfa_offset 104
 323:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 936              		.loc 1 323 3 view .LVU247
 323:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 937              		.loc 1 323 22 is_stmt 0 view .LVU248
 938 0004 3422     		movs	r2, #52
 939 0006 0021     		movs	r1, #0
 940 0008 0BA8     		add	r0, sp, #44
 941 000a FFF7FEFF 		bl	memset
 942              	.LVL49:
 324:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 943              		.loc 1 324 3 is_stmt 1 view .LVU249
 324:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 944              		.loc 1 324 22 is_stmt 0 view .LVU250
 945 000e 1422     		movs	r2, #20
 946 0010 0021     		movs	r1, #0
 947 0012 06A8     		add	r0, sp, #24
 948 0014 FFF7FEFF 		bl	memset
 949              	.LVL50:
 325:Core/Src/main.c **** 
 950              		.loc 1 325 3 is_stmt 1 view .LVU251
 325:Core/Src/main.c **** 
 951              		.loc 1 325 28 is_stmt 0 view .LVU252
 952 0018 1822     		movs	r2, #24
 953 001a 0021     		movs	r1, #0
 954 001c 6846     		mov	r0, sp
 955 001e FFF7FEFF 		bl	memset
 956              	.LVL51:
 329:Core/Src/main.c **** 
 957              		.loc 1 329 3 is_stmt 1 view .LVU253
 958 0022 1A49     		ldr	r1, .L52
 959 0024 0A68     		ldr	r2, [r1]
 960 0026 1A4B     		ldr	r3, .L52+4
 961 0028 1A40     		ands	r2, r3
 962 002a 8023     		movs	r3, #128
 963 002c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 35


 964 002e 1343     		orrs	r3, r2
 965 0030 0B60     		str	r3, [r1]
 334:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 966              		.loc 1 334 3 view .LVU254
 334:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 967              		.loc 1 334 36 is_stmt 0 view .LVU255
 968 0032 1023     		movs	r3, #16
 969 0034 0B93     		str	r3, [sp, #44]
 335:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 970              		.loc 1 335 3 is_stmt 1 view .LVU256
 335:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 971              		.loc 1 335 30 is_stmt 0 view .LVU257
 972 0036 0F3B     		subs	r3, r3, #15
 973 0038 1193     		str	r3, [sp, #68]
 336:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 974              		.loc 1 336 3 is_stmt 1 view .LVU258
 336:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 975              		.loc 1 336 41 is_stmt 0 view .LVU259
 976 003a 0023     		movs	r3, #0
 977 003c 1293     		str	r3, [sp, #72]
 337:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 978              		.loc 1 337 3 is_stmt 1 view .LVU260
 337:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 979              		.loc 1 337 35 is_stmt 0 view .LVU261
 980 003e A022     		movs	r2, #160
 981 0040 1202     		lsls	r2, r2, #8
 982 0042 1392     		str	r2, [sp, #76]
 338:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 983              		.loc 1 338 3 is_stmt 1 view .LVU262
 338:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 984              		.loc 1 338 34 is_stmt 0 view .LVU263
 985 0044 1493     		str	r3, [sp, #80]
 339:Core/Src/main.c ****   {
 986              		.loc 1 339 3 is_stmt 1 view .LVU264
 339:Core/Src/main.c ****   {
 987              		.loc 1 339 7 is_stmt 0 view .LVU265
 988 0046 0BA8     		add	r0, sp, #44
 989 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 990              	.LVL52:
 339:Core/Src/main.c ****   {
 991              		.loc 1 339 6 view .LVU266
 992 004c 0028     		cmp	r0, #0
 993 004e 17D1     		bne	.L49
 346:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 994              		.loc 1 346 3 is_stmt 1 view .LVU267
 346:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 995              		.loc 1 346 31 is_stmt 0 view .LVU268
 996 0050 0F23     		movs	r3, #15
 997 0052 0693     		str	r3, [sp, #24]
 348:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 998              		.loc 1 348 3 is_stmt 1 view .LVU269
 348:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 999              		.loc 1 348 34 is_stmt 0 view .LVU270
 1000 0054 0023     		movs	r3, #0
 1001 0056 0793     		str	r3, [sp, #28]
 349:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1002              		.loc 1 349 3 is_stmt 1 view .LVU271
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 36


 349:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1003              		.loc 1 349 35 is_stmt 0 view .LVU272
 1004 0058 0893     		str	r3, [sp, #32]
 350:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1005              		.loc 1 350 3 is_stmt 1 view .LVU273
 350:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1006              		.loc 1 350 36 is_stmt 0 view .LVU274
 1007 005a 0993     		str	r3, [sp, #36]
 351:Core/Src/main.c **** 
 1008              		.loc 1 351 3 is_stmt 1 view .LVU275
 351:Core/Src/main.c **** 
 1009              		.loc 1 351 36 is_stmt 0 view .LVU276
 1010 005c 0A93     		str	r3, [sp, #40]
 353:Core/Src/main.c ****   {
 1011              		.loc 1 353 3 is_stmt 1 view .LVU277
 353:Core/Src/main.c ****   {
 1012              		.loc 1 353 7 is_stmt 0 view .LVU278
 1013 005e 0021     		movs	r1, #0
 1014 0060 06A8     		add	r0, sp, #24
 1015 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1016              	.LVL53:
 353:Core/Src/main.c ****   {
 1017              		.loc 1 353 6 view .LVU279
 1018 0066 0028     		cmp	r0, #0
 1019 0068 0CD1     		bne	.L50
 357:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1020              		.loc 1 357 3 is_stmt 1 view .LVU280
 357:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1021              		.loc 1 357 38 is_stmt 0 view .LVU281
 1022 006a 0223     		movs	r3, #2
 1023 006c 0093     		str	r3, [sp]
 358:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1024              		.loc 1 358 3 is_stmt 1 view .LVU282
 358:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1025              		.loc 1 358 38 is_stmt 0 view .LVU283
 1026 006e 0023     		movs	r3, #0
 1027 0070 0293     		str	r3, [sp, #8]
 359:Core/Src/main.c ****   {
 1028              		.loc 1 359 3 is_stmt 1 view .LVU284
 359:Core/Src/main.c ****   {
 1029              		.loc 1 359 7 is_stmt 0 view .LVU285
 1030 0072 6846     		mov	r0, sp
 1031 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1032              	.LVL54:
 359:Core/Src/main.c ****   {
 1033              		.loc 1 359 6 view .LVU286
 1034 0078 0028     		cmp	r0, #0
 1035 007a 05D1     		bne	.L51
 363:Core/Src/main.c **** 
 1036              		.loc 1 363 1 view .LVU287
 1037 007c 19B0     		add	sp, sp, #100
 1038              		@ sp needed
 1039 007e 00BD     		pop	{pc}
 1040              	.L49:
 341:Core/Src/main.c ****   }
 1041              		.loc 1 341 5 is_stmt 1 view .LVU288
 1042 0080 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 37


 1043              	.LVL55:
 1044              	.L50:
 355:Core/Src/main.c ****   }
 1045              		.loc 1 355 5 view .LVU289
 1046 0084 FFF7FEFF 		bl	Error_Handler
 1047              	.LVL56:
 1048              	.L51:
 361:Core/Src/main.c ****   }
 1049              		.loc 1 361 5 view .LVU290
 1050 0088 FFF7FEFF 		bl	Error_Handler
 1051              	.LVL57:
 1052              	.L53:
 1053              		.align	2
 1054              	.L52:
 1055 008c 00700040 		.word	1073770496
 1056 0090 FFE7FFFF 		.word	-6145
 1057              		.cfi_endproc
 1058              	.LFE41:
 1060              		.global	__aeabi_idiv
 1061              		.section	.text.main,"ax",%progbits
 1062              		.align	1
 1063              		.global	main
 1064              		.syntax unified
 1065              		.code	16
 1066              		.thumb_func
 1068              	main:
 1069              	.LFB40:
 109:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1070              		.loc 1 109 1 view -0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 16
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1075              		.cfi_def_cfa_offset 20
 1076              		.cfi_offset 4, -20
 1077              		.cfi_offset 5, -16
 1078              		.cfi_offset 6, -12
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 C646     		mov	lr, r8
 1082 0004 00B5     		push	{lr}
 1083              		.cfi_def_cfa_offset 24
 1084              		.cfi_offset 8, -24
 1085 0006 84B0     		sub	sp, sp, #16
 1086              		.cfi_def_cfa_offset 40
 117:Core/Src/main.c **** 
 1087              		.loc 1 117 3 view .LVU292
 1088 0008 FFF7FEFF 		bl	HAL_Init
 1089              	.LVL58:
 124:Core/Src/main.c **** 
 1090              		.loc 1 124 3 view .LVU293
 1091 000c FFF7FEFF 		bl	SystemClock_Config
 1092              	.LVL59:
 131:Core/Src/main.c ****   MX_ADC_Init();
 1093              		.loc 1 131 3 view .LVU294
 1094 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1095              	.LVL60:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 38


 132:Core/Src/main.c ****   MX_USART2_UART_Init();
 1096              		.loc 1 132 3 view .LVU295
 1097 0014 FFF7FEFF 		bl	MX_ADC_Init
 1098              	.LVL61:
 133:Core/Src/main.c ****   MX_SPI1_Init();
 1099              		.loc 1 133 3 view .LVU296
 1100 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 1101              	.LVL62:
 134:Core/Src/main.c ****   MX_TIM2_Init();
 1102              		.loc 1 134 3 view .LVU297
 1103 001c FFF7FEFF 		bl	MX_SPI1_Init
 1104              	.LVL63:
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1105              		.loc 1 135 3 view .LVU298
 1106 0020 FFF7FEFF 		bl	MX_TIM2_Init
 1107              	.LVL64:
 138:Core/Src/main.c **** 
 1108              		.loc 1 138 3 view .LVU299
 1109 0024 9C48     		ldr	r0, .L71
 1110 0026 0021     		movs	r1, #0
 1111 0028 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1112              	.LVL65:
 1113 002c 52E0     		b	.L70
 1114              	.L63:
 1115              	.LBB9:
 197:Core/Src/main.c **** 
 1116              		.loc 1 197 9 view .LVU300
 1117 002e FFF7FEFF 		bl	Disable_buck_converter
 1118              	.LVL66:
 200:Core/Src/main.c ****           current_state = START_CHARGING;
 1119              		.loc 1 200 9 view .LVU301
 200:Core/Src/main.c ****           current_state = START_CHARGING;
 1120              		.loc 1 200 43 is_stmt 0 view .LVU302
 1121 0032 9A4B     		ldr	r3, .L71+4
 1122 0034 1A88     		ldrh	r2, [r3]
 1123 0036 9A4B     		ldr	r3, .L71+8
 1124 0038 D318     		adds	r3, r2, r3
 1125 003a 9BB2     		uxth	r3, r3
 200:Core/Src/main.c ****           current_state = START_CHARGING;
 1126              		.loc 1 200 11 view .LVU303
 1127 003c 9949     		ldr	r1, .L71+12
 1128 003e 8B42     		cmp	r3, r1
 1129 0040 03D8     		bhi	.L64
 201:Core/Src/main.c ****           break;
 1130              		.loc 1 201 11 is_stmt 1 view .LVU304
 201:Core/Src/main.c ****           break;
 1131              		.loc 1 201 25 is_stmt 0 view .LVU305
 1132 0042 994B     		ldr	r3, .L71+16
 1133 0044 0122     		movs	r2, #1
 1134 0046 1A70     		strb	r2, [r3]
 202:Core/Src/main.c ****         }
 1135              		.loc 1 202 11 is_stmt 1 view .LVU306
 1136 0048 26E0     		b	.L65
 1137              	.L64:
 206:Core/Src/main.c ****           current_state = SLEEP;
 1138              		.loc 1 206 9 view .LVU307
 206:Core/Src/main.c ****           current_state = SLEEP;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 39


 1139              		.loc 1 206 11 is_stmt 0 view .LVU308
 1140 004a FA23     		movs	r3, #250
 1141 004c 9B00     		lsls	r3, r3, #2
 1142 004e 9A42     		cmp	r2, r3
 1143 0050 02D2     		bcs	.L66
 207:Core/Src/main.c ****         }
 1144              		.loc 1 207 11 is_stmt 1 view .LVU309
 207:Core/Src/main.c ****         }
 1145              		.loc 1 207 25 is_stmt 0 view .LVU310
 1146 0052 954B     		ldr	r3, .L71+16
 1147 0054 0522     		movs	r2, #5
 1148 0056 1A70     		strb	r2, [r3]
 1149              	.L66:
 210:Core/Src/main.c ****         spi_buffer[1] = 100;
 1150              		.loc 1 210 9 is_stmt 1 view .LVU311
 1151 0058 8025     		movs	r5, #128
 1152 005a ED01     		lsls	r5, r5, #7
 1153 005c A024     		movs	r4, #160
 1154 005e E405     		lsls	r4, r4, #23
 1155 0060 0022     		movs	r2, #0
 1156 0062 2900     		movs	r1, r5
 1157 0064 2000     		movs	r0, r4
 1158 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1159              	.LVL67:
 211:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 100);
 1160              		.loc 1 211 9 view .LVU312
 211:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 100);
 1161              		.loc 1 211 23 is_stmt 0 view .LVU313
 1162 006a 9049     		ldr	r1, .L71+20
 1163 006c 6423     		movs	r3, #100
 1164 006e 4B70     		strb	r3, [r1, #1]
 212:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 1165              		.loc 1 212 9 is_stmt 1 view .LVU314
 1166 0070 8F48     		ldr	r0, .L71+24
 1167 0072 0222     		movs	r2, #2
 1168 0074 FFF7FEFF 		bl	HAL_SPI_Transmit
 1169              	.LVL68:
 213:Core/Src/main.c **** 
 1170              		.loc 1 213 9 view .LVU315
 1171 0078 0122     		movs	r2, #1
 1172 007a 2900     		movs	r1, r5
 1173 007c 2000     		movs	r0, r4
 1174 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1175              	.LVL69:
 216:Core/Src/main.c ****       break;
 1176              		.loc 1 216 9 view .LVU316
 1177 0082 FA20     		movs	r0, #250
 1178 0084 4000     		lsls	r0, r0, #1
 1179 0086 0100     		movs	r1, r0
 1180 0088 FFF7FEFF 		bl	led_blink
 1181              	.LVL70:
 217:Core/Src/main.c ****       case START_CHARGING: 
 1182              		.loc 1 217 7 view .LVU317
 1183 008c 04E0     		b	.L65
 1184              	.L62:
 220:Core/Src/main.c **** 
 1185              		.loc 1 220 9 view .LVU318
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 40


 1186 008e FFF7FEFF 		bl	Enable_buck_converter
 1187              	.LVL71:
 223:Core/Src/main.c ****       break;
 1188              		.loc 1 223 9 view .LVU319
 223:Core/Src/main.c ****       break;
 1189              		.loc 1 223 23 is_stmt 0 view .LVU320
 1190 0092 854B     		ldr	r3, .L71+16
 1191 0094 0222     		movs	r2, #2
 1192 0096 1A70     		strb	r2, [r3]
 224:Core/Src/main.c ****       case CHARGING:
 1193              		.loc 1 224 7 is_stmt 1 view .LVU321
 1194              	.L65:
 299:Core/Src/main.c ****     uint8_t buffer [length];
 1195              		.loc 1 299 5 discriminator 1 view .LVU322
 1196              	.LVL72:
 300:Core/Src/main.c ****     buffer [0] = 0x02;
 1197              		.loc 1 300 5 discriminator 1 view .LVU323
 301:Core/Src/main.c ****     buffer [1] = length;
 1198              		.loc 1 301 5 discriminator 1 view .LVU324
 301:Core/Src/main.c ****     buffer [1] = length;
 1199              		.loc 1 301 16 is_stmt 0 discriminator 1 view .LVU325
 1200 0098 01A9     		add	r1, sp, #4
 1201              	.LVL73:
 301:Core/Src/main.c ****     buffer [1] = length;
 1202              		.loc 1 301 16 discriminator 1 view .LVU326
 1203 009a 0223     		movs	r3, #2
 1204 009c 0B70     		strb	r3, [r1]
 302:Core/Src/main.c ****     buffer [2] = (input_voltage_mv >> 8);
 1205              		.loc 1 302 5 is_stmt 1 discriminator 1 view .LVU327
 302:Core/Src/main.c ****     buffer [2] = (input_voltage_mv >> 8);
 1206              		.loc 1 302 16 is_stmt 0 discriminator 1 view .LVU328
 1207 009e 0833     		adds	r3, r3, #8
 1208 00a0 4B70     		strb	r3, [r1, #1]
 303:Core/Src/main.c ****     buffer [3] = (uint8_t)(input_voltage_mv);
 1209              		.loc 1 303 5 is_stmt 1 discriminator 1 view .LVU329
 303:Core/Src/main.c ****     buffer [3] = (uint8_t)(input_voltage_mv);
 1210              		.loc 1 303 16 is_stmt 0 discriminator 1 view .LVU330
 1211 00a2 7E4B     		ldr	r3, .L71+4
 1212 00a4 1B88     		ldrh	r3, [r3]
 1213 00a6 1A0A     		lsrs	r2, r3, #8
 1214 00a8 8A70     		strb	r2, [r1, #2]
 304:Core/Src/main.c ****     buffer [4] = (buck_output_voltage_mv >> 8);
 1215              		.loc 1 304 5 is_stmt 1 discriminator 1 view .LVU331
 304:Core/Src/main.c ****     buffer [4] = (buck_output_voltage_mv >> 8);
 1216              		.loc 1 304 16 is_stmt 0 discriminator 1 view .LVU332
 1217 00aa CB70     		strb	r3, [r1, #3]
 305:Core/Src/main.c ****     buffer [5] = (uint8_t)(buck_output_voltage_mv);
 1218              		.loc 1 305 5 is_stmt 1 discriminator 1 view .LVU333
 305:Core/Src/main.c ****     buffer [5] = (uint8_t)(buck_output_voltage_mv);
 1219              		.loc 1 305 16 is_stmt 0 discriminator 1 view .LVU334
 1220 00ac 814B     		ldr	r3, .L71+28
 1221 00ae 1B88     		ldrh	r3, [r3]
 1222 00b0 1A0A     		lsrs	r2, r3, #8
 1223 00b2 0A71     		strb	r2, [r1, #4]
 306:Core/Src/main.c ****     buffer [6] = (buck_current_ma >> 8);
 1224              		.loc 1 306 5 is_stmt 1 discriminator 1 view .LVU335
 306:Core/Src/main.c ****     buffer [6] = (buck_current_ma >> 8);
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 41


 1225              		.loc 1 306 16 is_stmt 0 discriminator 1 view .LVU336
 1226 00b4 4B71     		strb	r3, [r1, #5]
 307:Core/Src/main.c ****     buffer [7] = (uint8_t)(buck_current_ma);
 1227              		.loc 1 307 5 is_stmt 1 discriminator 1 view .LVU337
 307:Core/Src/main.c ****     buffer [7] = (uint8_t)(buck_current_ma);
 1228              		.loc 1 307 16 is_stmt 0 discriminator 1 view .LVU338
 1229 00b6 804B     		ldr	r3, .L71+32
 1230 00b8 1B88     		ldrh	r3, [r3]
 1231 00ba 1A0A     		lsrs	r2, r3, #8
 1232 00bc 8A71     		strb	r2, [r1, #6]
 308:Core/Src/main.c ****     buffer [8] = (supply_voltage_mv >> 8);
 1233              		.loc 1 308 5 is_stmt 1 discriminator 1 view .LVU339
 308:Core/Src/main.c ****     buffer [8] = (supply_voltage_mv >> 8);
 1234              		.loc 1 308 16 is_stmt 0 discriminator 1 view .LVU340
 1235 00be CB71     		strb	r3, [r1, #7]
 309:Core/Src/main.c ****     buffer [9] = (uint8_t)(supply_voltage_mv);
 1236              		.loc 1 309 5 is_stmt 1 discriminator 1 view .LVU341
 309:Core/Src/main.c ****     buffer [9] = (uint8_t)(supply_voltage_mv);
 1237              		.loc 1 309 16 is_stmt 0 discriminator 1 view .LVU342
 1238 00c0 7E4B     		ldr	r3, .L71+36
 1239 00c2 1B88     		ldrh	r3, [r3]
 1240 00c4 1A0A     		lsrs	r2, r3, #8
 1241 00c6 0A72     		strb	r2, [r1, #8]
 310:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, buffer, length, 100);
 1242              		.loc 1 310 5 is_stmt 1 discriminator 1 view .LVU343
 310:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, buffer, length, 100);
 1243              		.loc 1 310 16 is_stmt 0 discriminator 1 view .LVU344
 1244 00c8 4B72     		strb	r3, [r1, #9]
 311:Core/Src/main.c **** 
 1245              		.loc 1 311 5 is_stmt 1 discriminator 1 view .LVU345
 1246 00ca 7D48     		ldr	r0, .L71+40
 1247 00cc 6423     		movs	r3, #100
 1248 00ce 0A22     		movs	r2, #10
 1249 00d0 FFF7FEFF 		bl	HAL_UART_Transmit
 1250              	.LVL74:
 311:Core/Src/main.c **** 
 1251              		.loc 1 311 5 is_stmt 0 discriminator 1 view .LVU346
 1252              	.LBE9:
 144:Core/Src/main.c ****   {
 1253              		.loc 1 144 9 is_stmt 1 discriminator 1 view .LVU347
 1254              	.LVL75:
 1255              	.L70:
 144:Core/Src/main.c ****   {
 1256              		.loc 1 144 3 view .LVU348
 1257              	.LBB10:
 151:Core/Src/main.c ****     
 1258              		.loc 1 151 3 view .LVU349
 1259 00d4 704C     		ldr	r4, .L71
 1260 00d6 2000     		movs	r0, r4
 1261 00d8 FFF7FEFF 		bl	HAL_ADC_Start
 1262              	.LVL76:
 154:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 1263              		.loc 1 154 5 view .LVU350
 1264 00dc 6421     		movs	r1, #100
 1265 00de 2000     		movs	r0, r4
 1266 00e0 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1267              	.LVL77:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 42


 155:Core/Src/main.c **** 
 1268              		.loc 1 155 3 view .LVU351
 155:Core/Src/main.c **** 
 1269              		.loc 1 155 13 is_stmt 0 view .LVU352
 1270 00e4 2000     		movs	r0, r4
 1271 00e6 FFF7FEFF 		bl	HAL_ADC_GetValue
 1272              	.LVL78:
 155:Core/Src/main.c **** 
 1273              		.loc 1 155 11 view .LVU353
 1274 00ea 764D     		ldr	r5, .L71+44
 1275 00ec 2880     		strh	r0, [r5]
 158:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
 1276              		.loc 1 158 5 is_stmt 1 view .LVU354
 1277 00ee 6421     		movs	r1, #100
 1278 00f0 2000     		movs	r0, r4
 1279 00f2 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1280              	.LVL79:
 159:Core/Src/main.c **** 
 1281              		.loc 1 159 3 view .LVU355
 159:Core/Src/main.c **** 
 1282              		.loc 1 159 13 is_stmt 0 view .LVU356
 1283 00f6 2000     		movs	r0, r4
 1284 00f8 FFF7FEFF 		bl	HAL_ADC_GetValue
 1285              	.LVL80:
 159:Core/Src/main.c **** 
 1286              		.loc 1 159 11 view .LVU357
 1287 00fc 724E     		ldr	r6, .L71+48
 1288 00fe 3080     		strh	r0, [r6]
 162:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 1289              		.loc 1 162 5 is_stmt 1 view .LVU358
 1290 0100 6421     		movs	r1, #100
 1291 0102 2000     		movs	r0, r4
 1292 0104 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1293              	.LVL81:
 163:Core/Src/main.c **** 
 1294              		.loc 1 163 3 view .LVU359
 163:Core/Src/main.c **** 
 1295              		.loc 1 163 13 is_stmt 0 view .LVU360
 1296 0108 2000     		movs	r0, r4
 1297 010a FFF7FEFF 		bl	HAL_ADC_GetValue
 1298              	.LVL82:
 163:Core/Src/main.c **** 
 1299              		.loc 1 163 11 view .LVU361
 1300 010e 6F4F     		ldr	r7, .L71+52
 1301 0110 3880     		strh	r0, [r7]
 166:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 1302              		.loc 1 166 5 is_stmt 1 view .LVU362
 1303 0112 6421     		movs	r1, #100
 1304 0114 2000     		movs	r0, r4
 1305 0116 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1306              	.LVL83:
 167:Core/Src/main.c **** 
 1307              		.loc 1 167 3 view .LVU363
 167:Core/Src/main.c **** 
 1308              		.loc 1 167 13 is_stmt 0 view .LVU364
 1309 011a 2000     		movs	r0, r4
 1310 011c FFF7FEFF 		bl	HAL_ADC_GetValue
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 43


 1311              	.LVL84:
 167:Core/Src/main.c **** 
 1312              		.loc 1 167 11 view .LVU365
 1313 0120 6B4B     		ldr	r3, .L71+56
 1314 0122 9846     		mov	r8, r3
 1315 0124 1880     		strh	r0, [r3]
 170:Core/Src/main.c **** 
 1316              		.loc 1 170 5 is_stmt 1 view .LVU366
 1317 0126 2000     		movs	r0, r4
 1318 0128 FFF7FEFF 		bl	HAL_ADC_Stop
 1319              	.LVL85:
 173:Core/Src/main.c **** 
 1320              		.loc 1 173 5 view .LVU367
 173:Core/Src/main.c **** 
 1321              		.loc 1 173 34 is_stmt 0 view .LVU368
 1322 012c 4346     		mov	r3, r8
 1323 012e 1988     		ldrh	r1, [r3]
 1324 0130 9620     		movs	r0, #150
 1325 0132 C003     		lsls	r0, r0, #15
 1326 0134 FFF7FEFF 		bl	__aeabi_idiv
 1327              	.LVL86:
 173:Core/Src/main.c **** 
 1328              		.loc 1 173 23 view .LVU369
 1329 0138 604B     		ldr	r3, .L71+36
 1330 013a 1880     		strh	r0, [r3]
 176:Core/Src/main.c **** 
 1331              		.loc 1 176 5 is_stmt 1 view .LVU370
 1332 013c 0004     		lsls	r0, r0, #16
 1333 013e 040C     		lsrs	r4, r0, #16
 176:Core/Src/main.c **** 
 1334              		.loc 1 176 31 is_stmt 0 view .LVU371
 1335 0140 2A88     		ldrh	r2, [r5]
 1336 0142 6243     		muls	r2, r4
 176:Core/Src/main.c **** 
 1337              		.loc 1 176 49 view .LVU372
 1338 0144 D317     		asrs	r3, r2, #31
 1339 0146 1B05     		lsls	r3, r3, #20
 1340 0148 1B0D     		lsrs	r3, r3, #20
 1341 014a 9B18     		adds	r3, r3, r2
 1342 014c 1B13     		asrs	r3, r3, #12
 176:Core/Src/main.c **** 
 1343              		.loc 1 176 54 view .LVU373
 1344 014e 6148     		ldr	r0, .L71+60
 1345 0150 5843     		muls	r0, r3
 176:Core/Src/main.c **** 
 1346              		.loc 1 176 61 view .LVU374
 1347 0152 6149     		ldr	r1, .L71+64
 1348 0154 FFF7FEFF 		bl	__aeabi_idiv
 1349              	.LVL87:
 176:Core/Src/main.c **** 
 1350              		.loc 1 176 22 view .LVU375
 1351 0158 85B2     		uxth	r5, r0
 1352 015a 504B     		ldr	r3, .L71+4
 1353 015c 1D80     		strh	r5, [r3]
 179:Core/Src/main.c **** 
 1354              		.loc 1 179 5 is_stmt 1 view .LVU376
 179:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 44


 1355              		.loc 1 179 37 is_stmt 0 view .LVU377
 1356 015e 3A88     		ldrh	r2, [r7]
 1357 0160 6243     		muls	r2, r4
 179:Core/Src/main.c **** 
 1358              		.loc 1 179 55 view .LVU378
 1359 0162 D317     		asrs	r3, r2, #31
 1360 0164 1B05     		lsls	r3, r3, #20
 1361 0166 1B0D     		lsrs	r3, r3, #20
 1362 0168 9B18     		adds	r3, r3, r2
 1363 016a 1B13     		asrs	r3, r3, #12
 179:Core/Src/main.c **** 
 1364              		.loc 1 179 60 view .LVU379
 1365 016c 5B48     		ldr	r0, .L71+68
 1366 016e 5843     		muls	r0, r3
 179:Core/Src/main.c **** 
 1367              		.loc 1 179 66 view .LVU380
 1368 0170 5B49     		ldr	r1, .L71+72
 1369 0172 FFF7FEFF 		bl	__aeabi_idiv
 1370              	.LVL88:
 179:Core/Src/main.c **** 
 1371              		.loc 1 179 28 view .LVU381
 1372 0176 4F4B     		ldr	r3, .L71+28
 1373 0178 1880     		strh	r0, [r3]
 182:Core/Src/main.c **** 
 1374              		.loc 1 182 5 is_stmt 1 view .LVU382
 182:Core/Src/main.c **** 
 1375              		.loc 1 182 30 is_stmt 0 view .LVU383
 1376 017a 3388     		ldrh	r3, [r6]
 1377 017c 5C43     		muls	r4, r3
 182:Core/Src/main.c **** 
 1378              		.loc 1 182 48 view .LVU384
 1379 017e E317     		asrs	r3, r4, #31
 1380 0180 1B05     		lsls	r3, r3, #20
 1381 0182 1B0D     		lsrs	r3, r3, #20
 1382 0184 1C19     		adds	r4, r3, r4
 1383 0186 2413     		asrs	r4, r4, #12
 182:Core/Src/main.c **** 
 1384              		.loc 1 182 53 view .LVU385
 1385 0188 6001     		lsls	r0, r4, #5
 1386 018a 001B     		subs	r0, r0, r4
 1387 018c 8000     		lsls	r0, r0, #2
 1388 018e 0019     		adds	r0, r0, r4
 1389 0190 C000     		lsls	r0, r0, #3
 182:Core/Src/main.c **** 
 1390              		.loc 1 182 58 view .LVU386
 1391 0192 C321     		movs	r1, #195
 1392 0194 8900     		lsls	r1, r1, #2
 1393 0196 FFF7FEFF 		bl	__aeabi_idiv
 1394              	.LVL89:
 182:Core/Src/main.c **** 
 1395              		.loc 1 182 21 view .LVU387
 1396 019a 474B     		ldr	r3, .L71+32
 1397 019c 1880     		strh	r0, [r3]
 185:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 1398              		.loc 1 185 5 is_stmt 1 view .LVU388
 185:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 1399              		.loc 1 185 7 is_stmt 0 view .LVU389
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 45


 1400 019e 514B     		ldr	r3, .L71+76
 1401 01a0 9D42     		cmp	r5, r3
 1402 01a2 02D9     		bls	.L55
 186:Core/Src/main.c ****     }
 1403              		.loc 1 186 7 is_stmt 1 view .LVU390
 186:Core/Src/main.c ****     }
 1404              		.loc 1 186 21 is_stmt 0 view .LVU391
 1405 01a4 404B     		ldr	r3, .L71+16
 1406 01a6 0422     		movs	r2, #4
 1407 01a8 1A70     		strb	r2, [r3]
 1408              	.L55:
 194:Core/Src/main.c ****       case INIT:
 1409              		.loc 1 194 5 is_stmt 1 view .LVU392
 1410 01aa 3F4B     		ldr	r3, .L71+16
 1411 01ac 1A78     		ldrb	r2, [r3]
 1412 01ae 052A     		cmp	r2, #5
 1413 01b0 6DD8     		bhi	.L56
 1414 01b2 9300     		lsls	r3, r2, #2
 1415 01b4 4C4A     		ldr	r2, .L71+80
 1416 01b6 D358     		ldr	r3, [r2, r3]
 1417 01b8 9F46     		mov	pc, r3
 1418              		.section	.rodata.main,"a",%progbits
 1419              		.align	2
 1420              	.L58:
 1421 0000 2E000000 		.word	.L63
 1422 0004 8E000000 		.word	.L62
 1423 0008 BA010000 		.word	.L61
 1424 000c 32020000 		.word	.L60
 1425 0010 4E020000 		.word	.L59
 1426 0014 6E020000 		.word	.L57
 1427              		.section	.text.main
 1428              	.L61:
 226:Core/Src/main.c **** 
 1429              		.loc 1 226 9 view .LVU393
 1430 01ba E120     		movs	r0, #225
 1431 01bc 6421     		movs	r1, #100
 1432 01be 8000     		lsls	r0, r0, #2
 1433 01c0 FFF7FEFF 		bl	led_blink
 1434              	.LVL90:
 229:Core/Src/main.c ****           current_state = INIT;
 1435              		.loc 1 229 9 view .LVU394
 229:Core/Src/main.c ****           current_state = INIT;
 1436              		.loc 1 229 29 is_stmt 0 view .LVU395
 1437 01c4 354B     		ldr	r3, .L71+4
 1438 01c6 1A88     		ldrh	r2, [r3]
 229:Core/Src/main.c ****           current_state = INIT;
 1439              		.loc 1 229 11 view .LVU396
 1440 01c8 484B     		ldr	r3, .L71+84
 1441 01ca 9A42     		cmp	r2, r3
 1442 01cc 03D8     		bhi	.L67
 230:Core/Src/main.c ****           break;
 1443              		.loc 1 230 11 is_stmt 1 view .LVU397
 230:Core/Src/main.c ****           break;
 1444              		.loc 1 230 25 is_stmt 0 view .LVU398
 1445 01ce 364B     		ldr	r3, .L71+16
 1446 01d0 0022     		movs	r2, #0
 1447 01d2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 46


 231:Core/Src/main.c ****         }
 1448              		.loc 1 231 11 is_stmt 1 view .LVU399
 1449 01d4 60E7     		b	.L65
 1450              	.L67:
 235:Core/Src/main.c ****           timer_check = 0;
 1451              		.loc 1 235 9 view .LVU400
 235:Core/Src/main.c ****           timer_check = 0;
 1452              		.loc 1 235 28 is_stmt 0 view .LVU401
 1453 01d6 384B     		ldr	r3, .L71+32
 1454 01d8 1B88     		ldrh	r3, [r3]
 235:Core/Src/main.c ****           timer_check = 0;
 1455              		.loc 1 235 11 view .LVU402
 1456 01da C72B     		cmp	r3, #199
 1457 01dc 0ED8     		bhi	.L68
 235:Core/Src/main.c ****           timer_check = 0;
 1458              		.loc 1 235 57 discriminator 1 view .LVU403
 1459 01de 444B     		ldr	r3, .L71+88
 1460 01e0 1B88     		ldrh	r3, [r3]
 235:Core/Src/main.c ****           timer_check = 0;
 1461              		.loc 1 235 42 discriminator 1 view .LVU404
 1462 01e2 0A2B     		cmp	r3, #10
 1463 01e4 0AD9     		bls	.L68
 235:Core/Src/main.c ****           timer_check = 0;
 1464              		.loc 1 235 83 discriminator 2 view .LVU405
 1465 01e6 354B     		ldr	r3, .L71+36
 1466 01e8 1A88     		ldrh	r2, [r3]
 235:Core/Src/main.c ****           timer_check = 0;
 1467              		.loc 1 235 62 discriminator 2 view .LVU406
 1468 01ea 424B     		ldr	r3, .L71+92
 1469 01ec 9A42     		cmp	r2, r3
 1470 01ee 05D9     		bls	.L68
 236:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1471              		.loc 1 236 11 is_stmt 1 view .LVU407
 236:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1472              		.loc 1 236 23 is_stmt 0 view .LVU408
 1473 01f0 3F4B     		ldr	r3, .L71+88
 1474 01f2 0022     		movs	r2, #0
 1475 01f4 1A80     		strh	r2, [r3]
 237:Core/Src/main.c ****         }
 1476              		.loc 1 237 11 is_stmt 1 view .LVU409
 237:Core/Src/main.c ****         }
 1477              		.loc 1 237 25 is_stmt 0 view .LVU410
 1478 01f6 2C4B     		ldr	r3, .L71+16
 1479 01f8 0332     		adds	r2, r2, #3
 1480 01fa 1A70     		strb	r2, [r3]
 1481              	.L68:
 240:Core/Src/main.c ****         spi_buffer[1] = 100;
 1482              		.loc 1 240 9 is_stmt 1 view .LVU411
 1483 01fc 8025     		movs	r5, #128
 1484 01fe ED01     		lsls	r5, r5, #7
 1485 0200 A024     		movs	r4, #160
 1486 0202 E405     		lsls	r4, r4, #23
 1487 0204 0022     		movs	r2, #0
 1488 0206 2900     		movs	r1, r5
 1489 0208 2000     		movs	r0, r4
 1490 020a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1491              	.LVL91:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 47


 241:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 200);
 1492              		.loc 1 241 9 view .LVU412
 241:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 200);
 1493              		.loc 1 241 23 is_stmt 0 view .LVU413
 1494 020e 2749     		ldr	r1, .L71+20
 1495 0210 6423     		movs	r3, #100
 1496 0212 4B70     		strb	r3, [r1, #1]
 242:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 1497              		.loc 1 242 9 is_stmt 1 view .LVU414
 1498 0214 2648     		ldr	r0, .L71+24
 1499 0216 6433     		adds	r3, r3, #100
 1500 0218 0222     		movs	r2, #2
 1501 021a FFF7FEFF 		bl	HAL_SPI_Transmit
 1502              	.LVL92:
 243:Core/Src/main.c **** 
 1503              		.loc 1 243 9 view .LVU415
 1504 021e 0122     		movs	r2, #1
 1505 0220 2900     		movs	r1, r5
 1506 0222 2000     		movs	r0, r4
 1507 0224 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1508              	.LVL93:
 245:Core/Src/main.c **** 
 1509              		.loc 1 245 9 view .LVU416
 245:Core/Src/main.c **** 
 1510              		.loc 1 245 20 is_stmt 0 view .LVU417
 1511 0228 314A     		ldr	r2, .L71+88
 1512 022a 1388     		ldrh	r3, [r2]
 1513 022c 0133     		adds	r3, r3, #1
 1514 022e 1380     		strh	r3, [r2]
 247:Core/Src/main.c ****       case STOP_CHARGING:
 1515              		.loc 1 247 7 is_stmt 1 view .LVU418
 1516 0230 32E7     		b	.L65
 1517              	.L60:
 250:Core/Src/main.c **** 
 1518              		.loc 1 250 9 view .LVU419
 1519 0232 FFF7FEFF 		bl	Disable_buck_converter
 1520              	.LVL94:
 252:Core/Src/main.c ****           current_state = SLEEP;
 1521              		.loc 1 252 9 view .LVU420
 252:Core/Src/main.c ****           current_state = SLEEP;
 1522              		.loc 1 252 28 is_stmt 0 view .LVU421
 1523 0236 204B     		ldr	r3, .L71+32
 1524 0238 1B88     		ldrh	r3, [r3]
 252:Core/Src/main.c ****           current_state = SLEEP;
 1525              		.loc 1 252 11 view .LVU422
 1526 023a C72B     		cmp	r3, #199
 1527 023c 03D8     		bhi	.L69
 253:Core/Src/main.c ****         }
 1528              		.loc 1 253 11 is_stmt 1 view .LVU423
 253:Core/Src/main.c ****         }
 1529              		.loc 1 253 25 is_stmt 0 view .LVU424
 1530 023e 1A4B     		ldr	r3, .L71+16
 1531 0240 0522     		movs	r2, #5
 1532 0242 1A70     		strb	r2, [r3]
 1533 0244 28E7     		b	.L65
 1534              	.L69:
 256:Core/Src/main.c ****         }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 48


 1535              		.loc 1 256 11 is_stmt 1 view .LVU425
 256:Core/Src/main.c ****         }
 1536              		.loc 1 256 25 is_stmt 0 view .LVU426
 1537 0246 184B     		ldr	r3, .L71+16
 1538 0248 0022     		movs	r2, #0
 1539 024a 1A70     		strb	r2, [r3]
 1540 024c 24E7     		b	.L65
 1541              	.L59:
 260:Core/Src/main.c **** 
 1542              		.loc 1 260 9 is_stmt 1 view .LVU427
 1543 024e 6421     		movs	r1, #100
 1544 0250 6420     		movs	r0, #100
 1545 0252 FFF7FEFF 		bl	led_blink
 1546              	.LVL95:
 263:Core/Src/main.c **** 
 1547              		.loc 1 263 9 view .LVU428
 1548 0256 FFF7FEFF 		bl	Disable_buck_converter
 1549              	.LVL96:
 266:Core/Src/main.c ****           current_state = INIT;
 1550              		.loc 1 266 9 view .LVU429
 266:Core/Src/main.c ****           current_state = INIT;
 1551              		.loc 1 266 29 is_stmt 0 view .LVU430
 1552 025a 104B     		ldr	r3, .L71+4
 1553 025c 1A88     		ldrh	r2, [r3]
 266:Core/Src/main.c ****           current_state = INIT;
 1554              		.loc 1 266 11 view .LVU431
 1555 025e 264B     		ldr	r3, .L71+96
 1556 0260 9A42     		cmp	r2, r3
 1557 0262 00D9     		bls	.LCB1246
 1558 0264 18E7     		b	.L65	@long jump
 1559              	.LCB1246:
 267:Core/Src/main.c ****         }
 1560              		.loc 1 267 11 is_stmt 1 view .LVU432
 267:Core/Src/main.c ****         }
 1561              		.loc 1 267 25 is_stmt 0 view .LVU433
 1562 0266 104B     		ldr	r3, .L71+16
 1563 0268 0022     		movs	r2, #0
 1564 026a 1A70     		strb	r2, [r3]
 1565 026c 14E7     		b	.L65
 1566              	.L57:
 273:Core/Src/main.c **** 
 1567              		.loc 1 273 9 is_stmt 1 view .LVU434
 1568 026e 8021     		movs	r1, #128
 1569 0270 0022     		movs	r2, #0
 1570 0272 C901     		lsls	r1, r1, #7
 1571 0274 2148     		ldr	r0, .L71+100
 1572 0276 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1573              	.LVL97:
 285:Core/Src/main.c **** 
 1574              		.loc 1 285 9 view .LVU435
 1575 027a FFF7FEFF 		bl	HAL_SuspendTick
 1576              	.LVL98:
 288:Core/Src/main.c **** 
 1577              		.loc 1 288 9 view .LVU436
 1578 027e 0121     		movs	r1, #1
 1579 0280 0120     		movs	r0, #1
 1580 0282 FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 49


 1581              	.LVL99:
 291:Core/Src/main.c **** 
 1582              		.loc 1 291 9 view .LVU437
 291:Core/Src/main.c **** 
 1583              		.loc 1 291 23 is_stmt 0 view .LVU438
 1584 0286 084B     		ldr	r3, .L71+16
 1585 0288 0022     		movs	r2, #0
 1586 028a 1A70     		strb	r2, [r3]
 293:Core/Src/main.c ****       default:
 1587              		.loc 1 293 7 is_stmt 1 view .LVU439
 1588 028c 04E7     		b	.L65
 1589              	.L56:
 295:Core/Src/main.c ****       break;
 1590              		.loc 1 295 7 view .LVU440
 295:Core/Src/main.c ****       break;
 1591              		.loc 1 295 21 is_stmt 0 view .LVU441
 1592 028e 064B     		ldr	r3, .L71+16
 1593 0290 0022     		movs	r2, #0
 1594 0292 1A70     		strb	r2, [r3]
 296:Core/Src/main.c ****     }
 1595              		.loc 1 296 7 is_stmt 1 view .LVU442
 1596 0294 00E7     		b	.L65
 1597              	.L72:
 1598 0296 C046     		.align	2
 1599              	.L71:
 1600 0298 00000000 		.word	hadc
 1601 029c 00000000 		.word	input_voltage_mv
 1602 02a0 77ECFFFF 		.word	-5001
 1603 02a4 66420000 		.word	16998
 1604 02a8 00000000 		.word	current_state
 1605 02ac 00000000 		.word	spi_buffer
 1606 02b0 00000000 		.word	hspi1
 1607 02b4 00000000 		.word	buck_output_voltage_mv
 1608 02b8 00000000 		.word	buck_current_ma
 1609 02bc 00000000 		.word	supply_voltage_mv
 1610 02c0 00000000 		.word	huart2
 1611 02c4 00000000 		.word	ADC_CH5
 1612 02c8 00000000 		.word	ADC_CH6
 1613 02cc 00000000 		.word	ADC_CH7
 1614 02d0 00000000 		.word	ADC_REF
 1615 02d4 BC6D0300 		.word	224700
 1616 02d8 5C120000 		.word	4700
 1617 02dc 58150100 		.word	71000
 1618 02e0 983A0000 		.word	15000
 1619 02e4 F0550000 		.word	22000
 1620 02e8 00000000 		.word	.L58
 1621 02ec 87130000 		.word	4999
 1622 02f0 00000000 		.word	timer_check
 1623 02f4 280A0000 		.word	2600
 1624 02f8 EF550000 		.word	21999
 1625 02fc 00080050 		.word	1342179328
 1626              	.LBE10:
 1627              		.cfi_endproc
 1628              	.LFE40:
 1630              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1631              		.align	1
 1632              		.global	HAL_GPIO_EXTI_Callback
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 50


 1633              		.syntax unified
 1634              		.code	16
 1635              		.thumb_func
 1637              	HAL_GPIO_EXTI_Callback:
 1638              	.LVL100:
 1639              	.LFB50:
 640:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1640              		.loc 1 640 1 view -0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 640:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1644              		.loc 1 640 1 is_stmt 0 view .LVU444
 1645 0000 10B5     		push	{r4, lr}
 1646              		.cfi_def_cfa_offset 8
 1647              		.cfi_offset 4, -8
 1648              		.cfi_offset 14, -4
 643:Core/Src/main.c **** 	  HAL_ResumeTick();
 1649              		.loc 1 643 4 is_stmt 1 view .LVU445
 1650 0002 FFF7FEFF 		bl	SystemClock_Config
 1651              	.LVL101:
 644:Core/Src/main.c ****   //}
 1652              		.loc 1 644 4 view .LVU446
 1653 0006 FFF7FEFF 		bl	HAL_ResumeTick
 1654              	.LVL102:
 646:Core/Src/main.c **** 
 1655              		.loc 1 646 1 is_stmt 0 view .LVU447
 1656              		@ sp needed
 1657 000a 10BD     		pop	{r4, pc}
 1658              		.cfi_endproc
 1659              	.LFE50:
 1661              		.global	current_state
 1662              		.section	.bss.current_state,"aw",%nobits
 1665              	current_state:
 1666 0000 00       		.space	1
 1667              		.global	spi_buffer
 1668              		.section	.bss.spi_buffer,"aw",%nobits
 1669              		.align	2
 1672              	spi_buffer:
 1673 0000 0000     		.space	2
 1674              		.global	timer_check
 1675              		.section	.bss.timer_check,"aw",%nobits
 1676              		.align	1
 1679              	timer_check:
 1680 0000 0000     		.space	2
 1681              		.global	previous_state
 1682              		.section	.bss.previous_state,"aw",%nobits
 1685              	previous_state:
 1686 0000 00       		.space	1
 1687              		.global	buck_current_ma
 1688              		.section	.bss.buck_current_ma,"aw",%nobits
 1689              		.align	1
 1692              	buck_current_ma:
 1693 0000 0000     		.space	2
 1694              		.global	buck_output_voltage_mv
 1695              		.section	.bss.buck_output_voltage_mv,"aw",%nobits
 1696              		.align	1
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 51


 1699              	buck_output_voltage_mv:
 1700 0000 0000     		.space	2
 1701              		.global	input_voltage_mv
 1702              		.section	.bss.input_voltage_mv,"aw",%nobits
 1703              		.align	1
 1706              	input_voltage_mv:
 1707 0000 0000     		.space	2
 1708              		.global	supply_voltage_mv
 1709              		.section	.bss.supply_voltage_mv,"aw",%nobits
 1710              		.align	1
 1713              	supply_voltage_mv:
 1714 0000 0000     		.space	2
 1715              		.global	ADC_REF
 1716              		.section	.bss.ADC_REF,"aw",%nobits
 1717              		.align	1
 1720              	ADC_REF:
 1721 0000 0000     		.space	2
 1722              		.global	ADC_CH7
 1723              		.section	.bss.ADC_CH7,"aw",%nobits
 1724              		.align	1
 1727              	ADC_CH7:
 1728 0000 0000     		.space	2
 1729              		.global	ADC_CH6
 1730              		.section	.bss.ADC_CH6,"aw",%nobits
 1731              		.align	1
 1734              	ADC_CH6:
 1735 0000 0000     		.space	2
 1736              		.global	ADC_CH5
 1737              		.section	.bss.ADC_CH5,"aw",%nobits
 1738              		.align	1
 1741              	ADC_CH5:
 1742 0000 0000     		.space	2
 1743              		.global	huart2
 1744              		.section	.bss.huart2,"aw",%nobits
 1745              		.align	2
 1748              	huart2:
 1749 0000 00000000 		.space	136
 1749      00000000 
 1749      00000000 
 1749      00000000 
 1749      00000000 
 1750              		.global	htim2
 1751              		.section	.bss.htim2,"aw",%nobits
 1752              		.align	2
 1755              	htim2:
 1756 0000 00000000 		.space	64
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1757              		.global	hspi1
 1758              		.section	.bss.hspi1,"aw",%nobits
 1759              		.align	2
 1762              	hspi1:
 1763 0000 00000000 		.space	88
 1763      00000000 
 1763      00000000 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 52


 1763      00000000 
 1763      00000000 
 1764              		.global	hadc
 1765              		.section	.bss.hadc,"aw",%nobits
 1766              		.align	2
 1769              	hadc:
 1770 0000 00000000 		.space	92
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1771              		.text
 1772              	.Letext0:
 1773              		.file 3 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 1774              		.file 4 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1775              		.file 5 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1776              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 1777              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 1778              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 1779              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 1780              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 1781              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 1782              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 1783              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
 1784              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 1785              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 1786              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim_ex.h"
 1787              		.file 17 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 1788              		.file 18 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 1789              		.file 19 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr.h"
 1790              		.file 20 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc_ex.h"
 1791              		.file 21 "<built-in>"
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:19     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:190    .text.MX_GPIO_Init:00000000000000b8 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:197    .text.load_switch_enable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:203    .text.load_switch_enable:0000000000000000 load_switch_enable
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:234    .text.load_switch_disable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:240    .text.load_switch_disable:0000000000000000 load_switch_disable
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:271    .text.led_blink:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:277    .text.led_blink:0000000000000000 led_blink
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:328    .text.led_blink:0000000000000030 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:333    .text.Enable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:339    .text.Enable_buck_converter:0000000000000000 Enable_buck_converter
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:378    .text.Disable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:384    .text.Disable_buck_converter:0000000000000000 Disable_buck_converter
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:419    .text.Error_Handler:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:425    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:457    .text.MX_ADC_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:462    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:636    .text.MX_ADC_Init:00000000000000b4 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1769   .bss.hadc:0000000000000000 hadc
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:646    .text.MX_USART2_UART_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:651    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:714    .text.MX_USART2_UART_Init:0000000000000030 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1748   .bss.huart2:0000000000000000 huart2
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:720    .text.MX_SPI1_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:725    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:796    .text.MX_SPI1_Init:0000000000000038 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1762   .bss.hspi1:0000000000000000 hspi1
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:802    .text.MX_TIM2_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:807    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:914    .text.MX_TIM2_Init:0000000000000070 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1755   .bss.htim2:0000000000000000 htim2
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:919    .text.SystemClock_Config:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:925    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1055   .text.SystemClock_Config:000000000000008c $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1062   .text.main:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1068   .text.main:0000000000000000 main
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1419   .rodata.main:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1600   .text.main:0000000000000298 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1706   .bss.input_voltage_mv:0000000000000000 input_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1665   .bss.current_state:0000000000000000 current_state
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1672   .bss.spi_buffer:0000000000000000 spi_buffer
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1699   .bss.buck_output_voltage_mv:0000000000000000 buck_output_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1692   .bss.buck_current_ma:0000000000000000 buck_current_ma
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1713   .bss.supply_voltage_mv:0000000000000000 supply_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1741   .bss.ADC_CH5:0000000000000000 ADC_CH5
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1734   .bss.ADC_CH6:0000000000000000 ADC_CH6
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1727   .bss.ADC_CH7:0000000000000000 ADC_CH7
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1720   .bss.ADC_REF:0000000000000000 ADC_REF
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1679   .bss.timer_check:0000000000000000 timer_check
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1631   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1637   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1666   .bss.current_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1669   .bss.spi_buffer:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1676   .bss.timer_check:0000000000000000 $d
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s 			page 54


C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1685   .bss.previous_state:0000000000000000 previous_state
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1686   .bss.previous_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1689   .bss.buck_current_ma:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1696   .bss.buck_output_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1703   .bss.input_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1710   .bss.supply_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1717   .bss.ADC_REF:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1724   .bss.ADC_CH7:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1731   .bss.ADC_CH6:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1738   .bss.ADC_CH5:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1745   .bss.huart2:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1752   .bss.htim2:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1759   .bss.hspi1:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccpgLrLJ.s:1766   .bss.hadc:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_idiv
HAL_Init
HAL_ADCEx_Calibration_Start
HAL_SPI_Transmit
HAL_UART_Transmit
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_SuspendTick
HAL_PWR_EnterSTOPMode
HAL_ResumeTick

ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB44:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #define VREFINT_CAL_ADDR          ((uint16_t*) ((uint32_t) 0x1FF80078))
  36:Core/Src/main.c **** #define MIN_VOLTAGE               5000
  37:Core/Src/main.c **** #define MAX_VOLTAGE               22000
  38:Core/Src/main.c **** #define MIN_CURRENT               200
  39:Core/Src/main.c **** #define SLEEP_VOLTAGE             1000
  40:Core/Src/main.c **** #define CHARGE_VOLTAGE_THESHOLD   2600
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  51:Core/Src/main.c **** UART_HandleTypeDef huart2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_ADC_Init(void);
  61:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** // *** Load switch functions *** //
  65:Core/Src/main.c **** void load_switch_enable(void);
  66:Core/Src/main.c **** void load_switch_disable(void);
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** // *** Blocking led functions ***//
  69:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2);
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
  72:Core/Src/main.c **** void Enable_buck_converter(void);
  73:Core/Src/main.c **** void Disable_buck_converter(void);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** uint16_t ADC_CH5, ADC_CH6, ADC_CH7, ADC_REF;
  81:Core/Src/main.c **** uint16_t supply_voltage_mv = 0;
  82:Core/Src/main.c **** uint16_t input_voltage_mv = 0;
  83:Core/Src/main.c **** uint16_t buck_output_voltage_mv = 0;
  84:Core/Src/main.c **** uint16_t buck_current_ma = 0;
  85:Core/Src/main.c **** uint8_t previous_state = 0;
  86:Core/Src/main.c **** uint16_t timer_check = 0;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** // State machine
  89:Core/Src/main.c **** typedef enum {INIT, START_CHARGING, CHARGING, STOP_CHARGING, OVER_VOLTAGE, SLEEP} State_type;
  90:Core/Src/main.c **** State_type current_state = INIT;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief  The application entry point.
  96:Core/Src/main.c ****   * @retval int
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** int main(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END 1 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 107:Core/Src/main.c ****   HAL_Init();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Configure the system clock */
 114:Core/Src/main.c ****   SystemClock_Config();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Initialize all configured peripherals */
 121:Core/Src/main.c ****   MX_GPIO_Init();
 122:Core/Src/main.c ****   MX_ADC_Init();
 123:Core/Src/main.c ****   MX_USART2_UART_Init();
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc, ADC_SINGLE_ENDED);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END 2 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Infinite loop */
 131:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 132:Core/Src/main.c ****   while (1)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****         // Start ADC Conversion and read two ADC values
 139:Core/Src/main.c **** 		HAL_ADC_Start(&hadc);
 140:Core/Src/main.c ****     
 141:Core/Src/main.c ****     // ADC_CHANNEL_5 & Read The ADC Conversion Result
 142:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 143:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     // ADC_CHANNEL_6 & Read The ADC Conversion Result
 146:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 147:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     // ADC_CHANNEL_7 & Read The ADC Conversion Result
 150:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 151:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     // ADC_CHANNEL_VREFINT & Read The ADC Conversion Result
 154:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 155:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     // Stop ADC Conversion
 158:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     // Calculate supply voltage MCU
 161:Core/Src/main.c ****     supply_voltage_mv = 1200*4096/ADC_REF;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****     // Calculate input voltage BUCK converter
 164:Core/Src/main.c ****     input_voltage_mv = ADC_CH5*supply_voltage_mv/4096*224700/4700;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     // Calculate buck converter output voltage
 167:Core/Src/main.c ****     buck_output_voltage_mv = ADC_CH7*supply_voltage_mv/4096*71000/15000;
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     // Calculate buck converter output current
 170:Core/Src/main.c ****     buck_current_ma = ADC_CH6*supply_voltage_mv/4096*1000/780;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     if(input_voltage_mv > MAX_VOLTAGE){
 174:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 175:Core/Src/main.c ****     }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     
 178:Core/Src/main.c ****     ///////////////////////////
 179:Core/Src/main.c ****     // *** State machine *** //
 180:Core/Src/main.c ****     ///////////////////////////
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     switch (current_state){
 183:Core/Src/main.c ****       case INIT:
 184:Core/Src/main.c ****         // No charging may occur in the INIT phase
 185:Core/Src/main.c ****         Disable_buck_converter();
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****         // Check input voltage before start charging
 188:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE && input_voltage_mv > MIN_VOLTAGE){
 189:Core/Src/main.c ****           current_state = START_CHARGING;
 190:Core/Src/main.c ****         }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****         // Check input voltage in not below minimum voltage
 193:Core/Src/main.c ****         if(input_voltage_mv < SLEEP_VOLTAGE){
 194:Core/Src/main.c ****           current_state = SLEEP;
 195:Core/Src/main.c ****         }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****         // Blink led
 198:Core/Src/main.c ****         led_blink(500, 500);
 199:Core/Src/main.c ****       break;
 200:Core/Src/main.c ****       case START_CHARGING: 
 201:Core/Src/main.c ****         // Enable buck conveter safely
 202:Core/Src/main.c ****         Enable_buck_converter();
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****         // Change state
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 5


 205:Core/Src/main.c ****         current_state = CHARGING;
 206:Core/Src/main.c ****       break;
 207:Core/Src/main.c ****       case CHARGING:
 208:Core/Src/main.c ****         led_blink(900, 100);
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****         // If under voltage occur, wait for enough voltage to resume
 211:Core/Src/main.c ****         if(input_voltage_mv < MIN_VOLTAGE){
 212:Core/Src/main.c ****           current_state = INIT;
 213:Core/Src/main.c ****         }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****         // Check for current lower then MIN_CURRENT after 10 sec
 216:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT && timer_check > 10 && supply_voltage_mv > CHARGE_VOLTAGE_
 217:Core/Src/main.c ****           timer_check = 0;
 218:Core/Src/main.c ****           current_state = STOP_CHARGING;
 219:Core/Src/main.c ****         }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****         timer_check++;
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****       break;
 224:Core/Src/main.c ****       case STOP_CHARGING:
 225:Core/Src/main.c ****         // Disable buck conveter safely
 226:Core/Src/main.c ****         Disable_buck_converter();
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT){
 229:Core/Src/main.c ****           current_state = SLEEP;
 230:Core/Src/main.c ****         }
 231:Core/Src/main.c ****         else{
 232:Core/Src/main.c ****           current_state = INIT;
 233:Core/Src/main.c ****         }
 234:Core/Src/main.c ****       break;
 235:Core/Src/main.c ****       case OVER_VOLTAGE:
 236:Core/Src/main.c ****         led_blink(100, 100);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****         // Disable buck conveter safely
 239:Core/Src/main.c ****         Disable_buck_converter();
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****         // Check for save voltage
 242:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE){
 243:Core/Src/main.c ****           current_state = INIT;
 244:Core/Src/main.c ****         }
 245:Core/Src/main.c ****       break;
 246:Core/Src/main.c ****       case SLEEP:
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****         // Disable LED
 249:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****         // Check if input voltage is above 2 V and enable timer interrupt
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****         // Reconfigure GPIO pins for sleep mode: EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin
 254:Core/Src/main.c ****         // GPIO_InitTypeDef GPIO_InitStruct;
 255:Core/Src/main.c ****         // GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin;
 256:Core/Src/main.c ****         // GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 257:Core/Src/main.c ****         // GPIO_InitStruct.Pull = GPIO_NOPULL;
 258:Core/Src/main.c ****         // HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 259:Core/Src/main.c ****         
 260:Core/Src/main.c ****         // Disable the systick interrupt
 261:Core/Src/main.c ****         HAL_SuspendTick();
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****         // Enter Stop Mode
 264:Core/Src/main.c ****         HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****         // Change state
 267:Core/Src/main.c ****         current_state = INIT;
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****       break;
 270:Core/Src/main.c ****       default:
 271:Core/Src/main.c ****       current_state = INIT;
 272:Core/Src/main.c ****       break;
 273:Core/Src/main.c ****     }
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     uint8_t length = 10;
 276:Core/Src/main.c ****     uint8_t buffer [length];
 277:Core/Src/main.c ****     buffer [0] = 0x02;
 278:Core/Src/main.c ****     buffer [1] = length;
 279:Core/Src/main.c ****     buffer [2] = (input_voltage_mv >> 8);
 280:Core/Src/main.c ****     buffer [3] = (uint8_t)(input_voltage_mv);
 281:Core/Src/main.c ****     buffer [4] = (buck_output_voltage_mv >> 8);
 282:Core/Src/main.c ****     buffer [5] = (uint8_t)(buck_output_voltage_mv);
 283:Core/Src/main.c ****     buffer [6] = (buck_current_ma >> 8);
 284:Core/Src/main.c ****     buffer [7] = (uint8_t)(buck_current_ma);
 285:Core/Src/main.c ****     buffer [8] = (supply_voltage_mv >> 8);
 286:Core/Src/main.c ****     buffer [9] = (uint8_t)(supply_voltage_mv);
 287:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, buffer, length, 100);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   /* USER CODE END 3 */
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief System Clock Configuration
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** void SystemClock_Config(void)
 298:Core/Src/main.c **** {
 299:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 300:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 301:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 308:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 311:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 312:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 313:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 315:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 323:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 324:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 325:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 326:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 327:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 334:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 335:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c **** }
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** /**
 342:Core/Src/main.c ****   * @brief ADC Initialization Function
 343:Core/Src/main.c ****   * @param None
 344:Core/Src/main.c ****   * @retval None
 345:Core/Src/main.c ****   */
 346:Core/Src/main.c **** static void MX_ADC_Init(void)
 347:Core/Src/main.c **** {
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c ****   hadc.Instance = ADC1;
 362:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 363:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 364:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 365:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 366:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 367:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 368:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 369:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 370:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 371:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 372:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 373:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 374:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 375:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 8


 376:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 377:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 378:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     Error_Handler();
 381:Core/Src/main.c ****   }
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 386:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 387:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 388:Core/Src/main.c ****   {
 389:Core/Src/main.c ****     Error_Handler();
 390:Core/Src/main.c ****   }
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 393:Core/Src/main.c ****   */
 394:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 395:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 396:Core/Src/main.c ****   {
 397:Core/Src/main.c ****     Error_Handler();
 398:Core/Src/main.c ****   }
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 401:Core/Src/main.c ****   */
 402:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 403:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 409:Core/Src/main.c ****   */
 410:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 411:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** }
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /**
 422:Core/Src/main.c ****   * @brief USART2 Initialization Function
 423:Core/Src/main.c ****   * @param None
 424:Core/Src/main.c ****   * @retval None
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 427:Core/Src/main.c **** {
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 432:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 9


 433:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 436:Core/Src/main.c ****   huart2.Instance = USART2;
 437:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 438:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 439:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 440:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 441:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 442:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 443:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 444:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 445:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 446:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /**
 457:Core/Src/main.c ****   * @brief GPIO Initialization Function
 458:Core/Src/main.c ****   * @param None
 459:Core/Src/main.c ****   * @retval None
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c **** static void MX_GPIO_Init(void)
 462:Core/Src/main.c **** {
  26              		.loc 1 462 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 C646     		mov	lr, r8
  38 0004 00B5     		push	{lr}
  39              		.cfi_def_cfa_offset 24
  40              		.cfi_offset 8, -24
  41 0006 88B0     		sub	sp, sp, #32
  42              		.cfi_def_cfa_offset 56
 463:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 463 3 view .LVU1
  44              		.loc 1 463 20 is_stmt 0 view .LVU2
  45 0008 1422     		movs	r2, #20
  46 000a 0021     		movs	r1, #0
  47 000c 03A8     		add	r0, sp, #12
  48 000e FFF7FEFF 		bl	memset
  49              	.LVL0:
 464:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 465:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 10


 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 468:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 468 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 468 3 view .LVU4
  53              		.loc 1 468 3 view .LVU5
  54 0012 244B     		ldr	r3, .L2
  55 0014 DA6A     		ldr	r2, [r3, #44]
  56 0016 0125     		movs	r5, #1
  57 0018 2A43     		orrs	r2, r5
  58 001a DA62     		str	r2, [r3, #44]
  59              		.loc 1 468 3 view .LVU6
  60 001c DA6A     		ldr	r2, [r3, #44]
  61 001e 2A40     		ands	r2, r5
  62 0020 0192     		str	r2, [sp, #4]
  63              		.loc 1 468 3 view .LVU7
  64 0022 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 468 3 view .LVU8
 469:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  67              		.loc 1 469 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 469 3 view .LVU10
  70              		.loc 1 469 3 view .LVU11
  71 0024 DA6A     		ldr	r2, [r3, #44]
  72 0026 0227     		movs	r7, #2
  73 0028 3A43     		orrs	r2, r7
  74 002a DA62     		str	r2, [r3, #44]
  75              		.loc 1 469 3 view .LVU12
  76 002c DB6A     		ldr	r3, [r3, #44]
  77 002e 3B40     		ands	r3, r7
  78 0030 0293     		str	r3, [sp, #8]
  79              		.loc 1 469 3 view .LVU13
  80 0032 029B     		ldr	r3, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 469 3 view .LVU14
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 472:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin, GPIO_PIN_RESET);
  83              		.loc 1 472 3 view .LVU15
  84 0034 1C4C     		ldr	r4, .L2+4
  85 0036 A026     		movs	r6, #160
  86 0038 F605     		lsls	r6, r6, #23
  87 003a 0022     		movs	r2, #0
  88 003c 2100     		movs	r1, r4
  89 003e 3000     		movs	r0, r6
  90 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  91              	.LVL1:
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 475:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  92              		.loc 1 475 3 view .LVU16
  93 0044 194B     		ldr	r3, .L2+8
  94 0046 9846     		mov	r8, r3
  95 0048 0022     		movs	r2, #0
  96 004a 0221     		movs	r1, #2
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 11


  97 004c 1800     		movs	r0, r3
  98 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL2:
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /*Configure GPIO pins : EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin */
 478:Core/Src/main.c ****   GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin;
 100              		.loc 1 478 3 view .LVU17
 101              		.loc 1 478 23 is_stmt 0 view .LVU18
 102 0052 0394     		str	r4, [sp, #12]
 479:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 103              		.loc 1 479 3 is_stmt 1 view .LVU19
 104              		.loc 1 479 24 is_stmt 0 view .LVU20
 105 0054 0495     		str	r5, [sp, #16]
 480:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 106              		.loc 1 480 3 is_stmt 1 view .LVU21
 107              		.loc 1 480 24 is_stmt 0 view .LVU22
 108 0056 0024     		movs	r4, #0
 109 0058 0594     		str	r4, [sp, #20]
 481:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 110              		.loc 1 481 3 is_stmt 1 view .LVU23
 111              		.loc 1 481 25 is_stmt 0 view .LVU24
 112 005a 0694     		str	r4, [sp, #24]
 482:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 113              		.loc 1 482 3 is_stmt 1 view .LVU25
 114 005c 03A9     		add	r1, sp, #12
 115 005e 3000     		movs	r0, r6
 116 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 117              	.LVL3:
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 485:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 118              		.loc 1 485 3 view .LVU26
 119              		.loc 1 485 23 is_stmt 0 view .LVU27
 120 0064 0397     		str	r7, [sp, #12]
 486:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 121              		.loc 1 486 3 is_stmt 1 view .LVU28
 122              		.loc 1 486 24 is_stmt 0 view .LVU29
 123 0066 0495     		str	r5, [sp, #16]
 487:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 487 3 is_stmt 1 view .LVU30
 125              		.loc 1 487 24 is_stmt 0 view .LVU31
 126 0068 0594     		str	r4, [sp, #20]
 488:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 127              		.loc 1 488 3 is_stmt 1 view .LVU32
 128              		.loc 1 488 25 is_stmt 0 view .LVU33
 129 006a 0694     		str	r4, [sp, #24]
 489:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 130              		.loc 1 489 3 is_stmt 1 view .LVU34
 131 006c 03A9     		add	r1, sp, #12
 132 006e 4046     		mov	r0, r8
 133 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL4:
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /*Configure GPIO pin : INT_Pin */
 492:Core/Src/main.c ****   GPIO_InitStruct.Pin = INT_Pin;
 135              		.loc 1 492 3 view .LVU35
 136              		.loc 1 492 23 is_stmt 0 view .LVU36
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 12


 137 0074 8023     		movs	r3, #128
 138 0076 DB00     		lsls	r3, r3, #3
 139 0078 0393     		str	r3, [sp, #12]
 493:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 140              		.loc 1 493 3 is_stmt 1 view .LVU37
 141              		.loc 1 493 24 is_stmt 0 view .LVU38
 142 007a 8823     		movs	r3, #136
 143 007c 5B03     		lsls	r3, r3, #13
 144 007e 0493     		str	r3, [sp, #16]
 494:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 494 3 is_stmt 1 view .LVU39
 146              		.loc 1 494 24 is_stmt 0 view .LVU40
 147 0080 0594     		str	r4, [sp, #20]
 495:Core/Src/main.c ****   HAL_GPIO_Init(INT_GPIO_Port, &GPIO_InitStruct);
 148              		.loc 1 495 3 is_stmt 1 view .LVU41
 149 0082 03A9     		add	r1, sp, #12
 150 0084 3000     		movs	r0, r6
 151 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL5:
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* EXTI interrupt init*/
 498:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 153              		.loc 1 498 3 view .LVU42
 154 008a 0022     		movs	r2, #0
 155 008c 0021     		movs	r1, #0
 156 008e 0720     		movs	r0, #7
 157 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL6:
 499:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 159              		.loc 1 499 3 view .LVU43
 160 0094 0720     		movs	r0, #7
 161 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 162              	.LVL7:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 502:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 503:Core/Src/main.c **** }
 163              		.loc 1 503 1 is_stmt 0 view .LVU44
 164 009a 08B0     		add	sp, sp, #32
 165              		@ sp needed
 166 009c 80BC     		pop	{r7}
 167 009e B846     		mov	r8, r7
 168 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 169              	.L3:
 170 00a2 C046     		.align	2
 171              	.L2:
 172 00a4 00100240 		.word	1073876992
 173 00a8 13020000 		.word	531
 174 00ac 00040050 		.word	1342178304
 175              		.cfi_endproc
 176              	.LFE44:
 178              		.section	.text.load_switch_enable,"ax",%progbits
 179              		.align	1
 180              		.global	load_switch_enable
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 13


 185              	load_switch_enable:
 186              	.LFB45:
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** // *** Load Switch functions *** //
 508:Core/Src/main.c **** // Enable load switch 1 and 2
 509:Core/Src/main.c **** void load_switch_enable(void){
 187              		.loc 1 509 30 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 10B5     		push	{r4, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 510:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 195              		.loc 1 510 3 view .LVU46
 196 0002 A024     		movs	r4, #160
 197 0004 E405     		lsls	r4, r4, #23
 198 0006 0122     		movs	r2, #1
 199 0008 0121     		movs	r1, #1
 200 000a 2000     		movs	r0, r4
 201 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL8:
 511:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 203              		.loc 1 511 3 view .LVU47
 204 0010 0122     		movs	r2, #1
 205 0012 0221     		movs	r1, #2
 206 0014 2000     		movs	r0, r4
 207 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL9:
 512:Core/Src/main.c **** }
 209              		.loc 1 512 1 is_stmt 0 view .LVU48
 210              		@ sp needed
 211 001a 10BD     		pop	{r4, pc}
 212              		.cfi_endproc
 213              	.LFE45:
 215              		.section	.text.load_switch_disable,"ax",%progbits
 216              		.align	1
 217              		.global	load_switch_disable
 218              		.syntax unified
 219              		.code	16
 220              		.thumb_func
 222              	load_switch_disable:
 223              	.LFB46:
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** // Disable load switch 1 and 2
 515:Core/Src/main.c **** void load_switch_disable(void){
 224              		.loc 1 515 31 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 10B5     		push	{r4, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 14, -4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 14


 516:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_RESET);
 232              		.loc 1 516 3 view .LVU50
 233 0002 A024     		movs	r4, #160
 234 0004 E405     		lsls	r4, r4, #23
 235 0006 0022     		movs	r2, #0
 236 0008 0121     		movs	r1, #1
 237 000a 2000     		movs	r0, r4
 238 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 239              	.LVL10:
 517:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_RESET);
 240              		.loc 1 517 3 view .LVU51
 241 0010 0022     		movs	r2, #0
 242 0012 0221     		movs	r1, #2
 243 0014 2000     		movs	r0, r4
 244 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 245              	.LVL11:
 518:Core/Src/main.c **** }
 246              		.loc 1 518 1 is_stmt 0 view .LVU52
 247              		@ sp needed
 248 001a 10BD     		pop	{r4, pc}
 249              		.cfi_endproc
 250              	.LFE46:
 252              		.section	.text.led_blink,"ax",%progbits
 253              		.align	1
 254              		.global	led_blink
 255              		.syntax unified
 256              		.code	16
 257              		.thumb_func
 259              	led_blink:
 260              	.LVL12:
 261              	.LFB47:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2){
 262              		.loc 1 520 61 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		.loc 1 520 61 is_stmt 0 view .LVU54
 267 0000 70B5     		push	{r4, r5, r6, lr}
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 4, -16
 270              		.cfi_offset 5, -12
 271              		.cfi_offset 6, -8
 272              		.cfi_offset 14, -4
 273 0002 0500     		movs	r5, r0
 274 0004 0C00     		movs	r4, r1
 521:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 275              		.loc 1 521 3 is_stmt 1 view .LVU55
 276 0006 094E     		ldr	r6, .L7
 277 0008 0022     		movs	r2, #0
 278 000a 0221     		movs	r1, #2
 279              	.LVL13:
 280              		.loc 1 521 3 is_stmt 0 view .LVU56
 281 000c 3000     		movs	r0, r6
 282              	.LVL14:
 283              		.loc 1 521 3 view .LVU57
 284 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 15


 285              	.LVL15:
 522:Core/Src/main.c ****   HAL_Delay(time_delay_1);
 286              		.loc 1 522 3 is_stmt 1 view .LVU58
 287 0012 2800     		movs	r0, r5
 288 0014 FFF7FEFF 		bl	HAL_Delay
 289              	.LVL16:
 523:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 290              		.loc 1 523 3 view .LVU59
 291 0018 0122     		movs	r2, #1
 292 001a 0221     		movs	r1, #2
 293 001c 3000     		movs	r0, r6
 294 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 295              	.LVL17:
 524:Core/Src/main.c ****   HAL_Delay(time_delay_2);
 296              		.loc 1 524 3 view .LVU60
 297 0022 2000     		movs	r0, r4
 298 0024 FFF7FEFF 		bl	HAL_Delay
 299              	.LVL18:
 525:Core/Src/main.c **** }
 300              		.loc 1 525 1 is_stmt 0 view .LVU61
 301              		@ sp needed
 302 0028 70BD     		pop	{r4, r5, r6, pc}
 303              	.L8:
 304 002a C046     		.align	2
 305              	.L7:
 306 002c 00040050 		.word	1342178304
 307              		.cfi_endproc
 308              	.LFE47:
 310              		.section	.text.Enable_buck_converter,"ax",%progbits
 311              		.align	1
 312              		.global	Enable_buck_converter
 313              		.syntax unified
 314              		.code	16
 315              		.thumb_func
 317              	Enable_buck_converter:
 318              	.LFB49:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** // *** WAKE UP *** //
 528:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 529:Core/Src/main.c **** {
 530:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 531:Core/Src/main.c ****   //{
 532:Core/Src/main.c **** 	  SystemClock_Config();
 533:Core/Src/main.c **** 	  HAL_ResumeTick();
 534:Core/Src/main.c ****   //}
 535:Core/Src/main.c **** }
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
 538:Core/Src/main.c **** void Enable_buck_converter(void){
 319              		.loc 1 538 33 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 10B5     		push	{r4, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 16


 539:Core/Src/main.c ****   // Enable load switches
 540:Core/Src/main.c ****   load_switch_enable();
 327              		.loc 1 540 3 view .LVU63
 328 0002 FFF7FEFF 		bl	load_switch_enable
 329              	.LVL19:
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   HAL_Delay(100);
 330              		.loc 1 542 3 view .LVU64
 331 0006 6420     		movs	r0, #100
 332 0008 FFF7FEFF 		bl	HAL_Delay
 333              	.LVL20:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   // Enable CC/CV buck converter
 545:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_SET);
 334              		.loc 1 545 3 view .LVU65
 335 000c 8021     		movs	r1, #128
 336 000e A024     		movs	r4, #160
 337 0010 E405     		lsls	r4, r4, #23
 338 0012 0122     		movs	r2, #1
 339 0014 8900     		lsls	r1, r1, #2
 340 0016 2000     		movs	r0, r4
 341 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 342              	.LVL21:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   // HAL_Delay(1000);
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   // Connect input voltage to buck converter
 550:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_SET);
 343              		.loc 1 550 3 view .LVU66
 344 001c 0122     		movs	r2, #1
 345 001e 1021     		movs	r1, #16
 346 0020 2000     		movs	r0, r4
 347 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 348              	.LVL22:
 551:Core/Src/main.c **** }
 349              		.loc 1 551 1 is_stmt 0 view .LVU67
 350              		@ sp needed
 351 0026 10BD     		pop	{r4, pc}
 352              		.cfi_endproc
 353              	.LFE49:
 355              		.section	.text.Disable_buck_converter,"ax",%progbits
 356              		.align	1
 357              		.global	Disable_buck_converter
 358              		.syntax unified
 359              		.code	16
 360              		.thumb_func
 362              	Disable_buck_converter:
 363              	.LFB50:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** void Disable_buck_converter(void){
 364              		.loc 1 554 34 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 10B5     		push	{r4, lr}
 369              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 17


 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 555:Core/Src/main.c ****     // Disable CC/CV buck converter
 556:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_RESET);
 372              		.loc 1 556 3 view .LVU69
 373 0002 8021     		movs	r1, #128
 374 0004 A024     		movs	r4, #160
 375 0006 E405     		lsls	r4, r4, #23
 376 0008 0022     		movs	r2, #0
 377 000a 8900     		lsls	r1, r1, #2
 378 000c 2000     		movs	r0, r4
 379 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 380              	.LVL23:
 557:Core/Src/main.c ****   
 558:Core/Src/main.c ****   // Disconnect input voltage from buck converter
 559:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_RESET);
 381              		.loc 1 559 3 view .LVU70
 382 0012 0022     		movs	r2, #0
 383 0014 1021     		movs	r1, #16
 384 0016 2000     		movs	r0, r4
 385 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL24:
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   // Disable load switches
 562:Core/Src/main.c ****   load_switch_disable();
 387              		.loc 1 562 3 view .LVU71
 388 001c FFF7FEFF 		bl	load_switch_disable
 389              	.LVL25:
 563:Core/Src/main.c **** }
 390              		.loc 1 563 1 is_stmt 0 view .LVU72
 391              		@ sp needed
 392 0020 10BD     		pop	{r4, pc}
 393              		.cfi_endproc
 394              	.LFE50:
 396              		.section	.text.Error_Handler,"ax",%progbits
 397              		.align	1
 398              		.global	Error_Handler
 399              		.syntax unified
 400              		.code	16
 401              		.thumb_func
 403              	Error_Handler:
 404              	.LFB51:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** /* USER CODE END 4 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** /**
 568:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 569:Core/Src/main.c ****   * @retval None
 570:Core/Src/main.c ****   */
 571:Core/Src/main.c **** void Error_Handler(void)
 572:Core/Src/main.c **** {
 405              		.loc 1 572 1 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ Volatile: function does not return.
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 18


 573:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 574:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 575:Core/Src/main.c ****   __disable_irq();
 411              		.loc 1 575 3 view .LVU74
 412              	.LBB6:
 413              	.LBI6:
 414              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 19


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 20


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 415              		.loc 2 140 27 view .LVU75
 416              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 417              		.loc 2 142 3 view .LVU76
 418              		.syntax divided
 419              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 420 0000 72B6     		cpsid i
 421              	@ 0 "" 2
 422              		.thumb
 423              		.syntax unified
 424              	.L12:
 425              	.LBE7:
 426              	.LBE6:
 576:Core/Src/main.c ****   while (1)
 427              		.loc 1 576 3 discriminator 1 view .LVU77
 577:Core/Src/main.c ****   {
 578:Core/Src/main.c ****   }
 428              		.loc 1 578 3 discriminator 1 view .LVU78
 576:Core/Src/main.c ****   while (1)
 429              		.loc 1 576 9 discriminator 1 view .LVU79
 430 0002 FEE7     		b	.L12
 431              		.cfi_endproc
 432              	.LFE51:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 21


 434              		.section	.text.MX_ADC_Init,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.code	16
 438              		.thumb_func
 440              	MX_ADC_Init:
 441              	.LFB42:
 347:Core/Src/main.c **** 
 442              		.loc 1 347 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 00B5     		push	{lr}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 14, -4
 449 0002 83B0     		sub	sp, sp, #12
 450              		.cfi_def_cfa_offset 16
 353:Core/Src/main.c **** 
 451              		.loc 1 353 3 view .LVU81
 353:Core/Src/main.c **** 
 452              		.loc 1 353 26 is_stmt 0 view .LVU82
 453 0004 0822     		movs	r2, #8
 454 0006 0021     		movs	r1, #0
 455 0008 6846     		mov	r0, sp
 456 000a FFF7FEFF 		bl	memset
 457              	.LVL26:
 361:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 458              		.loc 1 361 3 is_stmt 1 view .LVU83
 361:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 459              		.loc 1 361 17 is_stmt 0 view .LVU84
 460 000e 2948     		ldr	r0, .L24
 461 0010 294B     		ldr	r3, .L24+4
 462 0012 0360     		str	r3, [r0]
 362:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 463              		.loc 1 362 3 is_stmt 1 view .LVU85
 362:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 464              		.loc 1 362 30 is_stmt 0 view .LVU86
 465 0014 0023     		movs	r3, #0
 466 0016 C363     		str	r3, [r0, #60]
 363:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 467              		.loc 1 363 3 is_stmt 1 view .LVU87
 363:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 468              		.loc 1 363 28 is_stmt 0 view .LVU88
 469 0018 C022     		movs	r2, #192
 470 001a 1206     		lsls	r2, r2, #24
 471 001c 4260     		str	r2, [r0, #4]
 364:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 472              		.loc 1 364 3 is_stmt 1 view .LVU89
 364:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 473              		.loc 1 364 24 is_stmt 0 view .LVU90
 474 001e 8360     		str	r3, [r0, #8]
 365:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 475              		.loc 1 365 3 is_stmt 1 view .LVU91
 365:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 476              		.loc 1 365 26 is_stmt 0 view .LVU92
 477 0020 0722     		movs	r2, #7
 478 0022 8263     		str	r2, [r0, #56]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 22


 366:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 479              		.loc 1 366 3 is_stmt 1 view .LVU93
 366:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 480              		.loc 1 366 26 is_stmt 0 view .LVU94
 481 0024 063A     		subs	r2, r2, #6
 482 0026 0261     		str	r2, [r0, #16]
 367:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 483              		.loc 1 367 3 is_stmt 1 view .LVU95
 367:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 484              		.loc 1 367 23 is_stmt 0 view .LVU96
 485 0028 C360     		str	r3, [r0, #12]
 368:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 486              		.loc 1 368 3 is_stmt 1 view .LVU97
 368:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 487              		.loc 1 368 32 is_stmt 0 view .LVU98
 488 002a 2021     		movs	r1, #32
 489 002c 4254     		strb	r2, [r0, r1]
 369:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 490              		.loc 1 369 3 is_stmt 1 view .LVU99
 369:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 491              		.loc 1 369 35 is_stmt 0 view .LVU100
 492 002e 0131     		adds	r1, r1, #1
 493 0030 4354     		strb	r3, [r0, r1]
 370:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 494              		.loc 1 370 3 is_stmt 1 view .LVU101
 370:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 495              		.loc 1 370 34 is_stmt 0 view .LVU102
 496 0032 8362     		str	r3, [r0, #40]
 371:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 497              		.loc 1 371 3 is_stmt 1 view .LVU103
 371:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 498              		.loc 1 371 30 is_stmt 0 view .LVU104
 499 0034 C221     		movs	r1, #194
 500 0036 FF31     		adds	r1, r1, #255
 501 0038 4162     		str	r1, [r0, #36]
 372:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 502              		.loc 1 372 3 is_stmt 1 view .LVU105
 372:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 503              		.loc 1 372 35 is_stmt 0 view .LVU106
 504 003a 9639     		subs	r1, r1, #150
 505 003c FF39     		subs	r1, r1, #255
 506 003e 4354     		strb	r3, [r0, r1]
 373:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 507              		.loc 1 373 3 is_stmt 1 view .LVU107
 373:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 508              		.loc 1 373 26 is_stmt 0 view .LVU108
 509 0040 2839     		subs	r1, r1, #40
 510 0042 4161     		str	r1, [r0, #20]
 374:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 511              		.loc 1 374 3 is_stmt 1 view .LVU109
 374:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 512              		.loc 1 374 21 is_stmt 0 view .LVU110
 513 0044 0363     		str	r3, [r0, #48]
 375:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 514              		.loc 1 375 3 is_stmt 1 view .LVU111
 375:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 515              		.loc 1 375 30 is_stmt 0 view .LVU112
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 23


 516 0046 8361     		str	r3, [r0, #24]
 376:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 517              		.loc 1 376 3 is_stmt 1 view .LVU113
 376:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 518              		.loc 1 376 35 is_stmt 0 view .LVU114
 519 0048 4263     		str	r2, [r0, #52]
 377:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 520              		.loc 1 377 3 is_stmt 1 view .LVU115
 377:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 521              		.loc 1 377 34 is_stmt 0 view .LVU116
 522 004a C361     		str	r3, [r0, #28]
 378:Core/Src/main.c ****   {
 523              		.loc 1 378 3 is_stmt 1 view .LVU117
 378:Core/Src/main.c ****   {
 524              		.loc 1 378 7 is_stmt 0 view .LVU118
 525 004c FFF7FEFF 		bl	HAL_ADC_Init
 526              	.LVL27:
 378:Core/Src/main.c ****   {
 527              		.loc 1 378 6 view .LVU119
 528 0050 0028     		cmp	r0, #0
 529 0052 24D1     		bne	.L19
 385:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 530              		.loc 1 385 3 is_stmt 1 view .LVU120
 385:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 531              		.loc 1 385 19 is_stmt 0 view .LVU121
 532 0054 194B     		ldr	r3, .L24+8
 533 0056 0093     		str	r3, [sp]
 386:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 534              		.loc 1 386 3 is_stmt 1 view .LVU122
 386:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 535              		.loc 1 386 16 is_stmt 0 view .LVU123
 536 0058 8023     		movs	r3, #128
 537 005a 5B01     		lsls	r3, r3, #5
 538 005c 0193     		str	r3, [sp, #4]
 387:Core/Src/main.c ****   {
 539              		.loc 1 387 3 is_stmt 1 view .LVU124
 387:Core/Src/main.c ****   {
 540              		.loc 1 387 7 is_stmt 0 view .LVU125
 541 005e 1548     		ldr	r0, .L24
 542 0060 6946     		mov	r1, sp
 543 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 544              	.LVL28:
 387:Core/Src/main.c ****   {
 545              		.loc 1 387 6 view .LVU126
 546 0066 0028     		cmp	r0, #0
 547 0068 1BD1     		bne	.L20
 394:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 548              		.loc 1 394 3 is_stmt 1 view .LVU127
 394:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 549              		.loc 1 394 19 is_stmt 0 view .LVU128
 550 006a 154B     		ldr	r3, .L24+12
 551 006c 0093     		str	r3, [sp]
 395:Core/Src/main.c ****   {
 552              		.loc 1 395 3 is_stmt 1 view .LVU129
 395:Core/Src/main.c ****   {
 553              		.loc 1 395 7 is_stmt 0 view .LVU130
 554 006e 1148     		ldr	r0, .L24
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 24


 555 0070 6946     		mov	r1, sp
 556 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 557              	.LVL29:
 395:Core/Src/main.c ****   {
 558              		.loc 1 395 6 view .LVU131
 559 0076 0028     		cmp	r0, #0
 560 0078 15D1     		bne	.L21
 402:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 561              		.loc 1 402 3 is_stmt 1 view .LVU132
 402:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 562              		.loc 1 402 19 is_stmt 0 view .LVU133
 563 007a 124B     		ldr	r3, .L24+16
 564 007c 0093     		str	r3, [sp]
 403:Core/Src/main.c ****   {
 565              		.loc 1 403 3 is_stmt 1 view .LVU134
 403:Core/Src/main.c ****   {
 566              		.loc 1 403 7 is_stmt 0 view .LVU135
 567 007e 0D48     		ldr	r0, .L24
 568 0080 6946     		mov	r1, sp
 569 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 570              	.LVL30:
 403:Core/Src/main.c ****   {
 571              		.loc 1 403 6 view .LVU136
 572 0086 0028     		cmp	r0, #0
 573 0088 0FD1     		bne	.L22
 410:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 574              		.loc 1 410 3 is_stmt 1 view .LVU137
 410:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 575              		.loc 1 410 19 is_stmt 0 view .LVU138
 576 008a 0F4B     		ldr	r3, .L24+20
 577 008c 0093     		str	r3, [sp]
 411:Core/Src/main.c ****   {
 578              		.loc 1 411 3 is_stmt 1 view .LVU139
 411:Core/Src/main.c ****   {
 579              		.loc 1 411 7 is_stmt 0 view .LVU140
 580 008e 0948     		ldr	r0, .L24
 581 0090 6946     		mov	r1, sp
 582 0092 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 583              	.LVL31:
 411:Core/Src/main.c ****   {
 584              		.loc 1 411 6 view .LVU141
 585 0096 0028     		cmp	r0, #0
 586 0098 09D1     		bne	.L23
 419:Core/Src/main.c **** 
 587              		.loc 1 419 1 view .LVU142
 588 009a 03B0     		add	sp, sp, #12
 589              		@ sp needed
 590 009c 00BD     		pop	{pc}
 591              	.L19:
 380:Core/Src/main.c ****   }
 592              		.loc 1 380 5 is_stmt 1 view .LVU143
 593 009e FFF7FEFF 		bl	Error_Handler
 594              	.LVL32:
 595              	.L20:
 389:Core/Src/main.c ****   }
 596              		.loc 1 389 5 view .LVU144
 597 00a2 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 25


 598              	.LVL33:
 599              	.L21:
 397:Core/Src/main.c ****   }
 600              		.loc 1 397 5 view .LVU145
 601 00a6 FFF7FEFF 		bl	Error_Handler
 602              	.LVL34:
 603              	.L22:
 405:Core/Src/main.c ****   }
 604              		.loc 1 405 5 view .LVU146
 605 00aa FFF7FEFF 		bl	Error_Handler
 606              	.LVL35:
 607              	.L23:
 413:Core/Src/main.c ****   }
 608              		.loc 1 413 5 view .LVU147
 609 00ae FFF7FEFF 		bl	Error_Handler
 610              	.LVL36:
 611              	.L25:
 612 00b2 C046     		.align	2
 613              	.L24:
 614 00b4 00000000 		.word	hadc
 615 00b8 00240140 		.word	1073816576
 616 00bc 20000014 		.word	335544352
 617 00c0 40000018 		.word	402653248
 618 00c4 8000001C 		.word	469762176
 619 00c8 00000244 		.word	1140981760
 620              		.cfi_endproc
 621              	.LFE42:
 623              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 624              		.align	1
 625              		.syntax unified
 626              		.code	16
 627              		.thumb_func
 629              	MX_USART2_UART_Init:
 630              	.LFB43:
 427:Core/Src/main.c **** 
 631              		.loc 1 427 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635 0000 10B5     		push	{r4, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 4, -8
 638              		.cfi_offset 14, -4
 436:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 639              		.loc 1 436 3 view .LVU149
 436:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 640              		.loc 1 436 19 is_stmt 0 view .LVU150
 641 0002 0B48     		ldr	r0, .L29
 642 0004 0B4B     		ldr	r3, .L29+4
 643 0006 0360     		str	r3, [r0]
 437:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 644              		.loc 1 437 3 is_stmt 1 view .LVU151
 437:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 645              		.loc 1 437 24 is_stmt 0 view .LVU152
 646 0008 E123     		movs	r3, #225
 647 000a 5B02     		lsls	r3, r3, #9
 648 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 26


 438:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 649              		.loc 1 438 3 is_stmt 1 view .LVU153
 438:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 650              		.loc 1 438 26 is_stmt 0 view .LVU154
 651 000e 0023     		movs	r3, #0
 652 0010 8360     		str	r3, [r0, #8]
 439:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 653              		.loc 1 439 3 is_stmt 1 view .LVU155
 439:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 654              		.loc 1 439 24 is_stmt 0 view .LVU156
 655 0012 C360     		str	r3, [r0, #12]
 440:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 656              		.loc 1 440 3 is_stmt 1 view .LVU157
 440:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 657              		.loc 1 440 22 is_stmt 0 view .LVU158
 658 0014 0361     		str	r3, [r0, #16]
 441:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 659              		.loc 1 441 3 is_stmt 1 view .LVU159
 441:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 660              		.loc 1 441 20 is_stmt 0 view .LVU160
 661 0016 0C22     		movs	r2, #12
 662 0018 4261     		str	r2, [r0, #20]
 442:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 663              		.loc 1 442 3 is_stmt 1 view .LVU161
 442:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 664              		.loc 1 442 25 is_stmt 0 view .LVU162
 665 001a 8361     		str	r3, [r0, #24]
 443:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 666              		.loc 1 443 3 is_stmt 1 view .LVU163
 443:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 667              		.loc 1 443 28 is_stmt 0 view .LVU164
 668 001c C361     		str	r3, [r0, #28]
 444:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 669              		.loc 1 444 3 is_stmt 1 view .LVU165
 444:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 670              		.loc 1 444 30 is_stmt 0 view .LVU166
 671 001e 0362     		str	r3, [r0, #32]
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 672              		.loc 1 445 3 is_stmt 1 view .LVU167
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 673              		.loc 1 445 38 is_stmt 0 view .LVU168
 674 0020 4362     		str	r3, [r0, #36]
 446:Core/Src/main.c ****   {
 675              		.loc 1 446 3 is_stmt 1 view .LVU169
 446:Core/Src/main.c ****   {
 676              		.loc 1 446 7 is_stmt 0 view .LVU170
 677 0022 FFF7FEFF 		bl	HAL_UART_Init
 678              	.LVL37:
 446:Core/Src/main.c ****   {
 679              		.loc 1 446 6 view .LVU171
 680 0026 0028     		cmp	r0, #0
 681 0028 00D1     		bne	.L28
 454:Core/Src/main.c **** 
 682              		.loc 1 454 1 view .LVU172
 683              		@ sp needed
 684 002a 10BD     		pop	{r4, pc}
 685              	.L28:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 27


 448:Core/Src/main.c ****   }
 686              		.loc 1 448 5 is_stmt 1 view .LVU173
 687 002c FFF7FEFF 		bl	Error_Handler
 688              	.LVL38:
 689              	.L30:
 690              		.align	2
 691              	.L29:
 692 0030 00000000 		.word	huart2
 693 0034 00440040 		.word	1073759232
 694              		.cfi_endproc
 695              	.LFE43:
 697              		.section	.text.SystemClock_Config,"ax",%progbits
 698              		.align	1
 699              		.global	SystemClock_Config
 700              		.syntax unified
 701              		.code	16
 702              		.thumb_func
 704              	SystemClock_Config:
 705              	.LFB41:
 298:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 706              		.loc 1 298 1 view -0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 96
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710 0000 00B5     		push	{lr}
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 14, -4
 713 0002 99B0     		sub	sp, sp, #100
 714              		.cfi_def_cfa_offset 104
 299:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 715              		.loc 1 299 3 view .LVU175
 299:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 716              		.loc 1 299 22 is_stmt 0 view .LVU176
 717 0004 3422     		movs	r2, #52
 718 0006 0021     		movs	r1, #0
 719 0008 0BA8     		add	r0, sp, #44
 720 000a FFF7FEFF 		bl	memset
 721              	.LVL39:
 300:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 722              		.loc 1 300 3 is_stmt 1 view .LVU177
 300:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 723              		.loc 1 300 22 is_stmt 0 view .LVU178
 724 000e 1422     		movs	r2, #20
 725 0010 0021     		movs	r1, #0
 726 0012 06A8     		add	r0, sp, #24
 727 0014 FFF7FEFF 		bl	memset
 728              	.LVL40:
 301:Core/Src/main.c **** 
 729              		.loc 1 301 3 is_stmt 1 view .LVU179
 301:Core/Src/main.c **** 
 730              		.loc 1 301 28 is_stmt 0 view .LVU180
 731 0018 1822     		movs	r2, #24
 732 001a 0021     		movs	r1, #0
 733 001c 6846     		mov	r0, sp
 734 001e FFF7FEFF 		bl	memset
 735              	.LVL41:
 305:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 28


 736              		.loc 1 305 3 is_stmt 1 view .LVU181
 737 0022 1A49     		ldr	r1, .L38
 738 0024 0A68     		ldr	r2, [r1]
 739 0026 1A4B     		ldr	r3, .L38+4
 740 0028 1A40     		ands	r2, r3
 741 002a 8023     		movs	r3, #128
 742 002c 1B01     		lsls	r3, r3, #4
 743 002e 1343     		orrs	r3, r2
 744 0030 0B60     		str	r3, [r1]
 310:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 745              		.loc 1 310 3 view .LVU182
 310:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 746              		.loc 1 310 36 is_stmt 0 view .LVU183
 747 0032 1023     		movs	r3, #16
 748 0034 0B93     		str	r3, [sp, #44]
 311:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 749              		.loc 1 311 3 is_stmt 1 view .LVU184
 311:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 750              		.loc 1 311 30 is_stmt 0 view .LVU185
 751 0036 0F3B     		subs	r3, r3, #15
 752 0038 1193     		str	r3, [sp, #68]
 312:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 753              		.loc 1 312 3 is_stmt 1 view .LVU186
 312:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 754              		.loc 1 312 41 is_stmt 0 view .LVU187
 755 003a 0023     		movs	r3, #0
 756 003c 1293     		str	r3, [sp, #72]
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 757              		.loc 1 313 3 is_stmt 1 view .LVU188
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 758              		.loc 1 313 35 is_stmt 0 view .LVU189
 759 003e A022     		movs	r2, #160
 760 0040 1202     		lsls	r2, r2, #8
 761 0042 1392     		str	r2, [sp, #76]
 314:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 762              		.loc 1 314 3 is_stmt 1 view .LVU190
 314:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 763              		.loc 1 314 34 is_stmt 0 view .LVU191
 764 0044 1493     		str	r3, [sp, #80]
 315:Core/Src/main.c ****   {
 765              		.loc 1 315 3 is_stmt 1 view .LVU192
 315:Core/Src/main.c ****   {
 766              		.loc 1 315 7 is_stmt 0 view .LVU193
 767 0046 0BA8     		add	r0, sp, #44
 768 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 769              	.LVL42:
 315:Core/Src/main.c ****   {
 770              		.loc 1 315 6 view .LVU194
 771 004c 0028     		cmp	r0, #0
 772 004e 17D1     		bne	.L35
 322:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 773              		.loc 1 322 3 is_stmt 1 view .LVU195
 322:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 774              		.loc 1 322 31 is_stmt 0 view .LVU196
 775 0050 0F23     		movs	r3, #15
 776 0052 0693     		str	r3, [sp, #24]
 324:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 29


 777              		.loc 1 324 3 is_stmt 1 view .LVU197
 324:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 778              		.loc 1 324 34 is_stmt 0 view .LVU198
 779 0054 0023     		movs	r3, #0
 780 0056 0793     		str	r3, [sp, #28]
 325:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 781              		.loc 1 325 3 is_stmt 1 view .LVU199
 325:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 782              		.loc 1 325 35 is_stmt 0 view .LVU200
 783 0058 0893     		str	r3, [sp, #32]
 326:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 784              		.loc 1 326 3 is_stmt 1 view .LVU201
 326:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 785              		.loc 1 326 36 is_stmt 0 view .LVU202
 786 005a 0993     		str	r3, [sp, #36]
 327:Core/Src/main.c **** 
 787              		.loc 1 327 3 is_stmt 1 view .LVU203
 327:Core/Src/main.c **** 
 788              		.loc 1 327 36 is_stmt 0 view .LVU204
 789 005c 0A93     		str	r3, [sp, #40]
 329:Core/Src/main.c ****   {
 790              		.loc 1 329 3 is_stmt 1 view .LVU205
 329:Core/Src/main.c ****   {
 791              		.loc 1 329 7 is_stmt 0 view .LVU206
 792 005e 0021     		movs	r1, #0
 793 0060 06A8     		add	r0, sp, #24
 794 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 795              	.LVL43:
 329:Core/Src/main.c ****   {
 796              		.loc 1 329 6 view .LVU207
 797 0066 0028     		cmp	r0, #0
 798 0068 0CD1     		bne	.L36
 333:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 799              		.loc 1 333 3 is_stmt 1 view .LVU208
 333:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 800              		.loc 1 333 38 is_stmt 0 view .LVU209
 801 006a 0223     		movs	r3, #2
 802 006c 0093     		str	r3, [sp]
 334:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 803              		.loc 1 334 3 is_stmt 1 view .LVU210
 334:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 804              		.loc 1 334 38 is_stmt 0 view .LVU211
 805 006e 0023     		movs	r3, #0
 806 0070 0293     		str	r3, [sp, #8]
 335:Core/Src/main.c ****   {
 807              		.loc 1 335 3 is_stmt 1 view .LVU212
 335:Core/Src/main.c ****   {
 808              		.loc 1 335 7 is_stmt 0 view .LVU213
 809 0072 6846     		mov	r0, sp
 810 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 811              	.LVL44:
 335:Core/Src/main.c ****   {
 812              		.loc 1 335 6 view .LVU214
 813 0078 0028     		cmp	r0, #0
 814 007a 05D1     		bne	.L37
 339:Core/Src/main.c **** 
 815              		.loc 1 339 1 view .LVU215
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 30


 816 007c 19B0     		add	sp, sp, #100
 817              		@ sp needed
 818 007e 00BD     		pop	{pc}
 819              	.L35:
 317:Core/Src/main.c ****   }
 820              		.loc 1 317 5 is_stmt 1 view .LVU216
 821 0080 FFF7FEFF 		bl	Error_Handler
 822              	.LVL45:
 823              	.L36:
 331:Core/Src/main.c ****   }
 824              		.loc 1 331 5 view .LVU217
 825 0084 FFF7FEFF 		bl	Error_Handler
 826              	.LVL46:
 827              	.L37:
 337:Core/Src/main.c ****   }
 828              		.loc 1 337 5 view .LVU218
 829 0088 FFF7FEFF 		bl	Error_Handler
 830              	.LVL47:
 831              	.L39:
 832              		.align	2
 833              	.L38:
 834 008c 00700040 		.word	1073770496
 835 0090 FFE7FFFF 		.word	-6145
 836              		.cfi_endproc
 837              	.LFE41:
 839              		.global	__aeabi_idiv
 840              		.section	.text.main,"ax",%progbits
 841              		.align	1
 842              		.global	main
 843              		.syntax unified
 844              		.code	16
 845              		.thumb_func
 847              	main:
 848              	.LFB40:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 849              		.loc 1 99 1 view -0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 16
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 854              		.cfi_def_cfa_offset 20
 855              		.cfi_offset 4, -20
 856              		.cfi_offset 5, -16
 857              		.cfi_offset 6, -12
 858              		.cfi_offset 7, -8
 859              		.cfi_offset 14, -4
 860 0002 C646     		mov	lr, r8
 861 0004 00B5     		push	{lr}
 862              		.cfi_def_cfa_offset 24
 863              		.cfi_offset 8, -24
 864 0006 84B0     		sub	sp, sp, #16
 865              		.cfi_def_cfa_offset 40
 107:Core/Src/main.c **** 
 866              		.loc 1 107 3 view .LVU220
 867 0008 FFF7FEFF 		bl	HAL_Init
 868              	.LVL48:
 114:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 31


 869              		.loc 1 114 3 view .LVU221
 870 000c FFF7FEFF 		bl	SystemClock_Config
 871              	.LVL49:
 121:Core/Src/main.c ****   MX_ADC_Init();
 872              		.loc 1 121 3 view .LVU222
 873 0010 FFF7FEFF 		bl	MX_GPIO_Init
 874              	.LVL50:
 122:Core/Src/main.c ****   MX_USART2_UART_Init();
 875              		.loc 1 122 3 view .LVU223
 876 0014 FFF7FEFF 		bl	MX_ADC_Init
 877              	.LVL51:
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 878              		.loc 1 123 3 view .LVU224
 879 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 880              	.LVL52:
 126:Core/Src/main.c **** 
 881              		.loc 1 126 3 view .LVU225
 882 001c 8548     		ldr	r0, .L57
 883 001e 0021     		movs	r1, #0
 884 0020 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 885              	.LVL53:
 886 0024 36E0     		b	.L56
 887              	.L49:
 888              	.LBB8:
 185:Core/Src/main.c **** 
 889              		.loc 1 185 9 view .LVU226
 890 0026 FFF7FEFF 		bl	Disable_buck_converter
 891              	.LVL54:
 188:Core/Src/main.c ****           current_state = START_CHARGING;
 892              		.loc 1 188 9 view .LVU227
 188:Core/Src/main.c ****           current_state = START_CHARGING;
 893              		.loc 1 188 43 is_stmt 0 view .LVU228
 894 002a 834B     		ldr	r3, .L57+4
 895 002c 1A88     		ldrh	r2, [r3]
 896 002e 834B     		ldr	r3, .L57+8
 897 0030 D318     		adds	r3, r2, r3
 898 0032 9BB2     		uxth	r3, r3
 188:Core/Src/main.c ****           current_state = START_CHARGING;
 899              		.loc 1 188 11 view .LVU229
 900 0034 8249     		ldr	r1, .L57+12
 901 0036 8B42     		cmp	r3, r1
 902 0038 02D8     		bhi	.L50
 189:Core/Src/main.c ****         }
 903              		.loc 1 189 11 is_stmt 1 view .LVU230
 189:Core/Src/main.c ****         }
 904              		.loc 1 189 25 is_stmt 0 view .LVU231
 905 003a 824B     		ldr	r3, .L57+16
 906 003c 0121     		movs	r1, #1
 907 003e 1970     		strb	r1, [r3]
 908              	.L50:
 193:Core/Src/main.c ****           current_state = SLEEP;
 909              		.loc 1 193 9 is_stmt 1 view .LVU232
 193:Core/Src/main.c ****           current_state = SLEEP;
 910              		.loc 1 193 11 is_stmt 0 view .LVU233
 911 0040 FA23     		movs	r3, #250
 912 0042 9B00     		lsls	r3, r3, #2
 913 0044 9A42     		cmp	r2, r3
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 32


 914 0046 02D2     		bcs	.L51
 194:Core/Src/main.c ****         }
 915              		.loc 1 194 11 is_stmt 1 view .LVU234
 194:Core/Src/main.c ****         }
 916              		.loc 1 194 25 is_stmt 0 view .LVU235
 917 0048 7E4B     		ldr	r3, .L57+16
 918 004a 0522     		movs	r2, #5
 919 004c 1A70     		strb	r2, [r3]
 920              	.L51:
 198:Core/Src/main.c ****       break;
 921              		.loc 1 198 9 is_stmt 1 view .LVU236
 922 004e FA20     		movs	r0, #250
 923 0050 4000     		lsls	r0, r0, #1
 924 0052 0100     		movs	r1, r0
 925 0054 FFF7FEFF 		bl	led_blink
 926              	.LVL55:
 199:Core/Src/main.c ****       case START_CHARGING: 
 927              		.loc 1 199 7 view .LVU237
 928              	.L52:
 275:Core/Src/main.c ****     uint8_t buffer [length];
 929              		.loc 1 275 5 discriminator 1 view .LVU238
 276:Core/Src/main.c ****     buffer [0] = 0x02;
 930              		.loc 1 276 5 discriminator 1 view .LVU239
 277:Core/Src/main.c ****     buffer [1] = length;
 931              		.loc 1 277 5 discriminator 1 view .LVU240
 277:Core/Src/main.c ****     buffer [1] = length;
 932              		.loc 1 277 16 is_stmt 0 discriminator 1 view .LVU241
 933 0058 01A9     		add	r1, sp, #4
 934              	.LVL56:
 277:Core/Src/main.c ****     buffer [1] = length;
 935              		.loc 1 277 16 discriminator 1 view .LVU242
 936 005a 0223     		movs	r3, #2
 937 005c 0B70     		strb	r3, [r1]
 278:Core/Src/main.c ****     buffer [2] = (input_voltage_mv >> 8);
 938              		.loc 1 278 5 is_stmt 1 discriminator 1 view .LVU243
 278:Core/Src/main.c ****     buffer [2] = (input_voltage_mv >> 8);
 939              		.loc 1 278 16 is_stmt 0 discriminator 1 view .LVU244
 940 005e 0833     		adds	r3, r3, #8
 941 0060 4B70     		strb	r3, [r1, #1]
 279:Core/Src/main.c ****     buffer [3] = (uint8_t)(input_voltage_mv);
 942              		.loc 1 279 5 is_stmt 1 discriminator 1 view .LVU245
 279:Core/Src/main.c ****     buffer [3] = (uint8_t)(input_voltage_mv);
 943              		.loc 1 279 16 is_stmt 0 discriminator 1 view .LVU246
 944 0062 754B     		ldr	r3, .L57+4
 945 0064 1B88     		ldrh	r3, [r3]
 946 0066 1A0A     		lsrs	r2, r3, #8
 947 0068 8A70     		strb	r2, [r1, #2]
 280:Core/Src/main.c ****     buffer [4] = (buck_output_voltage_mv >> 8);
 948              		.loc 1 280 5 is_stmt 1 discriminator 1 view .LVU247
 280:Core/Src/main.c ****     buffer [4] = (buck_output_voltage_mv >> 8);
 949              		.loc 1 280 16 is_stmt 0 discriminator 1 view .LVU248
 950 006a CB70     		strb	r3, [r1, #3]
 281:Core/Src/main.c ****     buffer [5] = (uint8_t)(buck_output_voltage_mv);
 951              		.loc 1 281 5 is_stmt 1 discriminator 1 view .LVU249
 281:Core/Src/main.c ****     buffer [5] = (uint8_t)(buck_output_voltage_mv);
 952              		.loc 1 281 16 is_stmt 0 discriminator 1 view .LVU250
 953 006c 764B     		ldr	r3, .L57+20
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 33


 954 006e 1B88     		ldrh	r3, [r3]
 955 0070 1A0A     		lsrs	r2, r3, #8
 956 0072 0A71     		strb	r2, [r1, #4]
 282:Core/Src/main.c ****     buffer [6] = (buck_current_ma >> 8);
 957              		.loc 1 282 5 is_stmt 1 discriminator 1 view .LVU251
 282:Core/Src/main.c ****     buffer [6] = (buck_current_ma >> 8);
 958              		.loc 1 282 16 is_stmt 0 discriminator 1 view .LVU252
 959 0074 4B71     		strb	r3, [r1, #5]
 283:Core/Src/main.c ****     buffer [7] = (uint8_t)(buck_current_ma);
 960              		.loc 1 283 5 is_stmt 1 discriminator 1 view .LVU253
 283:Core/Src/main.c ****     buffer [7] = (uint8_t)(buck_current_ma);
 961              		.loc 1 283 16 is_stmt 0 discriminator 1 view .LVU254
 962 0076 754B     		ldr	r3, .L57+24
 963 0078 1B88     		ldrh	r3, [r3]
 964 007a 1A0A     		lsrs	r2, r3, #8
 965 007c 8A71     		strb	r2, [r1, #6]
 284:Core/Src/main.c ****     buffer [8] = (supply_voltage_mv >> 8);
 966              		.loc 1 284 5 is_stmt 1 discriminator 1 view .LVU255
 284:Core/Src/main.c ****     buffer [8] = (supply_voltage_mv >> 8);
 967              		.loc 1 284 16 is_stmt 0 discriminator 1 view .LVU256
 968 007e CB71     		strb	r3, [r1, #7]
 285:Core/Src/main.c ****     buffer [9] = (uint8_t)(supply_voltage_mv);
 969              		.loc 1 285 5 is_stmt 1 discriminator 1 view .LVU257
 285:Core/Src/main.c ****     buffer [9] = (uint8_t)(supply_voltage_mv);
 970              		.loc 1 285 16 is_stmt 0 discriminator 1 view .LVU258
 971 0080 734B     		ldr	r3, .L57+28
 972 0082 1B88     		ldrh	r3, [r3]
 973 0084 1A0A     		lsrs	r2, r3, #8
 974 0086 0A72     		strb	r2, [r1, #8]
 286:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, buffer, length, 100);
 975              		.loc 1 286 5 is_stmt 1 discriminator 1 view .LVU259
 286:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, buffer, length, 100);
 976              		.loc 1 286 16 is_stmt 0 discriminator 1 view .LVU260
 977 0088 4B72     		strb	r3, [r1, #9]
 287:Core/Src/main.c **** 
 978              		.loc 1 287 5 is_stmt 1 discriminator 1 view .LVU261
 979 008a 7248     		ldr	r0, .L57+32
 980 008c 6423     		movs	r3, #100
 981 008e 0A22     		movs	r2, #10
 982 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 983              	.LVL57:
 287:Core/Src/main.c **** 
 984              		.loc 1 287 5 is_stmt 0 discriminator 1 view .LVU262
 985              	.LBE8:
 132:Core/Src/main.c ****   {
 986              		.loc 1 132 9 is_stmt 1 discriminator 1 view .LVU263
 987              	.LVL58:
 988              	.L56:
 132:Core/Src/main.c ****   {
 989              		.loc 1 132 3 view .LVU264
 990              	.LBB9:
 139:Core/Src/main.c ****     
 991              		.loc 1 139 3 view .LVU265
 992 0094 674C     		ldr	r4, .L57
 993 0096 2000     		movs	r0, r4
 994 0098 FFF7FEFF 		bl	HAL_ADC_Start
 995              	.LVL59:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 34


 142:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 996              		.loc 1 142 5 view .LVU266
 997 009c 6421     		movs	r1, #100
 998 009e 2000     		movs	r0, r4
 999 00a0 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1000              	.LVL60:
 143:Core/Src/main.c **** 
 1001              		.loc 1 143 3 view .LVU267
 143:Core/Src/main.c **** 
 1002              		.loc 1 143 13 is_stmt 0 view .LVU268
 1003 00a4 2000     		movs	r0, r4
 1004 00a6 FFF7FEFF 		bl	HAL_ADC_GetValue
 1005              	.LVL61:
 143:Core/Src/main.c **** 
 1006              		.loc 1 143 11 view .LVU269
 1007 00aa 6B4D     		ldr	r5, .L57+36
 1008 00ac 2880     		strh	r0, [r5]
 146:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
 1009              		.loc 1 146 5 is_stmt 1 view .LVU270
 1010 00ae 6421     		movs	r1, #100
 1011 00b0 2000     		movs	r0, r4
 1012 00b2 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1013              	.LVL62:
 147:Core/Src/main.c **** 
 1014              		.loc 1 147 3 view .LVU271
 147:Core/Src/main.c **** 
 1015              		.loc 1 147 13 is_stmt 0 view .LVU272
 1016 00b6 2000     		movs	r0, r4
 1017 00b8 FFF7FEFF 		bl	HAL_ADC_GetValue
 1018              	.LVL63:
 147:Core/Src/main.c **** 
 1019              		.loc 1 147 11 view .LVU273
 1020 00bc 674E     		ldr	r6, .L57+40
 1021 00be 3080     		strh	r0, [r6]
 150:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 1022              		.loc 1 150 5 is_stmt 1 view .LVU274
 1023 00c0 6421     		movs	r1, #100
 1024 00c2 2000     		movs	r0, r4
 1025 00c4 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1026              	.LVL64:
 151:Core/Src/main.c **** 
 1027              		.loc 1 151 3 view .LVU275
 151:Core/Src/main.c **** 
 1028              		.loc 1 151 13 is_stmt 0 view .LVU276
 1029 00c8 2000     		movs	r0, r4
 1030 00ca FFF7FEFF 		bl	HAL_ADC_GetValue
 1031              	.LVL65:
 151:Core/Src/main.c **** 
 1032              		.loc 1 151 11 view .LVU277
 1033 00ce 644F     		ldr	r7, .L57+44
 1034 00d0 3880     		strh	r0, [r7]
 154:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 1035              		.loc 1 154 5 is_stmt 1 view .LVU278
 1036 00d2 6421     		movs	r1, #100
 1037 00d4 2000     		movs	r0, r4
 1038 00d6 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1039              	.LVL66:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 35


 155:Core/Src/main.c **** 
 1040              		.loc 1 155 3 view .LVU279
 155:Core/Src/main.c **** 
 1041              		.loc 1 155 13 is_stmt 0 view .LVU280
 1042 00da 2000     		movs	r0, r4
 1043 00dc FFF7FEFF 		bl	HAL_ADC_GetValue
 1044              	.LVL67:
 155:Core/Src/main.c **** 
 1045              		.loc 1 155 11 view .LVU281
 1046 00e0 604B     		ldr	r3, .L57+48
 1047 00e2 9846     		mov	r8, r3
 1048 00e4 1880     		strh	r0, [r3]
 158:Core/Src/main.c **** 
 1049              		.loc 1 158 5 is_stmt 1 view .LVU282
 1050 00e6 2000     		movs	r0, r4
 1051 00e8 FFF7FEFF 		bl	HAL_ADC_Stop
 1052              	.LVL68:
 161:Core/Src/main.c **** 
 1053              		.loc 1 161 5 view .LVU283
 161:Core/Src/main.c **** 
 1054              		.loc 1 161 34 is_stmt 0 view .LVU284
 1055 00ec 4346     		mov	r3, r8
 1056 00ee 1988     		ldrh	r1, [r3]
 1057 00f0 9620     		movs	r0, #150
 1058 00f2 C003     		lsls	r0, r0, #15
 1059 00f4 FFF7FEFF 		bl	__aeabi_idiv
 1060              	.LVL69:
 161:Core/Src/main.c **** 
 1061              		.loc 1 161 23 view .LVU285
 1062 00f8 554B     		ldr	r3, .L57+28
 1063 00fa 1880     		strh	r0, [r3]
 164:Core/Src/main.c **** 
 1064              		.loc 1 164 5 is_stmt 1 view .LVU286
 1065 00fc 0004     		lsls	r0, r0, #16
 1066 00fe 040C     		lsrs	r4, r0, #16
 164:Core/Src/main.c **** 
 1067              		.loc 1 164 31 is_stmt 0 view .LVU287
 1068 0100 2A88     		ldrh	r2, [r5]
 1069 0102 6243     		muls	r2, r4
 164:Core/Src/main.c **** 
 1070              		.loc 1 164 49 view .LVU288
 1071 0104 D317     		asrs	r3, r2, #31
 1072 0106 1B05     		lsls	r3, r3, #20
 1073 0108 1B0D     		lsrs	r3, r3, #20
 1074 010a 9B18     		adds	r3, r3, r2
 1075 010c 1B13     		asrs	r3, r3, #12
 164:Core/Src/main.c **** 
 1076              		.loc 1 164 54 view .LVU289
 1077 010e 5648     		ldr	r0, .L57+52
 1078 0110 5843     		muls	r0, r3
 164:Core/Src/main.c **** 
 1079              		.loc 1 164 61 view .LVU290
 1080 0112 5649     		ldr	r1, .L57+56
 1081 0114 FFF7FEFF 		bl	__aeabi_idiv
 1082              	.LVL70:
 164:Core/Src/main.c **** 
 1083              		.loc 1 164 22 view .LVU291
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 36


 1084 0118 85B2     		uxth	r5, r0
 1085 011a 474B     		ldr	r3, .L57+4
 1086 011c 1D80     		strh	r5, [r3]
 167:Core/Src/main.c **** 
 1087              		.loc 1 167 5 is_stmt 1 view .LVU292
 167:Core/Src/main.c **** 
 1088              		.loc 1 167 37 is_stmt 0 view .LVU293
 1089 011e 3A88     		ldrh	r2, [r7]
 1090 0120 6243     		muls	r2, r4
 167:Core/Src/main.c **** 
 1091              		.loc 1 167 55 view .LVU294
 1092 0122 D317     		asrs	r3, r2, #31
 1093 0124 1B05     		lsls	r3, r3, #20
 1094 0126 1B0D     		lsrs	r3, r3, #20
 1095 0128 9B18     		adds	r3, r3, r2
 1096 012a 1B13     		asrs	r3, r3, #12
 167:Core/Src/main.c **** 
 1097              		.loc 1 167 60 view .LVU295
 1098 012c 5048     		ldr	r0, .L57+60
 1099 012e 5843     		muls	r0, r3
 167:Core/Src/main.c **** 
 1100              		.loc 1 167 66 view .LVU296
 1101 0130 5049     		ldr	r1, .L57+64
 1102 0132 FFF7FEFF 		bl	__aeabi_idiv
 1103              	.LVL71:
 167:Core/Src/main.c **** 
 1104              		.loc 1 167 28 view .LVU297
 1105 0136 444B     		ldr	r3, .L57+20
 1106 0138 1880     		strh	r0, [r3]
 170:Core/Src/main.c **** 
 1107              		.loc 1 170 5 is_stmt 1 view .LVU298
 170:Core/Src/main.c **** 
 1108              		.loc 1 170 30 is_stmt 0 view .LVU299
 1109 013a 3388     		ldrh	r3, [r6]
 1110 013c 5C43     		muls	r4, r3
 170:Core/Src/main.c **** 
 1111              		.loc 1 170 48 view .LVU300
 1112 013e E317     		asrs	r3, r4, #31
 1113 0140 1B05     		lsls	r3, r3, #20
 1114 0142 1B0D     		lsrs	r3, r3, #20
 1115 0144 1C19     		adds	r4, r3, r4
 1116 0146 2413     		asrs	r4, r4, #12
 170:Core/Src/main.c **** 
 1117              		.loc 1 170 53 view .LVU301
 1118 0148 6001     		lsls	r0, r4, #5
 1119 014a 001B     		subs	r0, r0, r4
 1120 014c 8000     		lsls	r0, r0, #2
 1121 014e 0019     		adds	r0, r0, r4
 1122 0150 C000     		lsls	r0, r0, #3
 170:Core/Src/main.c **** 
 1123              		.loc 1 170 58 view .LVU302
 1124 0152 C321     		movs	r1, #195
 1125 0154 8900     		lsls	r1, r1, #2
 1126 0156 FFF7FEFF 		bl	__aeabi_idiv
 1127              	.LVL72:
 170:Core/Src/main.c **** 
 1128              		.loc 1 170 21 view .LVU303
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 37


 1129 015a 3C4B     		ldr	r3, .L57+24
 1130 015c 1880     		strh	r0, [r3]
 173:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 1131              		.loc 1 173 5 is_stmt 1 view .LVU304
 173:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 1132              		.loc 1 173 7 is_stmt 0 view .LVU305
 1133 015e 464B     		ldr	r3, .L57+68
 1134 0160 9D42     		cmp	r5, r3
 1135 0162 02D9     		bls	.L41
 174:Core/Src/main.c ****     }
 1136              		.loc 1 174 7 is_stmt 1 view .LVU306
 174:Core/Src/main.c ****     }
 1137              		.loc 1 174 21 is_stmt 0 view .LVU307
 1138 0164 374B     		ldr	r3, .L57+16
 1139 0166 0422     		movs	r2, #4
 1140 0168 1A70     		strb	r2, [r3]
 1141              	.L41:
 182:Core/Src/main.c ****       case INIT:
 1142              		.loc 1 182 5 is_stmt 1 view .LVU308
 1143 016a 364B     		ldr	r3, .L57+16
 1144 016c 1A78     		ldrb	r2, [r3]
 1145 016e 052A     		cmp	r2, #5
 1146 0170 5BD8     		bhi	.L42
 1147 0172 9300     		lsls	r3, r2, #2
 1148 0174 414A     		ldr	r2, .L57+72
 1149 0176 D358     		ldr	r3, [r2, r3]
 1150 0178 9F46     		mov	pc, r3
 1151              		.section	.rodata.main,"a",%progbits
 1152              		.align	2
 1153              	.L44:
 1154 0000 26000000 		.word	.L49
 1155 0004 7A010000 		.word	.L48
 1156 0008 86010000 		.word	.L47
 1157 000c D0010000 		.word	.L46
 1158 0010 EC010000 		.word	.L45
 1159 0014 0C020000 		.word	.L43
 1160              		.section	.text.main
 1161              	.L48:
 202:Core/Src/main.c **** 
 1162              		.loc 1 202 9 view .LVU309
 1163 017a FFF7FEFF 		bl	Enable_buck_converter
 1164              	.LVL73:
 205:Core/Src/main.c ****       break;
 1165              		.loc 1 205 9 view .LVU310
 205:Core/Src/main.c ****       break;
 1166              		.loc 1 205 23 is_stmt 0 view .LVU311
 1167 017e 314B     		ldr	r3, .L57+16
 1168 0180 0222     		movs	r2, #2
 1169 0182 1A70     		strb	r2, [r3]
 206:Core/Src/main.c ****       case CHARGING:
 1170              		.loc 1 206 7 is_stmt 1 view .LVU312
 1171 0184 68E7     		b	.L52
 1172              	.L47:
 208:Core/Src/main.c **** 
 1173              		.loc 1 208 9 view .LVU313
 1174 0186 E120     		movs	r0, #225
 1175 0188 6421     		movs	r1, #100
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 38


 1176 018a 8000     		lsls	r0, r0, #2
 1177 018c FFF7FEFF 		bl	led_blink
 1178              	.LVL74:
 211:Core/Src/main.c ****           current_state = INIT;
 1179              		.loc 1 211 9 view .LVU314
 211:Core/Src/main.c ****           current_state = INIT;
 1180              		.loc 1 211 29 is_stmt 0 view .LVU315
 1181 0190 294B     		ldr	r3, .L57+4
 1182 0192 1A88     		ldrh	r2, [r3]
 211:Core/Src/main.c ****           current_state = INIT;
 1183              		.loc 1 211 11 view .LVU316
 1184 0194 3A4B     		ldr	r3, .L57+76
 1185 0196 9A42     		cmp	r2, r3
 1186 0198 02D8     		bhi	.L53
 212:Core/Src/main.c ****         }
 1187              		.loc 1 212 11 is_stmt 1 view .LVU317
 212:Core/Src/main.c ****         }
 1188              		.loc 1 212 25 is_stmt 0 view .LVU318
 1189 019a 2A4B     		ldr	r3, .L57+16
 1190 019c 0022     		movs	r2, #0
 1191 019e 1A70     		strb	r2, [r3]
 1192              	.L53:
 216:Core/Src/main.c ****           timer_check = 0;
 1193              		.loc 1 216 9 is_stmt 1 view .LVU319
 216:Core/Src/main.c ****           timer_check = 0;
 1194              		.loc 1 216 28 is_stmt 0 view .LVU320
 1195 01a0 2A4B     		ldr	r3, .L57+24
 1196 01a2 1B88     		ldrh	r3, [r3]
 216:Core/Src/main.c ****           timer_check = 0;
 1197              		.loc 1 216 11 view .LVU321
 1198 01a4 C72B     		cmp	r3, #199
 1199 01a6 0ED8     		bhi	.L54
 216:Core/Src/main.c ****           timer_check = 0;
 1200              		.loc 1 216 57 discriminator 1 view .LVU322
 1201 01a8 364B     		ldr	r3, .L57+80
 1202 01aa 1B88     		ldrh	r3, [r3]
 216:Core/Src/main.c ****           timer_check = 0;
 1203              		.loc 1 216 42 discriminator 1 view .LVU323
 1204 01ac 0A2B     		cmp	r3, #10
 1205 01ae 0AD9     		bls	.L54
 216:Core/Src/main.c ****           timer_check = 0;
 1206              		.loc 1 216 83 discriminator 2 view .LVU324
 1207 01b0 274B     		ldr	r3, .L57+28
 1208 01b2 1A88     		ldrh	r2, [r3]
 216:Core/Src/main.c ****           timer_check = 0;
 1209              		.loc 1 216 62 discriminator 2 view .LVU325
 1210 01b4 344B     		ldr	r3, .L57+84
 1211 01b6 9A42     		cmp	r2, r3
 1212 01b8 05D9     		bls	.L54
 217:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1213              		.loc 1 217 11 is_stmt 1 view .LVU326
 217:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1214              		.loc 1 217 23 is_stmt 0 view .LVU327
 1215 01ba 324B     		ldr	r3, .L57+80
 1216 01bc 0022     		movs	r2, #0
 1217 01be 1A80     		strh	r2, [r3]
 218:Core/Src/main.c ****         }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 39


 1218              		.loc 1 218 11 is_stmt 1 view .LVU328
 218:Core/Src/main.c ****         }
 1219              		.loc 1 218 25 is_stmt 0 view .LVU329
 1220 01c0 204B     		ldr	r3, .L57+16
 1221 01c2 0332     		adds	r2, r2, #3
 1222 01c4 1A70     		strb	r2, [r3]
 1223              	.L54:
 221:Core/Src/main.c **** 
 1224              		.loc 1 221 9 is_stmt 1 view .LVU330
 221:Core/Src/main.c **** 
 1225              		.loc 1 221 20 is_stmt 0 view .LVU331
 1226 01c6 2F4A     		ldr	r2, .L57+80
 1227 01c8 1388     		ldrh	r3, [r2]
 1228 01ca 0133     		adds	r3, r3, #1
 1229 01cc 1380     		strh	r3, [r2]
 223:Core/Src/main.c ****       case STOP_CHARGING:
 1230              		.loc 1 223 7 is_stmt 1 view .LVU332
 1231 01ce 43E7     		b	.L52
 1232              	.L46:
 226:Core/Src/main.c **** 
 1233              		.loc 1 226 9 view .LVU333
 1234 01d0 FFF7FEFF 		bl	Disable_buck_converter
 1235              	.LVL75:
 228:Core/Src/main.c ****           current_state = SLEEP;
 1236              		.loc 1 228 9 view .LVU334
 228:Core/Src/main.c ****           current_state = SLEEP;
 1237              		.loc 1 228 28 is_stmt 0 view .LVU335
 1238 01d4 1D4B     		ldr	r3, .L57+24
 1239 01d6 1B88     		ldrh	r3, [r3]
 228:Core/Src/main.c ****           current_state = SLEEP;
 1240              		.loc 1 228 11 view .LVU336
 1241 01d8 C72B     		cmp	r3, #199
 1242 01da 03D8     		bhi	.L55
 229:Core/Src/main.c ****         }
 1243              		.loc 1 229 11 is_stmt 1 view .LVU337
 229:Core/Src/main.c ****         }
 1244              		.loc 1 229 25 is_stmt 0 view .LVU338
 1245 01dc 194B     		ldr	r3, .L57+16
 1246 01de 0522     		movs	r2, #5
 1247 01e0 1A70     		strb	r2, [r3]
 1248 01e2 39E7     		b	.L52
 1249              	.L55:
 232:Core/Src/main.c ****         }
 1250              		.loc 1 232 11 is_stmt 1 view .LVU339
 232:Core/Src/main.c ****         }
 1251              		.loc 1 232 25 is_stmt 0 view .LVU340
 1252 01e4 174B     		ldr	r3, .L57+16
 1253 01e6 0022     		movs	r2, #0
 1254 01e8 1A70     		strb	r2, [r3]
 1255 01ea 35E7     		b	.L52
 1256              	.L45:
 236:Core/Src/main.c **** 
 1257              		.loc 1 236 9 is_stmt 1 view .LVU341
 1258 01ec 6421     		movs	r1, #100
 1259 01ee 6420     		movs	r0, #100
 1260 01f0 FFF7FEFF 		bl	led_blink
 1261              	.LVL76:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 40


 239:Core/Src/main.c **** 
 1262              		.loc 1 239 9 view .LVU342
 1263 01f4 FFF7FEFF 		bl	Disable_buck_converter
 1264              	.LVL77:
 242:Core/Src/main.c ****           current_state = INIT;
 1265              		.loc 1 242 9 view .LVU343
 242:Core/Src/main.c ****           current_state = INIT;
 1266              		.loc 1 242 29 is_stmt 0 view .LVU344
 1267 01f8 0F4B     		ldr	r3, .L57+4
 1268 01fa 1A88     		ldrh	r2, [r3]
 242:Core/Src/main.c ****           current_state = INIT;
 1269              		.loc 1 242 11 view .LVU345
 1270 01fc 234B     		ldr	r3, .L57+88
 1271 01fe 9A42     		cmp	r2, r3
 1272 0200 00D9     		bls	.LCB1010
 1273 0202 29E7     		b	.L52	@long jump
 1274              	.LCB1010:
 243:Core/Src/main.c ****         }
 1275              		.loc 1 243 11 is_stmt 1 view .LVU346
 243:Core/Src/main.c ****         }
 1276              		.loc 1 243 25 is_stmt 0 view .LVU347
 1277 0204 0F4B     		ldr	r3, .L57+16
 1278 0206 0022     		movs	r2, #0
 1279 0208 1A70     		strb	r2, [r3]
 1280 020a 25E7     		b	.L52
 1281              	.L43:
 249:Core/Src/main.c **** 
 1282              		.loc 1 249 9 is_stmt 1 view .LVU348
 1283 020c 0022     		movs	r2, #0
 1284 020e 0221     		movs	r1, #2
 1285 0210 1F48     		ldr	r0, .L57+92
 1286 0212 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1287              	.LVL78:
 261:Core/Src/main.c **** 
 1288              		.loc 1 261 9 view .LVU349
 1289 0216 FFF7FEFF 		bl	HAL_SuspendTick
 1290              	.LVL79:
 264:Core/Src/main.c **** 
 1291              		.loc 1 264 9 view .LVU350
 1292 021a 0121     		movs	r1, #1
 1293 021c 0120     		movs	r0, #1
 1294 021e FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
 1295              	.LVL80:
 267:Core/Src/main.c **** 
 1296              		.loc 1 267 9 view .LVU351
 267:Core/Src/main.c **** 
 1297              		.loc 1 267 23 is_stmt 0 view .LVU352
 1298 0222 084B     		ldr	r3, .L57+16
 1299 0224 0022     		movs	r2, #0
 1300 0226 1A70     		strb	r2, [r3]
 269:Core/Src/main.c ****       default:
 1301              		.loc 1 269 7 is_stmt 1 view .LVU353
 1302 0228 16E7     		b	.L52
 1303              	.L42:
 271:Core/Src/main.c ****       break;
 1304              		.loc 1 271 7 view .LVU354
 271:Core/Src/main.c ****       break;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 41


 1305              		.loc 1 271 21 is_stmt 0 view .LVU355
 1306 022a 064B     		ldr	r3, .L57+16
 1307 022c 0022     		movs	r2, #0
 1308 022e 1A70     		strb	r2, [r3]
 272:Core/Src/main.c ****     }
 1309              		.loc 1 272 7 is_stmt 1 view .LVU356
 1310 0230 12E7     		b	.L52
 1311              	.L58:
 1312 0232 C046     		.align	2
 1313              	.L57:
 1314 0234 00000000 		.word	hadc
 1315 0238 00000000 		.word	input_voltage_mv
 1316 023c 77ECFFFF 		.word	-5001
 1317 0240 66420000 		.word	16998
 1318 0244 00000000 		.word	current_state
 1319 0248 00000000 		.word	buck_output_voltage_mv
 1320 024c 00000000 		.word	buck_current_ma
 1321 0250 00000000 		.word	supply_voltage_mv
 1322 0254 00000000 		.word	huart2
 1323 0258 00000000 		.word	ADC_CH5
 1324 025c 00000000 		.word	ADC_CH6
 1325 0260 00000000 		.word	ADC_CH7
 1326 0264 00000000 		.word	ADC_REF
 1327 0268 BC6D0300 		.word	224700
 1328 026c 5C120000 		.word	4700
 1329 0270 58150100 		.word	71000
 1330 0274 983A0000 		.word	15000
 1331 0278 F0550000 		.word	22000
 1332 027c 00000000 		.word	.L44
 1333 0280 87130000 		.word	4999
 1334 0284 00000000 		.word	timer_check
 1335 0288 280A0000 		.word	2600
 1336 028c EF550000 		.word	21999
 1337 0290 00040050 		.word	1342178304
 1338              	.LBE9:
 1339              		.cfi_endproc
 1340              	.LFE40:
 1342              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1343              		.align	1
 1344              		.global	HAL_GPIO_EXTI_Callback
 1345              		.syntax unified
 1346              		.code	16
 1347              		.thumb_func
 1349              	HAL_GPIO_EXTI_Callback:
 1350              	.LVL81:
 1351              	.LFB48:
 529:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1352              		.loc 1 529 1 view -0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 529:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1356              		.loc 1 529 1 is_stmt 0 view .LVU358
 1357 0000 10B5     		push	{r4, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 4, -8
 1360              		.cfi_offset 14, -4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 42


 532:Core/Src/main.c **** 	  HAL_ResumeTick();
 1361              		.loc 1 532 4 is_stmt 1 view .LVU359
 1362 0002 FFF7FEFF 		bl	SystemClock_Config
 1363              	.LVL82:
 533:Core/Src/main.c ****   //}
 1364              		.loc 1 533 4 view .LVU360
 1365 0006 FFF7FEFF 		bl	HAL_ResumeTick
 1366              	.LVL83:
 535:Core/Src/main.c **** 
 1367              		.loc 1 535 1 is_stmt 0 view .LVU361
 1368              		@ sp needed
 1369 000a 10BD     		pop	{r4, pc}
 1370              		.cfi_endproc
 1371              	.LFE48:
 1373              		.global	current_state
 1374              		.section	.bss.current_state,"aw",%nobits
 1377              	current_state:
 1378 0000 00       		.space	1
 1379              		.global	timer_check
 1380              		.section	.bss.timer_check,"aw",%nobits
 1381              		.align	1
 1384              	timer_check:
 1385 0000 0000     		.space	2
 1386              		.global	previous_state
 1387              		.section	.bss.previous_state,"aw",%nobits
 1390              	previous_state:
 1391 0000 00       		.space	1
 1392              		.global	buck_current_ma
 1393              		.section	.bss.buck_current_ma,"aw",%nobits
 1394              		.align	1
 1397              	buck_current_ma:
 1398 0000 0000     		.space	2
 1399              		.global	buck_output_voltage_mv
 1400              		.section	.bss.buck_output_voltage_mv,"aw",%nobits
 1401              		.align	1
 1404              	buck_output_voltage_mv:
 1405 0000 0000     		.space	2
 1406              		.global	input_voltage_mv
 1407              		.section	.bss.input_voltage_mv,"aw",%nobits
 1408              		.align	1
 1411              	input_voltage_mv:
 1412 0000 0000     		.space	2
 1413              		.global	supply_voltage_mv
 1414              		.section	.bss.supply_voltage_mv,"aw",%nobits
 1415              		.align	1
 1418              	supply_voltage_mv:
 1419 0000 0000     		.space	2
 1420              		.global	ADC_REF
 1421              		.section	.bss.ADC_REF,"aw",%nobits
 1422              		.align	1
 1425              	ADC_REF:
 1426 0000 0000     		.space	2
 1427              		.global	ADC_CH7
 1428              		.section	.bss.ADC_CH7,"aw",%nobits
 1429              		.align	1
 1432              	ADC_CH7:
 1433 0000 0000     		.space	2
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 43


 1434              		.global	ADC_CH6
 1435              		.section	.bss.ADC_CH6,"aw",%nobits
 1436              		.align	1
 1439              	ADC_CH6:
 1440 0000 0000     		.space	2
 1441              		.global	ADC_CH5
 1442              		.section	.bss.ADC_CH5,"aw",%nobits
 1443              		.align	1
 1446              	ADC_CH5:
 1447 0000 0000     		.space	2
 1448              		.global	huart2
 1449              		.section	.bss.huart2,"aw",%nobits
 1450              		.align	2
 1453              	huart2:
 1454 0000 00000000 		.space	136
 1454      00000000 
 1454      00000000 
 1454      00000000 
 1454      00000000 
 1455              		.global	hadc
 1456              		.section	.bss.hadc,"aw",%nobits
 1457              		.align	2
 1460              	hadc:
 1461 0000 00000000 		.space	92
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1462              		.text
 1463              	.Letext0:
 1464              		.file 3 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 1465              		.file 4 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1466              		.file 5 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1467              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 1468              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 1469              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 1470              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 1471              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 1472              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 1473              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 1474              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 1475              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 1476              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 1477              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr.h"
 1478              		.file 17 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc_ex.h"
 1479              		.file 18 "<built-in>"
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:19     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:172    .text.MX_GPIO_Init:00000000000000a4 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:179    .text.load_switch_enable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:185    .text.load_switch_enable:0000000000000000 load_switch_enable
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:216    .text.load_switch_disable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:222    .text.load_switch_disable:0000000000000000 load_switch_disable
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:253    .text.led_blink:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:259    .text.led_blink:0000000000000000 led_blink
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:306    .text.led_blink:000000000000002c $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:311    .text.Enable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:317    .text.Enable_buck_converter:0000000000000000 Enable_buck_converter
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:356    .text.Disable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:362    .text.Disable_buck_converter:0000000000000000 Disable_buck_converter
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:397    .text.Error_Handler:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:403    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:435    .text.MX_ADC_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:440    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:614    .text.MX_ADC_Init:00000000000000b4 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1460   .bss.hadc:0000000000000000 hadc
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:624    .text.MX_USART2_UART_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:629    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:692    .text.MX_USART2_UART_Init:0000000000000030 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1453   .bss.huart2:0000000000000000 huart2
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:698    .text.SystemClock_Config:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:704    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:834    .text.SystemClock_Config:000000000000008c $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:841    .text.main:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:847    .text.main:0000000000000000 main
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1152   .rodata.main:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1314   .text.main:0000000000000234 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1411   .bss.input_voltage_mv:0000000000000000 input_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1377   .bss.current_state:0000000000000000 current_state
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1404   .bss.buck_output_voltage_mv:0000000000000000 buck_output_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1397   .bss.buck_current_ma:0000000000000000 buck_current_ma
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1418   .bss.supply_voltage_mv:0000000000000000 supply_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1446   .bss.ADC_CH5:0000000000000000 ADC_CH5
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1439   .bss.ADC_CH6:0000000000000000 ADC_CH6
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1432   .bss.ADC_CH7:0000000000000000 ADC_CH7
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1425   .bss.ADC_REF:0000000000000000 ADC_REF
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1384   .bss.timer_check:0000000000000000 timer_check
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1343   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1349   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1378   .bss.current_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1381   .bss.timer_check:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1390   .bss.previous_state:0000000000000000 previous_state
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1391   .bss.previous_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1394   .bss.buck_current_ma:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1401   .bss.buck_output_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1408   .bss.input_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1415   .bss.supply_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1422   .bss.ADC_REF:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1429   .bss.ADC_CH7:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1436   .bss.ADC_CH6:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1443   .bss.ADC_CH5:0000000000000000 $d
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s 			page 45


C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1450   .bss.huart2:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccLsBbGf.s:1457   .bss.hadc:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_idiv
HAL_Init
HAL_ADCEx_Calibration_Start
HAL_UART_Transmit
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_SuspendTick
HAL_PWR_EnterSTOPMode
HAL_ResumeTick

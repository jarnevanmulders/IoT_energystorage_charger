ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #define VREFINT_CAL_ADDR  ((uint16_t*) ((uint32_t) 0x1FF80078))
  36:Core/Src/main.c **** #define MIN_VOLTAGE       5000
  37:Core/Src/main.c **** #define MAX_VOLTAGE       22000
  38:Core/Src/main.c **** #define MIN_CURRENT       200
  39:Core/Src/main.c **** #define SLEEP_VOLTAGE     1000
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_ADC_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** // *** Load switch functions *** //
  62:Core/Src/main.c **** void load_switch_enable(void);
  63:Core/Src/main.c **** void load_switch_disable(void);
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // *** Blocking led functions ***//
  66:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2);
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
  69:Core/Src/main.c **** void Enable_buck_converter(void);
  70:Core/Src/main.c **** void Disable_buck_converter(void);
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   uint16_t ADC_CH5, ADC_CH6, ADC_CH7, ADC_REF;
  78:Core/Src/main.c ****   uint16_t supply_voltage_mv = 0;
  79:Core/Src/main.c ****   uint16_t input_voltage_mv = 0;
  80:Core/Src/main.c ****   uint16_t buck_output_voltage_mv = 0;
  81:Core/Src/main.c ****   uint16_t buck_current_ma = 0;
  82:Core/Src/main.c ****   uint8_t previous_state = 0;
  83:Core/Src/main.c ****   uint16_t timer_check = 0;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   // State machine
  86:Core/Src/main.c ****   typedef enum {INIT, START_CHARGING, CHARGING, STOP_CHARGING, OVER_VOLTAGE, SLEEP} State_type;
  87:Core/Src/main.c ****   State_type current_state = INIT;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END 0 */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /**
  93:Core/Src/main.c ****   * @brief  The application entry point.
  94:Core/Src/main.c ****   * @retval int
  95:Core/Src/main.c ****   */
  96:Core/Src/main.c **** int main(void)
  97:Core/Src/main.c **** {
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Core/Src/main.c ****   HAL_Init();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 108:Core/Src/main.c ****   // reference = VREFINT_CAL_ADDR;
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
 121:Core/Src/main.c ****   MX_ADC_Init();
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc, ADC_SINGLE_ENDED);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   while (1)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     /* USER CODE END WHILE */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     // Start ADC Conversion and read two ADC values
 137:Core/Src/main.c **** 		HAL_ADC_Start(&hadc);
 138:Core/Src/main.c ****     
 139:Core/Src/main.c ****     // ADC_CHANNEL_5 & Read The ADC Conversion Result
 140:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 141:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****     // ADC_CHANNEL_6 & Read The ADC Conversion Result
 144:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 145:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****     // ADC_CHANNEL_7 & Read The ADC Conversion Result
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 4


 148:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 149:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     // ADC_CHANNEL_VREFINT & Read The ADC Conversion Result
 152:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 153:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****     // Stop ADC Conversion
 156:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     // Calculate supply voltage MCU
 159:Core/Src/main.c ****     supply_voltage_mv = 1200*4096/ADC_REF;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     // Calculate input voltage BUCK converter
 162:Core/Src/main.c ****     input_voltage_mv = ADC_CH5*supply_voltage_mv/4096*224700/4700;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     // Calculate buck converter output voltage
 165:Core/Src/main.c ****     buck_output_voltage_mv = ADC_CH7*supply_voltage_mv/4096*71000/15000;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     // Calculate buck converter output current
 168:Core/Src/main.c ****     buck_current_ma = ADC_CH6*supply_voltage_mv/4096*1000/780;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****     if(input_voltage_mv > MAX_VOLTAGE){
 172:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 173:Core/Src/main.c ****     }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****     
 176:Core/Src/main.c ****     ///////////////////////////
 177:Core/Src/main.c ****     // *** State machine *** //
 178:Core/Src/main.c ****     ///////////////////////////
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****     switch (current_state){
 181:Core/Src/main.c ****       case INIT:
 182:Core/Src/main.c ****         // Check input voltage before start charging
 183:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE && input_voltage_mv > MIN_VOLTAGE){
 184:Core/Src/main.c ****           current_state = START_CHARGING;
 185:Core/Src/main.c ****         }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****         // Check input voltage in not below minimum voltage
 188:Core/Src/main.c ****         if(input_voltage_mv < SLEEP_VOLTAGE){
 189:Core/Src/main.c ****           current_state = SLEEP;
 190:Core/Src/main.c ****         }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****         // Blink led
 193:Core/Src/main.c ****         led_blink(500, 500);
 194:Core/Src/main.c ****       break;
 195:Core/Src/main.c ****       case START_CHARGING: 
 196:Core/Src/main.c ****         // Enable buck conveter safely
 197:Core/Src/main.c ****         Enable_buck_converter();
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****         // Change state
 200:Core/Src/main.c ****         current_state = CHARGING;
 201:Core/Src/main.c ****       break;
 202:Core/Src/main.c ****       case CHARGING:
 203:Core/Src/main.c ****         led_blink(900, 100);
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 5


 205:Core/Src/main.c ****         // Protection, check every cycle
 206:Core/Src/main.c ****         if(input_voltage_mv > MAX_VOLTAGE || input_voltage_mv < MIN_VOLTAGE){
 207:Core/Src/main.c ****           current_state = STOP_CHARGING;
 208:Core/Src/main.c ****         }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****         // Check for current lower then MIN_CURRENT after 10 sec
 211:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT && timer_check > 10){
 212:Core/Src/main.c ****           timer_check = 0;
 213:Core/Src/main.c ****           current_state = STOP_CHARGING;
 214:Core/Src/main.c ****         }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****         timer_check++;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****       break;
 219:Core/Src/main.c ****       case STOP_CHARGING:
 220:Core/Src/main.c ****         // Disable buck conveter safely
 221:Core/Src/main.c ****         Disable_buck_converter();
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT){
 224:Core/Src/main.c ****           current_state = SLEEP;
 225:Core/Src/main.c ****         }
 226:Core/Src/main.c ****         else{
 227:Core/Src/main.c ****           current_state = INIT;
 228:Core/Src/main.c ****         }
 229:Core/Src/main.c ****       break;
 230:Core/Src/main.c ****       case OVER_VOLTAGE:
 231:Core/Src/main.c ****         led_blink(100, 100);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****         // Disable buck conveter safely
 234:Core/Src/main.c ****         Disable_buck_converter();
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****         // Check for save voltage
 237:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE){
 238:Core/Src/main.c ****           current_state = INIT;
 239:Core/Src/main.c ****         }
 240:Core/Src/main.c ****       break;
 241:Core/Src/main.c ****       case SLEEP:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****         // Disable LED
 244:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****         // Check if input voltage is above 2 V and enable timer interrupt
 247:Core/Src/main.c ****         
 248:Core/Src/main.c ****         // Disable the systick interrupt
 249:Core/Src/main.c ****         HAL_SuspendTick();
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****         // Enter Stop Mode
 252:Core/Src/main.c ****         HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****         // Change state
 255:Core/Src/main.c ****         current_state = INIT;
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****       break;
 258:Core/Src/main.c ****       default:
 259:Core/Src/main.c ****       current_state = INIT;
 260:Core/Src/main.c ****       break;
 261:Core/Src/main.c ****     }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c ****   /* USER CODE END 3 */
 265:Core/Src/main.c **** }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /**
 268:Core/Src/main.c ****   * @brief System Clock Configuration
 269:Core/Src/main.c ****   * @retval None
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c **** void SystemClock_Config(void)
 272:Core/Src/main.c **** {
 273:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 274:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 281:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 284:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 285:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 286:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 287:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 288:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 296:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 297:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 298:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 300:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c **** }
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /**
 309:Core/Src/main.c ****   * @brief ADC Initialization Function
 310:Core/Src/main.c ****   * @param None
 311:Core/Src/main.c ****   * @retval None
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c **** static void MX_ADC_Init(void)
 314:Core/Src/main.c **** {
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 327:Core/Src/main.c ****   */
 328:Core/Src/main.c ****   hadc.Instance = ADC1;
 329:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 330:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 331:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 332:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 333:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 334:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 335:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 336:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 337:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 338:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 339:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 340:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 341:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 342:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 343:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 344:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 345:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 353:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 354:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 355:Core/Src/main.c ****   {
 356:Core/Src/main.c ****     Error_Handler();
 357:Core/Src/main.c ****   }
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 362:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 363:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 364:Core/Src/main.c ****   {
 365:Core/Src/main.c ****     Error_Handler();
 366:Core/Src/main.c ****   }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 369:Core/Src/main.c ****   */
 370:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 371:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 372:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 373:Core/Src/main.c ****   {
 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 8


 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 378:Core/Src/main.c ****   */
 379:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 380:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 381:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 382:Core/Src/main.c ****   {
 383:Core/Src/main.c ****     Error_Handler();
 384:Core/Src/main.c ****   }
 385:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   // *** DO not ferget to add "sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;" if regenerating HAL drivers
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /**
 394:Core/Src/main.c ****   * @brief GPIO Initialization Function
 395:Core/Src/main.c ****   * @param None
 396:Core/Src/main.c ****   * @retval None
 397:Core/Src/main.c ****   */
 398:Core/Src/main.c **** static void MX_GPIO_Init(void)
 399:Core/Src/main.c **** {
  26              		.loc 1 399 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 C646     		mov	lr, r8
  38 0004 00B5     		push	{lr}
  39              		.cfi_def_cfa_offset 24
  40              		.cfi_offset 8, -24
  41 0006 88B0     		sub	sp, sp, #32
  42              		.cfi_def_cfa_offset 56
 400:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 400 3 view .LVU1
  44              		.loc 1 400 20 is_stmt 0 view .LVU2
  45 0008 1422     		movs	r2, #20
  46 000a 0021     		movs	r1, #0
  47 000c 03A8     		add	r0, sp, #12
  48 000e FFF7FEFF 		bl	memset
  49              	.LVL0:
 401:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 402:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 405:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 405 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 405 3 view .LVU4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 9


  53              		.loc 1 405 3 view .LVU5
  54 0012 294B     		ldr	r3, .L2
  55 0014 DA6A     		ldr	r2, [r3, #44]
  56 0016 0126     		movs	r6, #1
  57 0018 3243     		orrs	r2, r6
  58 001a DA62     		str	r2, [r3, #44]
  59              		.loc 1 405 3 view .LVU6
  60 001c DA6A     		ldr	r2, [r3, #44]
  61 001e 3240     		ands	r2, r6
  62 0020 0192     		str	r2, [sp, #4]
  63              		.loc 1 405 3 view .LVU7
  64 0022 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 405 3 view .LVU8
 406:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  67              		.loc 1 406 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 406 3 view .LVU10
  70              		.loc 1 406 3 view .LVU11
  71 0024 DA6A     		ldr	r2, [r3, #44]
  72 0026 0225     		movs	r5, #2
  73 0028 2A43     		orrs	r2, r5
  74 002a DA62     		str	r2, [r3, #44]
  75              		.loc 1 406 3 view .LVU12
  76 002c DB6A     		ldr	r3, [r3, #44]
  77 002e 2B40     		ands	r3, r5
  78 0030 0293     		str	r3, [sp, #8]
  79              		.loc 1 406 3 view .LVU13
  80 0032 029B     		ldr	r3, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 406 3 view .LVU14
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 409:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin, GPIO_PIN_RESET);
  83              		.loc 1 409 3 view .LVU15
  84 0034 214C     		ldr	r4, .L2+4
  85 0036 A023     		movs	r3, #160
  86 0038 DB05     		lsls	r3, r3, #23
  87 003a 9846     		mov	r8, r3
  88 003c 0022     		movs	r2, #0
  89 003e 2100     		movs	r1, r4
  90 0040 1800     		movs	r0, r3
  91 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL1:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 412:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  93              		.loc 1 412 3 view .LVU16
  94 0046 1E4F     		ldr	r7, .L2+8
  95 0048 0022     		movs	r2, #0
  96 004a 0221     		movs	r1, #2
  97 004c 3800     		movs	r0, r7
  98 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL2:
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /*Configure GPIO pins : EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin */
 415:Core/Src/main.c ****   GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 10


 100              		.loc 1 415 3 view .LVU17
 101              		.loc 1 415 23 is_stmt 0 view .LVU18
 102 0052 0394     		str	r4, [sp, #12]
 416:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 103              		.loc 1 416 3 is_stmt 1 view .LVU19
 104              		.loc 1 416 24 is_stmt 0 view .LVU20
 105 0054 0496     		str	r6, [sp, #16]
 417:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 106              		.loc 1 417 3 is_stmt 1 view .LVU21
 107              		.loc 1 417 24 is_stmt 0 view .LVU22
 108 0056 0024     		movs	r4, #0
 109 0058 0594     		str	r4, [sp, #20]
 418:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 110              		.loc 1 418 3 is_stmt 1 view .LVU23
 111              		.loc 1 418 25 is_stmt 0 view .LVU24
 112 005a 0694     		str	r4, [sp, #24]
 419:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 113              		.loc 1 419 3 is_stmt 1 view .LVU25
 114 005c 03A9     		add	r1, sp, #12
 115 005e 4046     		mov	r0, r8
 116 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 117              	.LVL3:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 422:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 118              		.loc 1 422 3 view .LVU26
 119              		.loc 1 422 23 is_stmt 0 view .LVU27
 120 0064 0395     		str	r5, [sp, #12]
 423:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 121              		.loc 1 423 3 is_stmt 1 view .LVU28
 122              		.loc 1 423 24 is_stmt 0 view .LVU29
 123 0066 0496     		str	r6, [sp, #16]
 424:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 424 3 is_stmt 1 view .LVU30
 125              		.loc 1 424 24 is_stmt 0 view .LVU31
 126 0068 0594     		str	r4, [sp, #20]
 425:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 127              		.loc 1 425 3 is_stmt 1 view .LVU32
 128              		.loc 1 425 25 is_stmt 0 view .LVU33
 129 006a 0694     		str	r4, [sp, #24]
 426:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 130              		.loc 1 426 3 is_stmt 1 view .LVU34
 131 006c 03A9     		add	r1, sp, #12
 132 006e 3800     		movs	r0, r7
 133 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL4:
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /*Configure GPIO pin : INT_Pin */
 429:Core/Src/main.c ****   GPIO_InitStruct.Pin = INT_Pin;
 135              		.loc 1 429 3 view .LVU35
 136              		.loc 1 429 23 is_stmt 0 view .LVU36
 137 0074 8023     		movs	r3, #128
 138 0076 DB00     		lsls	r3, r3, #3
 139 0078 0393     		str	r3, [sp, #12]
 430:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 140              		.loc 1 430 3 is_stmt 1 view .LVU37
 141              		.loc 1 430 24 is_stmt 0 view .LVU38
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 11


 142 007a 8823     		movs	r3, #136
 143 007c 5B03     		lsls	r3, r3, #13
 144 007e 0493     		str	r3, [sp, #16]
 431:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 431 3 is_stmt 1 view .LVU39
 146              		.loc 1 431 24 is_stmt 0 view .LVU40
 147 0080 0594     		str	r4, [sp, #20]
 432:Core/Src/main.c ****   HAL_GPIO_Init(INT_GPIO_Port, &GPIO_InitStruct);
 148              		.loc 1 432 3 is_stmt 1 view .LVU41
 149 0082 03A9     		add	r1, sp, #12
 150 0084 4046     		mov	r0, r8
 151 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL5:
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /*Configure GPIO pins : PB6 PB7 */
 435:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 153              		.loc 1 435 3 view .LVU42
 154              		.loc 1 435 23 is_stmt 0 view .LVU43
 155 008a C023     		movs	r3, #192
 156 008c 0393     		str	r3, [sp, #12]
 436:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 157              		.loc 1 436 3 is_stmt 1 view .LVU44
 158              		.loc 1 436 24 is_stmt 0 view .LVU45
 159 008e 0495     		str	r5, [sp, #16]
 437:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 160              		.loc 1 437 3 is_stmt 1 view .LVU46
 161              		.loc 1 437 24 is_stmt 0 view .LVU47
 162 0090 0594     		str	r4, [sp, #20]
 438:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 163              		.loc 1 438 3 is_stmt 1 view .LVU48
 164              		.loc 1 438 25 is_stmt 0 view .LVU49
 165 0092 BD3B     		subs	r3, r3, #189
 166 0094 0693     		str	r3, [sp, #24]
 439:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_USART2;
 167              		.loc 1 439 3 is_stmt 1 view .LVU50
 168              		.loc 1 439 29 is_stmt 0 view .LVU51
 169 0096 0794     		str	r4, [sp, #28]
 440:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 170              		.loc 1 440 3 is_stmt 1 view .LVU52
 171 0098 03A9     		add	r1, sp, #12
 172 009a 3800     		movs	r0, r7
 173 009c FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL6:
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* EXTI interrupt init*/
 443:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 175              		.loc 1 443 3 view .LVU53
 176 00a0 0022     		movs	r2, #0
 177 00a2 0021     		movs	r1, #0
 178 00a4 0720     		movs	r0, #7
 179 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 180              	.LVL7:
 444:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 181              		.loc 1 444 3 view .LVU54
 182 00aa 0720     		movs	r0, #7
 183 00ac FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 184              	.LVL8:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 12


 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 447:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 448:Core/Src/main.c **** }
 185              		.loc 1 448 1 is_stmt 0 view .LVU55
 186 00b0 08B0     		add	sp, sp, #32
 187              		@ sp needed
 188 00b2 80BC     		pop	{r7}
 189 00b4 B846     		mov	r8, r7
 190 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 191              	.L3:
 192              		.align	2
 193              	.L2:
 194 00b8 00100240 		.word	1073876992
 195 00bc 13020000 		.word	531
 196 00c0 00040050 		.word	1342178304
 197              		.cfi_endproc
 198              	.LFE43:
 200              		.section	.text.load_switch_enable,"ax",%progbits
 201              		.align	1
 202              		.global	load_switch_enable
 203              		.syntax unified
 204              		.code	16
 205              		.thumb_func
 207              	load_switch_enable:
 208              	.LFB44:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** // *** Load Switch functions *** //
 453:Core/Src/main.c **** // Enable load switch 1 and 2
 454:Core/Src/main.c **** void load_switch_enable(void){
 209              		.loc 1 454 30 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 10B5     		push	{r4, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 4, -8
 216              		.cfi_offset 14, -4
 455:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 217              		.loc 1 455 3 view .LVU57
 218 0002 A024     		movs	r4, #160
 219 0004 E405     		lsls	r4, r4, #23
 220 0006 0122     		movs	r2, #1
 221 0008 0121     		movs	r1, #1
 222 000a 2000     		movs	r0, r4
 223 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 224              	.LVL9:
 456:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 225              		.loc 1 456 3 view .LVU58
 226 0010 0122     		movs	r2, #1
 227 0012 0221     		movs	r1, #2
 228 0014 2000     		movs	r0, r4
 229 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 230              	.LVL10:
 457:Core/Src/main.c **** }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 13


 231              		.loc 1 457 1 is_stmt 0 view .LVU59
 232              		@ sp needed
 233 001a 10BD     		pop	{r4, pc}
 234              		.cfi_endproc
 235              	.LFE44:
 237              		.section	.text.load_switch_disable,"ax",%progbits
 238              		.align	1
 239              		.global	load_switch_disable
 240              		.syntax unified
 241              		.code	16
 242              		.thumb_func
 244              	load_switch_disable:
 245              	.LFB45:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** // Disable load switch 1 and 2
 460:Core/Src/main.c **** void load_switch_disable(void){
 246              		.loc 1 460 31 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
 461:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_RESET);
 254              		.loc 1 461 3 view .LVU61
 255 0002 A024     		movs	r4, #160
 256 0004 E405     		lsls	r4, r4, #23
 257 0006 0022     		movs	r2, #0
 258 0008 0121     		movs	r1, #1
 259 000a 2000     		movs	r0, r4
 260 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL11:
 462:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_RESET);
 262              		.loc 1 462 3 view .LVU62
 263 0010 0022     		movs	r2, #0
 264 0012 0221     		movs	r1, #2
 265 0014 2000     		movs	r0, r4
 266 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 267              	.LVL12:
 463:Core/Src/main.c **** }
 268              		.loc 1 463 1 is_stmt 0 view .LVU63
 269              		@ sp needed
 270 001a 10BD     		pop	{r4, pc}
 271              		.cfi_endproc
 272              	.LFE45:
 274              		.section	.text.led_blink,"ax",%progbits
 275              		.align	1
 276              		.global	led_blink
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 281              	led_blink:
 282              	.LVL13:
 283              	.LFB46:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2){
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 14


 284              		.loc 1 465 61 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		.loc 1 465 61 is_stmt 0 view .LVU65
 289 0000 70B5     		push	{r4, r5, r6, lr}
 290              		.cfi_def_cfa_offset 16
 291              		.cfi_offset 4, -16
 292              		.cfi_offset 5, -12
 293              		.cfi_offset 6, -8
 294              		.cfi_offset 14, -4
 295 0002 0500     		movs	r5, r0
 296 0004 0C00     		movs	r4, r1
 466:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 297              		.loc 1 466 3 is_stmt 1 view .LVU66
 298 0006 094E     		ldr	r6, .L7
 299 0008 0022     		movs	r2, #0
 300 000a 0221     		movs	r1, #2
 301              	.LVL14:
 302              		.loc 1 466 3 is_stmt 0 view .LVU67
 303 000c 3000     		movs	r0, r6
 304              	.LVL15:
 305              		.loc 1 466 3 view .LVU68
 306 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL16:
 467:Core/Src/main.c ****   HAL_Delay(time_delay_1);
 308              		.loc 1 467 3 is_stmt 1 view .LVU69
 309 0012 2800     		movs	r0, r5
 310 0014 FFF7FEFF 		bl	HAL_Delay
 311              	.LVL17:
 468:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 312              		.loc 1 468 3 view .LVU70
 313 0018 0122     		movs	r2, #1
 314 001a 0221     		movs	r1, #2
 315 001c 3000     		movs	r0, r6
 316 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 317              	.LVL18:
 469:Core/Src/main.c ****   HAL_Delay(time_delay_2);
 318              		.loc 1 469 3 view .LVU71
 319 0022 2000     		movs	r0, r4
 320 0024 FFF7FEFF 		bl	HAL_Delay
 321              	.LVL19:
 470:Core/Src/main.c **** }
 322              		.loc 1 470 1 is_stmt 0 view .LVU72
 323              		@ sp needed
 324 0028 70BD     		pop	{r4, r5, r6, pc}
 325              	.L8:
 326 002a C046     		.align	2
 327              	.L7:
 328 002c 00040050 		.word	1342178304
 329              		.cfi_endproc
 330              	.LFE46:
 332              		.section	.text.Enable_buck_converter,"ax",%progbits
 333              		.align	1
 334              		.global	Enable_buck_converter
 335              		.syntax unified
 336              		.code	16
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 15


 337              		.thumb_func
 339              	Enable_buck_converter:
 340              	.LFB48:
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** // *** WAKE UP *** //
 473:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 474:Core/Src/main.c **** {
 475:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 476:Core/Src/main.c ****   //{
 477:Core/Src/main.c **** 	  SystemClock_Config();
 478:Core/Src/main.c **** 	  HAL_ResumeTick();
 479:Core/Src/main.c ****   //}
 480:Core/Src/main.c **** }
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
 483:Core/Src/main.c **** void Enable_buck_converter(void){
 341              		.loc 1 483 33 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345 0000 10B5     		push	{r4, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 484:Core/Src/main.c ****   // Enable load switches
 485:Core/Src/main.c ****   load_switch_enable();
 349              		.loc 1 485 3 view .LVU74
 350 0002 FFF7FEFF 		bl	load_switch_enable
 351              	.LVL20:
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   HAL_Delay(100);
 352              		.loc 1 487 3 view .LVU75
 353 0006 6420     		movs	r0, #100
 354 0008 FFF7FEFF 		bl	HAL_Delay
 355              	.LVL21:
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   // Enable CC/CV buck converter
 490:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_SET);
 356              		.loc 1 490 3 view .LVU76
 357 000c 8021     		movs	r1, #128
 358 000e A024     		movs	r4, #160
 359 0010 E405     		lsls	r4, r4, #23
 360 0012 0122     		movs	r2, #1
 361 0014 8900     		lsls	r1, r1, #2
 362 0016 2000     		movs	r0, r4
 363 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 364              	.LVL22:
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   // HAL_Delay(1000);
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   // Connect input voltage to buck converter
 495:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_SET);
 365              		.loc 1 495 3 view .LVU77
 366 001c 0122     		movs	r2, #1
 367 001e 1021     		movs	r1, #16
 368 0020 2000     		movs	r0, r4
 369 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 16


 370              	.LVL23:
 496:Core/Src/main.c **** }
 371              		.loc 1 496 1 is_stmt 0 view .LVU78
 372              		@ sp needed
 373 0026 10BD     		pop	{r4, pc}
 374              		.cfi_endproc
 375              	.LFE48:
 377              		.section	.text.Disable_buck_converter,"ax",%progbits
 378              		.align	1
 379              		.global	Disable_buck_converter
 380              		.syntax unified
 381              		.code	16
 382              		.thumb_func
 384              	Disable_buck_converter:
 385              	.LFB49:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** void Disable_buck_converter(void){
 386              		.loc 1 499 34 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 10B5     		push	{r4, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 4, -8
 393              		.cfi_offset 14, -4
 500:Core/Src/main.c ****     // Disable CC/CV buck converter
 501:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_RESET);
 394              		.loc 1 501 3 view .LVU80
 395 0002 8021     		movs	r1, #128
 396 0004 A024     		movs	r4, #160
 397 0006 E405     		lsls	r4, r4, #23
 398 0008 0022     		movs	r2, #0
 399 000a 8900     		lsls	r1, r1, #2
 400 000c 2000     		movs	r0, r4
 401 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 402              	.LVL24:
 502:Core/Src/main.c ****   
 503:Core/Src/main.c ****   // Disconnect input voltage from buck converter
 504:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_RESET);
 403              		.loc 1 504 3 view .LVU81
 404 0012 0022     		movs	r2, #0
 405 0014 1021     		movs	r1, #16
 406 0016 2000     		movs	r0, r4
 407 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 408              	.LVL25:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   // Disable load switches
 507:Core/Src/main.c ****   load_switch_disable();
 409              		.loc 1 507 3 view .LVU82
 410 001c FFF7FEFF 		bl	load_switch_disable
 411              	.LVL26:
 508:Core/Src/main.c **** }
 412              		.loc 1 508 1 is_stmt 0 view .LVU83
 413              		@ sp needed
 414 0020 10BD     		pop	{r4, pc}
 415              		.cfi_endproc
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 17


 416              	.LFE49:
 418              		.section	.text.Error_Handler,"ax",%progbits
 419              		.align	1
 420              		.global	Error_Handler
 421              		.syntax unified
 422              		.code	16
 423              		.thumb_func
 425              	Error_Handler:
 426              	.LFB50:
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** /* USER CODE END 4 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** /**
 513:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 514:Core/Src/main.c ****   * @retval None
 515:Core/Src/main.c ****   */
 516:Core/Src/main.c **** void Error_Handler(void)
 517:Core/Src/main.c **** {
 427              		.loc 1 517 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ Volatile: function does not return.
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 518:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 519:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 520:Core/Src/main.c ****   __disable_irq();
 433              		.loc 1 520 3 view .LVU85
 434              	.LBB6:
 435              	.LBI6:
 436              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 18


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 19


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 20


 437              		.loc 2 140 27 view .LVU86
 438              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 439              		.loc 2 142 3 view .LVU87
 440              		.syntax divided
 441              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 442 0000 72B6     		cpsid i
 443              	@ 0 "" 2
 444              		.thumb
 445              		.syntax unified
 446              	.L12:
 447              	.LBE7:
 448              	.LBE6:
 521:Core/Src/main.c ****   while (1)
 449              		.loc 1 521 3 discriminator 1 view .LVU88
 522:Core/Src/main.c ****   {
 523:Core/Src/main.c ****   }
 450              		.loc 1 523 3 discriminator 1 view .LVU89
 521:Core/Src/main.c ****   while (1)
 451              		.loc 1 521 9 discriminator 1 view .LVU90
 452 0002 FEE7     		b	.L12
 453              		.cfi_endproc
 454              	.LFE50:
 456              		.section	.text.MX_ADC_Init,"ax",%progbits
 457              		.align	1
 458              		.syntax unified
 459              		.code	16
 460              		.thumb_func
 462              	MX_ADC_Init:
 463              	.LFB42:
 314:Core/Src/main.c **** 
 464              		.loc 1 314 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 00B5     		push	{lr}
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 14, -4
 471 0002 83B0     		sub	sp, sp, #12
 472              		.cfi_def_cfa_offset 16
 320:Core/Src/main.c **** 
 473              		.loc 1 320 3 view .LVU92
 320:Core/Src/main.c **** 
 474              		.loc 1 320 26 is_stmt 0 view .LVU93
 475 0004 0822     		movs	r2, #8
 476 0006 0021     		movs	r1, #0
 477 0008 6846     		mov	r0, sp
 478 000a FFF7FEFF 		bl	memset
 479              	.LVL27:
 328:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 480              		.loc 1 328 3 is_stmt 1 view .LVU94
 328:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 481              		.loc 1 328 17 is_stmt 0 view .LVU95
 482 000e 2D48     		ldr	r0, .L24
 483 0010 2D4B     		ldr	r3, .L24+4
 484 0012 0360     		str	r3, [r0]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 21


 329:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 485              		.loc 1 329 3 is_stmt 1 view .LVU96
 329:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 486              		.loc 1 329 30 is_stmt 0 view .LVU97
 487 0014 0023     		movs	r3, #0
 488 0016 C363     		str	r3, [r0, #60]
 330:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 489              		.loc 1 330 3 is_stmt 1 view .LVU98
 330:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 490              		.loc 1 330 28 is_stmt 0 view .LVU99
 491 0018 C022     		movs	r2, #192
 492 001a 1206     		lsls	r2, r2, #24
 493 001c 4260     		str	r2, [r0, #4]
 331:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 494              		.loc 1 331 3 is_stmt 1 view .LVU100
 331:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 495              		.loc 1 331 24 is_stmt 0 view .LVU101
 496 001e 8360     		str	r3, [r0, #8]
 332:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 497              		.loc 1 332 3 is_stmt 1 view .LVU102
 332:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 498              		.loc 1 332 26 is_stmt 0 view .LVU103
 499 0020 0722     		movs	r2, #7
 500 0022 8263     		str	r2, [r0, #56]
 333:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 501              		.loc 1 333 3 is_stmt 1 view .LVU104
 333:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 502              		.loc 1 333 26 is_stmt 0 view .LVU105
 503 0024 063A     		subs	r2, r2, #6
 504 0026 0261     		str	r2, [r0, #16]
 334:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 505              		.loc 1 334 3 is_stmt 1 view .LVU106
 334:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 506              		.loc 1 334 23 is_stmt 0 view .LVU107
 507 0028 C360     		str	r3, [r0, #12]
 335:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 508              		.loc 1 335 3 is_stmt 1 view .LVU108
 335:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 509              		.loc 1 335 32 is_stmt 0 view .LVU109
 510 002a 2021     		movs	r1, #32
 511 002c 4254     		strb	r2, [r0, r1]
 336:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 512              		.loc 1 336 3 is_stmt 1 view .LVU110
 336:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 513              		.loc 1 336 35 is_stmt 0 view .LVU111
 514 002e 0131     		adds	r1, r1, #1
 515 0030 4354     		strb	r3, [r0, r1]
 337:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 516              		.loc 1 337 3 is_stmt 1 view .LVU112
 337:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 517              		.loc 1 337 34 is_stmt 0 view .LVU113
 518 0032 8362     		str	r3, [r0, #40]
 338:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 519              		.loc 1 338 3 is_stmt 1 view .LVU114
 338:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 520              		.loc 1 338 30 is_stmt 0 view .LVU115
 521 0034 C221     		movs	r1, #194
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 22


 522 0036 FF31     		adds	r1, r1, #255
 523 0038 4162     		str	r1, [r0, #36]
 339:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 524              		.loc 1 339 3 is_stmt 1 view .LVU116
 339:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 525              		.loc 1 339 35 is_stmt 0 view .LVU117
 526 003a 9639     		subs	r1, r1, #150
 527 003c FF39     		subs	r1, r1, #255
 528 003e 4354     		strb	r3, [r0, r1]
 340:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 529              		.loc 1 340 3 is_stmt 1 view .LVU118
 340:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 530              		.loc 1 340 26 is_stmt 0 view .LVU119
 531 0040 2839     		subs	r1, r1, #40
 532 0042 4161     		str	r1, [r0, #20]
 341:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 533              		.loc 1 341 3 is_stmt 1 view .LVU120
 341:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 534              		.loc 1 341 21 is_stmt 0 view .LVU121
 535 0044 0363     		str	r3, [r0, #48]
 342:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 536              		.loc 1 342 3 is_stmt 1 view .LVU122
 342:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 537              		.loc 1 342 30 is_stmt 0 view .LVU123
 538 0046 8361     		str	r3, [r0, #24]
 343:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 539              		.loc 1 343 3 is_stmt 1 view .LVU124
 343:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 540              		.loc 1 343 35 is_stmt 0 view .LVU125
 541 0048 4263     		str	r2, [r0, #52]
 344:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 542              		.loc 1 344 3 is_stmt 1 view .LVU126
 344:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 543              		.loc 1 344 34 is_stmt 0 view .LVU127
 544 004a C361     		str	r3, [r0, #28]
 345:Core/Src/main.c ****   {
 545              		.loc 1 345 3 is_stmt 1 view .LVU128
 345:Core/Src/main.c ****   {
 546              		.loc 1 345 7 is_stmt 0 view .LVU129
 547 004c FFF7FEFF 		bl	HAL_ADC_Init
 548              	.LVL28:
 345:Core/Src/main.c ****   {
 549              		.loc 1 345 6 view .LVU130
 550 0050 0028     		cmp	r0, #0
 551 0052 2DD1     		bne	.L19
 352:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 552              		.loc 1 352 3 is_stmt 1 view .LVU131
 352:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 553              		.loc 1 352 19 is_stmt 0 view .LVU132
 554 0054 1D4B     		ldr	r3, .L24+8
 555 0056 0093     		str	r3, [sp]
 353:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 556              		.loc 1 353 3 is_stmt 1 view .LVU133
 353:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 557              		.loc 1 353 16 is_stmt 0 view .LVU134
 558 0058 8023     		movs	r3, #128
 559 005a 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 23


 560 005c 0193     		str	r3, [sp, #4]
 354:Core/Src/main.c ****   {
 561              		.loc 1 354 3 is_stmt 1 view .LVU135
 354:Core/Src/main.c ****   {
 562              		.loc 1 354 7 is_stmt 0 view .LVU136
 563 005e 1948     		ldr	r0, .L24
 564 0060 6946     		mov	r1, sp
 565 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 566              	.LVL29:
 354:Core/Src/main.c ****   {
 567              		.loc 1 354 6 view .LVU137
 568 0066 0028     		cmp	r0, #0
 569 0068 24D1     		bne	.L20
 361:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 570              		.loc 1 361 3 is_stmt 1 view .LVU138
 361:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 571              		.loc 1 361 19 is_stmt 0 view .LVU139
 572 006a 194B     		ldr	r3, .L24+12
 573 006c 0093     		str	r3, [sp]
 362:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 574              		.loc 1 362 3 is_stmt 1 view .LVU140
 362:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 575              		.loc 1 362 16 is_stmt 0 view .LVU141
 576 006e 8023     		movs	r3, #128
 577 0070 5B01     		lsls	r3, r3, #5
 578 0072 0193     		str	r3, [sp, #4]
 363:Core/Src/main.c ****   {
 579              		.loc 1 363 3 is_stmt 1 view .LVU142
 363:Core/Src/main.c ****   {
 580              		.loc 1 363 7 is_stmt 0 view .LVU143
 581 0074 1348     		ldr	r0, .L24
 582 0076 6946     		mov	r1, sp
 583 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 584              	.LVL30:
 363:Core/Src/main.c ****   {
 585              		.loc 1 363 6 view .LVU144
 586 007c 0028     		cmp	r0, #0
 587 007e 1BD1     		bne	.L21
 370:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 588              		.loc 1 370 3 is_stmt 1 view .LVU145
 370:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 589              		.loc 1 370 19 is_stmt 0 view .LVU146
 590 0080 144B     		ldr	r3, .L24+16
 591 0082 0093     		str	r3, [sp]
 371:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 592              		.loc 1 371 3 is_stmt 1 view .LVU147
 371:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 593              		.loc 1 371 16 is_stmt 0 view .LVU148
 594 0084 8023     		movs	r3, #128
 595 0086 5B01     		lsls	r3, r3, #5
 596 0088 0193     		str	r3, [sp, #4]
 372:Core/Src/main.c ****   {
 597              		.loc 1 372 3 is_stmt 1 view .LVU149
 372:Core/Src/main.c ****   {
 598              		.loc 1 372 7 is_stmt 0 view .LVU150
 599 008a 0E48     		ldr	r0, .L24
 600 008c 6946     		mov	r1, sp
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 24


 601 008e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 602              	.LVL31:
 372:Core/Src/main.c ****   {
 603              		.loc 1 372 6 view .LVU151
 604 0092 0028     		cmp	r0, #0
 605 0094 12D1     		bne	.L22
 379:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 606              		.loc 1 379 3 is_stmt 1 view .LVU152
 379:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 607              		.loc 1 379 19 is_stmt 0 view .LVU153
 608 0096 104B     		ldr	r3, .L24+20
 609 0098 0093     		str	r3, [sp]
 380:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 610              		.loc 1 380 3 is_stmt 1 view .LVU154
 380:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 611              		.loc 1 380 16 is_stmt 0 view .LVU155
 612 009a 8023     		movs	r3, #128
 613 009c 5B01     		lsls	r3, r3, #5
 614 009e 0193     		str	r3, [sp, #4]
 381:Core/Src/main.c ****   {
 615              		.loc 1 381 3 is_stmt 1 view .LVU156
 381:Core/Src/main.c ****   {
 616              		.loc 1 381 7 is_stmt 0 view .LVU157
 617 00a0 0848     		ldr	r0, .L24
 618 00a2 6946     		mov	r1, sp
 619 00a4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 620              	.LVL32:
 381:Core/Src/main.c ****   {
 621              		.loc 1 381 6 view .LVU158
 622 00a8 0028     		cmp	r0, #0
 623 00aa 09D1     		bne	.L23
 391:Core/Src/main.c **** 
 624              		.loc 1 391 1 view .LVU159
 625 00ac 03B0     		add	sp, sp, #12
 626              		@ sp needed
 627 00ae 00BD     		pop	{pc}
 628              	.L19:
 347:Core/Src/main.c ****   }
 629              		.loc 1 347 5 is_stmt 1 view .LVU160
 630 00b0 FFF7FEFF 		bl	Error_Handler
 631              	.LVL33:
 632              	.L20:
 356:Core/Src/main.c ****   }
 633              		.loc 1 356 5 view .LVU161
 634 00b4 FFF7FEFF 		bl	Error_Handler
 635              	.LVL34:
 636              	.L21:
 365:Core/Src/main.c ****   }
 637              		.loc 1 365 5 view .LVU162
 638 00b8 FFF7FEFF 		bl	Error_Handler
 639              	.LVL35:
 640              	.L22:
 374:Core/Src/main.c ****   }
 641              		.loc 1 374 5 view .LVU163
 642 00bc FFF7FEFF 		bl	Error_Handler
 643              	.LVL36:
 644              	.L23:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 25


 383:Core/Src/main.c ****   }
 645              		.loc 1 383 5 view .LVU164
 646 00c0 FFF7FEFF 		bl	Error_Handler
 647              	.LVL37:
 648              	.L25:
 649              		.align	2
 650              	.L24:
 651 00c4 00000000 		.word	hadc
 652 00c8 00240140 		.word	1073816576
 653 00cc 20000014 		.word	335544352
 654 00d0 40000018 		.word	402653248
 655 00d4 8000001C 		.word	469762176
 656 00d8 00000244 		.word	1140981760
 657              		.cfi_endproc
 658              	.LFE42:
 660              		.section	.text.SystemClock_Config,"ax",%progbits
 661              		.align	1
 662              		.global	SystemClock_Config
 663              		.syntax unified
 664              		.code	16
 665              		.thumb_func
 667              	SystemClock_Config:
 668              	.LFB41:
 272:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 669              		.loc 1 272 1 view -0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 72
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673 0000 00B5     		push	{lr}
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 14, -4
 676 0002 93B0     		sub	sp, sp, #76
 677              		.cfi_def_cfa_offset 80
 273:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 678              		.loc 1 273 3 view .LVU166
 273:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 679              		.loc 1 273 22 is_stmt 0 view .LVU167
 680 0004 3422     		movs	r2, #52
 681 0006 0021     		movs	r1, #0
 682 0008 05A8     		add	r0, sp, #20
 683 000a FFF7FEFF 		bl	memset
 684              	.LVL38:
 274:Core/Src/main.c **** 
 685              		.loc 1 274 3 is_stmt 1 view .LVU168
 274:Core/Src/main.c **** 
 686              		.loc 1 274 22 is_stmt 0 view .LVU169
 687 000e 1422     		movs	r2, #20
 688 0010 0021     		movs	r1, #0
 689 0012 6846     		mov	r0, sp
 690 0014 FFF7FEFF 		bl	memset
 691              	.LVL39:
 278:Core/Src/main.c **** 
 692              		.loc 1 278 3 is_stmt 1 view .LVU170
 693 0018 1449     		ldr	r1, .L31
 694 001a 0A68     		ldr	r2, [r1]
 695 001c 144B     		ldr	r3, .L31+4
 696 001e 1A40     		ands	r2, r3
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 26


 697 0020 8023     		movs	r3, #128
 698 0022 1B01     		lsls	r3, r3, #4
 699 0024 1343     		orrs	r3, r2
 700 0026 0B60     		str	r3, [r1]
 283:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 701              		.loc 1 283 3 view .LVU171
 283:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 702              		.loc 1 283 36 is_stmt 0 view .LVU172
 703 0028 1023     		movs	r3, #16
 704 002a 0593     		str	r3, [sp, #20]
 284:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 705              		.loc 1 284 3 is_stmt 1 view .LVU173
 284:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 706              		.loc 1 284 30 is_stmt 0 view .LVU174
 707 002c 0F3B     		subs	r3, r3, #15
 708 002e 0B93     		str	r3, [sp, #44]
 285:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 709              		.loc 1 285 3 is_stmt 1 view .LVU175
 285:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 710              		.loc 1 285 41 is_stmt 0 view .LVU176
 711 0030 0023     		movs	r3, #0
 712 0032 0C93     		str	r3, [sp, #48]
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 713              		.loc 1 286 3 is_stmt 1 view .LVU177
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 714              		.loc 1 286 35 is_stmt 0 view .LVU178
 715 0034 A022     		movs	r2, #160
 716 0036 1202     		lsls	r2, r2, #8
 717 0038 0D92     		str	r2, [sp, #52]
 287:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 718              		.loc 1 287 3 is_stmt 1 view .LVU179
 287:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 719              		.loc 1 287 34 is_stmt 0 view .LVU180
 720 003a 0E93     		str	r3, [sp, #56]
 288:Core/Src/main.c ****   {
 721              		.loc 1 288 3 is_stmt 1 view .LVU181
 288:Core/Src/main.c ****   {
 722              		.loc 1 288 7 is_stmt 0 view .LVU182
 723 003c 05A8     		add	r0, sp, #20
 724 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 725              	.LVL40:
 288:Core/Src/main.c ****   {
 726              		.loc 1 288 6 view .LVU183
 727 0042 0028     		cmp	r0, #0
 728 0044 0ED1     		bne	.L29
 295:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 729              		.loc 1 295 3 is_stmt 1 view .LVU184
 295:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 730              		.loc 1 295 31 is_stmt 0 view .LVU185
 731 0046 0F23     		movs	r3, #15
 732 0048 0093     		str	r3, [sp]
 297:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 733              		.loc 1 297 3 is_stmt 1 view .LVU186
 297:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 734              		.loc 1 297 34 is_stmt 0 view .LVU187
 735 004a 0023     		movs	r3, #0
 736 004c 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 27


 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 737              		.loc 1 298 3 is_stmt 1 view .LVU188
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 738              		.loc 1 298 35 is_stmt 0 view .LVU189
 739 004e 0293     		str	r3, [sp, #8]
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 740              		.loc 1 299 3 is_stmt 1 view .LVU190
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 741              		.loc 1 299 36 is_stmt 0 view .LVU191
 742 0050 0393     		str	r3, [sp, #12]
 300:Core/Src/main.c **** 
 743              		.loc 1 300 3 is_stmt 1 view .LVU192
 300:Core/Src/main.c **** 
 744              		.loc 1 300 36 is_stmt 0 view .LVU193
 745 0052 0493     		str	r3, [sp, #16]
 302:Core/Src/main.c ****   {
 746              		.loc 1 302 3 is_stmt 1 view .LVU194
 302:Core/Src/main.c ****   {
 747              		.loc 1 302 7 is_stmt 0 view .LVU195
 748 0054 0021     		movs	r1, #0
 749 0056 6846     		mov	r0, sp
 750 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 751              	.LVL41:
 302:Core/Src/main.c ****   {
 752              		.loc 1 302 6 view .LVU196
 753 005c 0028     		cmp	r0, #0
 754 005e 03D1     		bne	.L30
 306:Core/Src/main.c **** 
 755              		.loc 1 306 1 view .LVU197
 756 0060 13B0     		add	sp, sp, #76
 757              		@ sp needed
 758 0062 00BD     		pop	{pc}
 759              	.L29:
 290:Core/Src/main.c ****   }
 760              		.loc 1 290 5 is_stmt 1 view .LVU198
 761 0064 FFF7FEFF 		bl	Error_Handler
 762              	.LVL42:
 763              	.L30:
 304:Core/Src/main.c ****   }
 764              		.loc 1 304 5 view .LVU199
 765 0068 FFF7FEFF 		bl	Error_Handler
 766              	.LVL43:
 767              	.L32:
 768              		.align	2
 769              	.L31:
 770 006c 00700040 		.word	1073770496
 771 0070 FFE7FFFF 		.word	-6145
 772              		.cfi_endproc
 773              	.LFE41:
 775              		.global	__aeabi_idiv
 776              		.section	.text.main,"ax",%progbits
 777              		.align	1
 778              		.global	main
 779              		.syntax unified
 780              		.code	16
 781              		.thumb_func
 783              	main:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 28


 784              	.LFB40:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 785              		.loc 1 97 1 view -0
 786              		.cfi_startproc
 787              		@ Volatile: function does not return.
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 791              		.cfi_def_cfa_offset 20
 792              		.cfi_offset 4, -20
 793              		.cfi_offset 5, -16
 794              		.cfi_offset 6, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 C646     		mov	lr, r8
 798 0004 00B5     		push	{lr}
 799              		.cfi_def_cfa_offset 24
 800              		.cfi_offset 8, -24
 105:Core/Src/main.c **** 
 801              		.loc 1 105 3 view .LVU201
 802 0006 FFF7FEFF 		bl	HAL_Init
 803              	.LVL44:
 113:Core/Src/main.c **** 
 804              		.loc 1 113 3 view .LVU202
 805 000a FFF7FEFF 		bl	SystemClock_Config
 806              	.LVL45:
 120:Core/Src/main.c ****   MX_ADC_Init();
 807              		.loc 1 120 3 view .LVU203
 808 000e FFF7FEFF 		bl	MX_GPIO_Init
 809              	.LVL46:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 810              		.loc 1 121 3 view .LVU204
 811 0012 FFF7FEFF 		bl	MX_ADC_Init
 812              	.LVL47:
 124:Core/Src/main.c **** 
 813              		.loc 1 124 3 view .LVU205
 814 0016 7448     		ldr	r0, .L50
 815 0018 0021     		movs	r1, #0
 816 001a FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 817              	.LVL48:
 818 001e 14E0     		b	.L34
 819              	.L43:
 183:Core/Src/main.c ****           current_state = START_CHARGING;
 820              		.loc 1 183 9 view .LVU206
 183:Core/Src/main.c ****           current_state = START_CHARGING;
 821              		.loc 1 183 43 is_stmt 0 view .LVU207
 822 0020 724B     		ldr	r3, .L50+4
 823 0022 EB18     		adds	r3, r5, r3
 824 0024 9BB2     		uxth	r3, r3
 183:Core/Src/main.c ****           current_state = START_CHARGING;
 825              		.loc 1 183 11 view .LVU208
 826 0026 724A     		ldr	r2, .L50+8
 827 0028 9342     		cmp	r3, r2
 828 002a 02D8     		bhi	.L44
 184:Core/Src/main.c ****         }
 829              		.loc 1 184 11 is_stmt 1 view .LVU209
 184:Core/Src/main.c ****         }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 29


 830              		.loc 1 184 25 is_stmt 0 view .LVU210
 831 002c 714B     		ldr	r3, .L50+12
 832 002e 0122     		movs	r2, #1
 833 0030 1A70     		strb	r2, [r3]
 834              	.L44:
 188:Core/Src/main.c ****           current_state = SLEEP;
 835              		.loc 1 188 9 is_stmt 1 view .LVU211
 188:Core/Src/main.c ****           current_state = SLEEP;
 836              		.loc 1 188 11 is_stmt 0 view .LVU212
 837 0032 FA23     		movs	r3, #250
 838 0034 9B00     		lsls	r3, r3, #2
 839 0036 9D42     		cmp	r5, r3
 840 0038 02D2     		bcs	.L45
 189:Core/Src/main.c ****         }
 841              		.loc 1 189 11 is_stmt 1 view .LVU213
 189:Core/Src/main.c ****         }
 842              		.loc 1 189 25 is_stmt 0 view .LVU214
 843 003a 6E4B     		ldr	r3, .L50+12
 844 003c 0522     		movs	r2, #5
 845 003e 1A70     		strb	r2, [r3]
 846              	.L45:
 193:Core/Src/main.c ****       break;
 847              		.loc 1 193 9 is_stmt 1 view .LVU215
 848 0040 FA20     		movs	r0, #250
 849 0042 4000     		lsls	r0, r0, #1
 850 0044 0100     		movs	r1, r0
 851 0046 FFF7FEFF 		bl	led_blink
 852              	.LVL49:
 194:Core/Src/main.c ****       case START_CHARGING: 
 853              		.loc 1 194 7 view .LVU216
 854              	.L34:
 130:Core/Src/main.c ****   {
 855              		.loc 1 130 3 view .LVU217
 137:Core/Src/main.c ****     
 856              		.loc 1 137 3 view .LVU218
 857 004a 674C     		ldr	r4, .L50
 858 004c 2000     		movs	r0, r4
 859 004e FFF7FEFF 		bl	HAL_ADC_Start
 860              	.LVL50:
 140:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 861              		.loc 1 140 5 view .LVU219
 862 0052 6421     		movs	r1, #100
 863 0054 2000     		movs	r0, r4
 864 0056 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 865              	.LVL51:
 141:Core/Src/main.c **** 
 866              		.loc 1 141 3 view .LVU220
 141:Core/Src/main.c **** 
 867              		.loc 1 141 13 is_stmt 0 view .LVU221
 868 005a 2000     		movs	r0, r4
 869 005c FFF7FEFF 		bl	HAL_ADC_GetValue
 870              	.LVL52:
 141:Core/Src/main.c **** 
 871              		.loc 1 141 11 view .LVU222
 872 0060 654D     		ldr	r5, .L50+16
 873 0062 2880     		strh	r0, [r5]
 144:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 30


 874              		.loc 1 144 5 is_stmt 1 view .LVU223
 875 0064 6421     		movs	r1, #100
 876 0066 2000     		movs	r0, r4
 877 0068 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 878              	.LVL53:
 145:Core/Src/main.c **** 
 879              		.loc 1 145 3 view .LVU224
 145:Core/Src/main.c **** 
 880              		.loc 1 145 13 is_stmt 0 view .LVU225
 881 006c 2000     		movs	r0, r4
 882 006e FFF7FEFF 		bl	HAL_ADC_GetValue
 883              	.LVL54:
 145:Core/Src/main.c **** 
 884              		.loc 1 145 11 view .LVU226
 885 0072 624E     		ldr	r6, .L50+20
 886 0074 3080     		strh	r0, [r6]
 148:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 887              		.loc 1 148 5 is_stmt 1 view .LVU227
 888 0076 6421     		movs	r1, #100
 889 0078 2000     		movs	r0, r4
 890 007a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 891              	.LVL55:
 149:Core/Src/main.c **** 
 892              		.loc 1 149 3 view .LVU228
 149:Core/Src/main.c **** 
 893              		.loc 1 149 13 is_stmt 0 view .LVU229
 894 007e 2000     		movs	r0, r4
 895 0080 FFF7FEFF 		bl	HAL_ADC_GetValue
 896              	.LVL56:
 149:Core/Src/main.c **** 
 897              		.loc 1 149 11 view .LVU230
 898 0084 5E4F     		ldr	r7, .L50+24
 899 0086 3880     		strh	r0, [r7]
 152:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 900              		.loc 1 152 5 is_stmt 1 view .LVU231
 901 0088 6421     		movs	r1, #100
 902 008a 2000     		movs	r0, r4
 903 008c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 904              	.LVL57:
 153:Core/Src/main.c **** 
 905              		.loc 1 153 3 view .LVU232
 153:Core/Src/main.c **** 
 906              		.loc 1 153 13 is_stmt 0 view .LVU233
 907 0090 2000     		movs	r0, r4
 908 0092 FFF7FEFF 		bl	HAL_ADC_GetValue
 909              	.LVL58:
 153:Core/Src/main.c **** 
 910              		.loc 1 153 11 view .LVU234
 911 0096 5B4B     		ldr	r3, .L50+28
 912 0098 9846     		mov	r8, r3
 913 009a 1880     		strh	r0, [r3]
 156:Core/Src/main.c **** 
 914              		.loc 1 156 5 is_stmt 1 view .LVU235
 915 009c 2000     		movs	r0, r4
 916 009e FFF7FEFF 		bl	HAL_ADC_Stop
 917              	.LVL59:
 159:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 31


 918              		.loc 1 159 5 view .LVU236
 159:Core/Src/main.c **** 
 919              		.loc 1 159 34 is_stmt 0 view .LVU237
 920 00a2 4346     		mov	r3, r8
 921 00a4 1988     		ldrh	r1, [r3]
 922 00a6 9620     		movs	r0, #150
 923 00a8 C003     		lsls	r0, r0, #15
 924 00aa FFF7FEFF 		bl	__aeabi_idiv
 925              	.LVL60:
 159:Core/Src/main.c **** 
 926              		.loc 1 159 23 view .LVU238
 927 00ae 564B     		ldr	r3, .L50+32
 928 00b0 1880     		strh	r0, [r3]
 162:Core/Src/main.c **** 
 929              		.loc 1 162 5 is_stmt 1 view .LVU239
 930 00b2 0004     		lsls	r0, r0, #16
 931 00b4 040C     		lsrs	r4, r0, #16
 162:Core/Src/main.c **** 
 932              		.loc 1 162 31 is_stmt 0 view .LVU240
 933 00b6 2A88     		ldrh	r2, [r5]
 934 00b8 6243     		muls	r2, r4
 162:Core/Src/main.c **** 
 935              		.loc 1 162 49 view .LVU241
 936 00ba D317     		asrs	r3, r2, #31
 937 00bc 1B05     		lsls	r3, r3, #20
 938 00be 1B0D     		lsrs	r3, r3, #20
 939 00c0 9B18     		adds	r3, r3, r2
 940 00c2 1B13     		asrs	r3, r3, #12
 162:Core/Src/main.c **** 
 941              		.loc 1 162 54 view .LVU242
 942 00c4 5148     		ldr	r0, .L50+36
 943 00c6 5843     		muls	r0, r3
 162:Core/Src/main.c **** 
 944              		.loc 1 162 61 view .LVU243
 945 00c8 5149     		ldr	r1, .L50+40
 946 00ca FFF7FEFF 		bl	__aeabi_idiv
 947              	.LVL61:
 162:Core/Src/main.c **** 
 948              		.loc 1 162 22 view .LVU244
 949 00ce 85B2     		uxth	r5, r0
 950 00d0 504B     		ldr	r3, .L50+44
 951 00d2 1D80     		strh	r5, [r3]
 165:Core/Src/main.c **** 
 952              		.loc 1 165 5 is_stmt 1 view .LVU245
 165:Core/Src/main.c **** 
 953              		.loc 1 165 37 is_stmt 0 view .LVU246
 954 00d4 3A88     		ldrh	r2, [r7]
 955 00d6 6243     		muls	r2, r4
 165:Core/Src/main.c **** 
 956              		.loc 1 165 55 view .LVU247
 957 00d8 D317     		asrs	r3, r2, #31
 958 00da 1B05     		lsls	r3, r3, #20
 959 00dc 1B0D     		lsrs	r3, r3, #20
 960 00de 9B18     		adds	r3, r3, r2
 961 00e0 1B13     		asrs	r3, r3, #12
 165:Core/Src/main.c **** 
 962              		.loc 1 165 60 view .LVU248
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 32


 963 00e2 4D48     		ldr	r0, .L50+48
 964 00e4 5843     		muls	r0, r3
 165:Core/Src/main.c **** 
 965              		.loc 1 165 66 view .LVU249
 966 00e6 4D49     		ldr	r1, .L50+52
 967 00e8 FFF7FEFF 		bl	__aeabi_idiv
 968              	.LVL62:
 165:Core/Src/main.c **** 
 969              		.loc 1 165 28 view .LVU250
 970 00ec 4C4B     		ldr	r3, .L50+56
 971 00ee 1880     		strh	r0, [r3]
 168:Core/Src/main.c **** 
 972              		.loc 1 168 5 is_stmt 1 view .LVU251
 168:Core/Src/main.c **** 
 973              		.loc 1 168 30 is_stmt 0 view .LVU252
 974 00f0 3388     		ldrh	r3, [r6]
 975 00f2 5C43     		muls	r4, r3
 168:Core/Src/main.c **** 
 976              		.loc 1 168 48 view .LVU253
 977 00f4 E317     		asrs	r3, r4, #31
 978 00f6 1B05     		lsls	r3, r3, #20
 979 00f8 1B0D     		lsrs	r3, r3, #20
 980 00fa 1C19     		adds	r4, r3, r4
 981 00fc 2413     		asrs	r4, r4, #12
 168:Core/Src/main.c **** 
 982              		.loc 1 168 53 view .LVU254
 983 00fe 6001     		lsls	r0, r4, #5
 984 0100 001B     		subs	r0, r0, r4
 985 0102 8000     		lsls	r0, r0, #2
 986 0104 0019     		adds	r0, r0, r4
 987 0106 C000     		lsls	r0, r0, #3
 168:Core/Src/main.c **** 
 988              		.loc 1 168 58 view .LVU255
 989 0108 C321     		movs	r1, #195
 990 010a 8900     		lsls	r1, r1, #2
 991 010c FFF7FEFF 		bl	__aeabi_idiv
 992              	.LVL63:
 168:Core/Src/main.c **** 
 993              		.loc 1 168 21 view .LVU256
 994 0110 444B     		ldr	r3, .L50+60
 995 0112 1880     		strh	r0, [r3]
 171:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 996              		.loc 1 171 5 is_stmt 1 view .LVU257
 171:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 997              		.loc 1 171 7 is_stmt 0 view .LVU258
 998 0114 444B     		ldr	r3, .L50+64
 999 0116 9D42     		cmp	r5, r3
 1000 0118 02D9     		bls	.L35
 172:Core/Src/main.c ****     }
 1001              		.loc 1 172 7 is_stmt 1 view .LVU259
 172:Core/Src/main.c ****     }
 1002              		.loc 1 172 21 is_stmt 0 view .LVU260
 1003 011a 364B     		ldr	r3, .L50+12
 1004 011c 0422     		movs	r2, #4
 1005 011e 1A70     		strb	r2, [r3]
 1006              	.L35:
 180:Core/Src/main.c ****       case INIT:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 33


 1007              		.loc 1 180 5 is_stmt 1 view .LVU261
 1008 0120 344B     		ldr	r3, .L50+12
 1009 0122 1A78     		ldrb	r2, [r3]
 1010 0124 052A     		cmp	r2, #5
 1011 0126 5AD8     		bhi	.L36
 1012 0128 9300     		lsls	r3, r2, #2
 1013 012a 404A     		ldr	r2, .L50+68
 1014 012c D358     		ldr	r3, [r2, r3]
 1015 012e 9F46     		mov	pc, r3
 1016              		.section	.rodata.main,"a",%progbits
 1017              		.align	2
 1018              	.L38:
 1019 0000 20000000 		.word	.L43
 1020 0004 30010000 		.word	.L42
 1021 0008 3C010000 		.word	.L41
 1022 000c 84010000 		.word	.L40
 1023 0010 A0010000 		.word	.L39
 1024 0014 C0010000 		.word	.L37
 1025              		.section	.text.main
 1026              	.L42:
 197:Core/Src/main.c **** 
 1027              		.loc 1 197 9 view .LVU262
 1028 0130 FFF7FEFF 		bl	Enable_buck_converter
 1029              	.LVL64:
 200:Core/Src/main.c ****       break;
 1030              		.loc 1 200 9 view .LVU263
 200:Core/Src/main.c ****       break;
 1031              		.loc 1 200 23 is_stmt 0 view .LVU264
 1032 0134 2F4B     		ldr	r3, .L50+12
 1033 0136 0222     		movs	r2, #2
 1034 0138 1A70     		strb	r2, [r3]
 201:Core/Src/main.c ****       case CHARGING:
 1035              		.loc 1 201 7 is_stmt 1 view .LVU265
 1036 013a 86E7     		b	.L34
 1037              	.L41:
 203:Core/Src/main.c **** 
 1038              		.loc 1 203 9 view .LVU266
 1039 013c E120     		movs	r0, #225
 1040 013e 6421     		movs	r1, #100
 1041 0140 8000     		lsls	r0, r0, #2
 1042 0142 FFF7FEFF 		bl	led_blink
 1043              	.LVL65:
 206:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1044              		.loc 1 206 9 view .LVU267
 206:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1045              		.loc 1 206 43 is_stmt 0 view .LVU268
 1046 0146 334B     		ldr	r3, .L50+44
 1047 0148 1B88     		ldrh	r3, [r3]
 1048 014a 394A     		ldr	r2, .L50+72
 1049 014c 9446     		mov	ip, r2
 1050 014e 6344     		add	r3, r3, ip
 1051 0150 9BB2     		uxth	r3, r3
 206:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1052              		.loc 1 206 11 view .LVU269
 1053 0152 384A     		ldr	r2, .L50+76
 1054 0154 9342     		cmp	r3, r2
 1055 0156 02D9     		bls	.L47
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 34


 207:Core/Src/main.c ****         }
 1056              		.loc 1 207 11 is_stmt 1 view .LVU270
 207:Core/Src/main.c ****         }
 1057              		.loc 1 207 25 is_stmt 0 view .LVU271
 1058 0158 264B     		ldr	r3, .L50+12
 1059 015a 0322     		movs	r2, #3
 1060 015c 1A70     		strb	r2, [r3]
 1061              	.L47:
 211:Core/Src/main.c ****           timer_check = 0;
 1062              		.loc 1 211 9 is_stmt 1 view .LVU272
 211:Core/Src/main.c ****           timer_check = 0;
 1063              		.loc 1 211 28 is_stmt 0 view .LVU273
 1064 015e 314B     		ldr	r3, .L50+60
 1065 0160 1B88     		ldrh	r3, [r3]
 211:Core/Src/main.c ****           timer_check = 0;
 1066              		.loc 1 211 11 view .LVU274
 1067 0162 C72B     		cmp	r3, #199
 1068 0164 09D8     		bhi	.L48
 211:Core/Src/main.c ****           timer_check = 0;
 1069              		.loc 1 211 57 discriminator 1 view .LVU275
 1070 0166 344B     		ldr	r3, .L50+80
 1071 0168 1B88     		ldrh	r3, [r3]
 211:Core/Src/main.c ****           timer_check = 0;
 1072              		.loc 1 211 42 discriminator 1 view .LVU276
 1073 016a 0A2B     		cmp	r3, #10
 1074 016c 05D9     		bls	.L48
 212:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1075              		.loc 1 212 11 is_stmt 1 view .LVU277
 212:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1076              		.loc 1 212 23 is_stmt 0 view .LVU278
 1077 016e 324B     		ldr	r3, .L50+80
 1078 0170 0022     		movs	r2, #0
 1079 0172 1A80     		strh	r2, [r3]
 213:Core/Src/main.c ****         }
 1080              		.loc 1 213 11 is_stmt 1 view .LVU279
 213:Core/Src/main.c ****         }
 1081              		.loc 1 213 25 is_stmt 0 view .LVU280
 1082 0174 1F4B     		ldr	r3, .L50+12
 1083 0176 0332     		adds	r2, r2, #3
 1084 0178 1A70     		strb	r2, [r3]
 1085              	.L48:
 216:Core/Src/main.c **** 
 1086              		.loc 1 216 9 is_stmt 1 view .LVU281
 216:Core/Src/main.c **** 
 1087              		.loc 1 216 20 is_stmt 0 view .LVU282
 1088 017a 2F4A     		ldr	r2, .L50+80
 1089 017c 1388     		ldrh	r3, [r2]
 1090 017e 0133     		adds	r3, r3, #1
 1091 0180 1380     		strh	r3, [r2]
 218:Core/Src/main.c ****       case STOP_CHARGING:
 1092              		.loc 1 218 7 is_stmt 1 view .LVU283
 1093 0182 62E7     		b	.L34
 1094              	.L40:
 221:Core/Src/main.c **** 
 1095              		.loc 1 221 9 view .LVU284
 1096 0184 FFF7FEFF 		bl	Disable_buck_converter
 1097              	.LVL66:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 35


 223:Core/Src/main.c ****           current_state = SLEEP;
 1098              		.loc 1 223 9 view .LVU285
 223:Core/Src/main.c ****           current_state = SLEEP;
 1099              		.loc 1 223 28 is_stmt 0 view .LVU286
 1100 0188 264B     		ldr	r3, .L50+60
 1101 018a 1B88     		ldrh	r3, [r3]
 223:Core/Src/main.c ****           current_state = SLEEP;
 1102              		.loc 1 223 11 view .LVU287
 1103 018c C72B     		cmp	r3, #199
 1104 018e 03D8     		bhi	.L49
 224:Core/Src/main.c ****         }
 1105              		.loc 1 224 11 is_stmt 1 view .LVU288
 224:Core/Src/main.c ****         }
 1106              		.loc 1 224 25 is_stmt 0 view .LVU289
 1107 0190 184B     		ldr	r3, .L50+12
 1108 0192 0522     		movs	r2, #5
 1109 0194 1A70     		strb	r2, [r3]
 1110 0196 58E7     		b	.L34
 1111              	.L49:
 227:Core/Src/main.c ****         }
 1112              		.loc 1 227 11 is_stmt 1 view .LVU290
 227:Core/Src/main.c ****         }
 1113              		.loc 1 227 25 is_stmt 0 view .LVU291
 1114 0198 164B     		ldr	r3, .L50+12
 1115 019a 0022     		movs	r2, #0
 1116 019c 1A70     		strb	r2, [r3]
 1117 019e 54E7     		b	.L34
 1118              	.L39:
 231:Core/Src/main.c **** 
 1119              		.loc 1 231 9 is_stmt 1 view .LVU292
 1120 01a0 6421     		movs	r1, #100
 1121 01a2 6420     		movs	r0, #100
 1122 01a4 FFF7FEFF 		bl	led_blink
 1123              	.LVL67:
 234:Core/Src/main.c **** 
 1124              		.loc 1 234 9 view .LVU293
 1125 01a8 FFF7FEFF 		bl	Disable_buck_converter
 1126              	.LVL68:
 237:Core/Src/main.c ****           current_state = INIT;
 1127              		.loc 1 237 9 view .LVU294
 237:Core/Src/main.c ****           current_state = INIT;
 1128              		.loc 1 237 29 is_stmt 0 view .LVU295
 1129 01ac 194B     		ldr	r3, .L50+44
 1130 01ae 1A88     		ldrh	r2, [r3]
 237:Core/Src/main.c ****           current_state = INIT;
 1131              		.loc 1 237 11 view .LVU296
 1132 01b0 224B     		ldr	r3, .L50+84
 1133 01b2 9A42     		cmp	r2, r3
 1134 01b4 00D9     		bls	.LCB891
 1135 01b6 48E7     		b	.L34	@long jump
 1136              	.LCB891:
 238:Core/Src/main.c ****         }
 1137              		.loc 1 238 11 is_stmt 1 view .LVU297
 238:Core/Src/main.c ****         }
 1138              		.loc 1 238 25 is_stmt 0 view .LVU298
 1139 01b8 0E4B     		ldr	r3, .L50+12
 1140 01ba 0022     		movs	r2, #0
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 36


 1141 01bc 1A70     		strb	r2, [r3]
 1142 01be 44E7     		b	.L34
 1143              	.L37:
 244:Core/Src/main.c **** 
 1144              		.loc 1 244 9 is_stmt 1 view .LVU299
 1145 01c0 0022     		movs	r2, #0
 1146 01c2 0221     		movs	r1, #2
 1147 01c4 1E48     		ldr	r0, .L50+88
 1148 01c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1149              	.LVL69:
 249:Core/Src/main.c **** 
 1150              		.loc 1 249 9 view .LVU300
 1151 01ca FFF7FEFF 		bl	HAL_SuspendTick
 1152              	.LVL70:
 252:Core/Src/main.c **** 
 1153              		.loc 1 252 9 view .LVU301
 1154 01ce 0121     		movs	r1, #1
 1155 01d0 0120     		movs	r0, #1
 1156 01d2 FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
 1157              	.LVL71:
 255:Core/Src/main.c **** 
 1158              		.loc 1 255 9 view .LVU302
 255:Core/Src/main.c **** 
 1159              		.loc 1 255 23 is_stmt 0 view .LVU303
 1160 01d6 074B     		ldr	r3, .L50+12
 1161 01d8 0022     		movs	r2, #0
 1162 01da 1A70     		strb	r2, [r3]
 257:Core/Src/main.c ****       default:
 1163              		.loc 1 257 7 is_stmt 1 view .LVU304
 1164 01dc 35E7     		b	.L34
 1165              	.L36:
 259:Core/Src/main.c ****       break;
 1166              		.loc 1 259 7 view .LVU305
 259:Core/Src/main.c ****       break;
 1167              		.loc 1 259 21 is_stmt 0 view .LVU306
 1168 01de 054B     		ldr	r3, .L50+12
 1169 01e0 0022     		movs	r2, #0
 1170 01e2 1A70     		strb	r2, [r3]
 260:Core/Src/main.c ****     }
 1171              		.loc 1 260 7 is_stmt 1 view .LVU307
 1172 01e4 31E7     		b	.L34
 1173              	.L51:
 1174 01e6 C046     		.align	2
 1175              	.L50:
 1176 01e8 00000000 		.word	hadc
 1177 01ec 77ECFFFF 		.word	-5001
 1178 01f0 66420000 		.word	16998
 1179 01f4 00000000 		.word	current_state
 1180 01f8 00000000 		.word	ADC_CH5
 1181 01fc 00000000 		.word	ADC_CH6
 1182 0200 00000000 		.word	ADC_CH7
 1183 0204 00000000 		.word	ADC_REF
 1184 0208 00000000 		.word	supply_voltage_mv
 1185 020c BC6D0300 		.word	224700
 1186 0210 5C120000 		.word	4700
 1187 0214 00000000 		.word	input_voltage_mv
 1188 0218 58150100 		.word	71000
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 37


 1189 021c 983A0000 		.word	15000
 1190 0220 00000000 		.word	buck_output_voltage_mv
 1191 0224 00000000 		.word	buck_current_ma
 1192 0228 F0550000 		.word	22000
 1193 022c 00000000 		.word	.L38
 1194 0230 78ECFFFF 		.word	-5000
 1195 0234 68420000 		.word	17000
 1196 0238 00000000 		.word	timer_check
 1197 023c EF550000 		.word	21999
 1198 0240 00040050 		.word	1342178304
 1199              		.cfi_endproc
 1200              	.LFE40:
 1202              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1203              		.align	1
 1204              		.global	HAL_GPIO_EXTI_Callback
 1205              		.syntax unified
 1206              		.code	16
 1207              		.thumb_func
 1209              	HAL_GPIO_EXTI_Callback:
 1210              	.LVL72:
 1211              	.LFB47:
 474:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1212              		.loc 1 474 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 474:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1216              		.loc 1 474 1 is_stmt 0 view .LVU309
 1217 0000 10B5     		push	{r4, lr}
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 4, -8
 1220              		.cfi_offset 14, -4
 477:Core/Src/main.c **** 	  HAL_ResumeTick();
 1221              		.loc 1 477 4 is_stmt 1 view .LVU310
 1222 0002 FFF7FEFF 		bl	SystemClock_Config
 1223              	.LVL73:
 478:Core/Src/main.c ****   //}
 1224              		.loc 1 478 4 view .LVU311
 1225 0006 FFF7FEFF 		bl	HAL_ResumeTick
 1226              	.LVL74:
 480:Core/Src/main.c **** 
 1227              		.loc 1 480 1 is_stmt 0 view .LVU312
 1228              		@ sp needed
 1229 000a 10BD     		pop	{r4, pc}
 1230              		.cfi_endproc
 1231              	.LFE47:
 1233              		.global	current_state
 1234              		.section	.bss.current_state,"aw",%nobits
 1237              	current_state:
 1238 0000 00       		.space	1
 1239              		.global	timer_check
 1240              		.section	.bss.timer_check,"aw",%nobits
 1241              		.align	1
 1244              	timer_check:
 1245 0000 0000     		.space	2
 1246              		.global	previous_state
 1247              		.section	.bss.previous_state,"aw",%nobits
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 38


 1250              	previous_state:
 1251 0000 00       		.space	1
 1252              		.global	buck_current_ma
 1253              		.section	.bss.buck_current_ma,"aw",%nobits
 1254              		.align	1
 1257              	buck_current_ma:
 1258 0000 0000     		.space	2
 1259              		.global	buck_output_voltage_mv
 1260              		.section	.bss.buck_output_voltage_mv,"aw",%nobits
 1261              		.align	1
 1264              	buck_output_voltage_mv:
 1265 0000 0000     		.space	2
 1266              		.global	input_voltage_mv
 1267              		.section	.bss.input_voltage_mv,"aw",%nobits
 1268              		.align	1
 1271              	input_voltage_mv:
 1272 0000 0000     		.space	2
 1273              		.global	supply_voltage_mv
 1274              		.section	.bss.supply_voltage_mv,"aw",%nobits
 1275              		.align	1
 1278              	supply_voltage_mv:
 1279 0000 0000     		.space	2
 1280              		.global	ADC_REF
 1281              		.section	.bss.ADC_REF,"aw",%nobits
 1282              		.align	1
 1285              	ADC_REF:
 1286 0000 0000     		.space	2
 1287              		.global	ADC_CH7
 1288              		.section	.bss.ADC_CH7,"aw",%nobits
 1289              		.align	1
 1292              	ADC_CH7:
 1293 0000 0000     		.space	2
 1294              		.global	ADC_CH6
 1295              		.section	.bss.ADC_CH6,"aw",%nobits
 1296              		.align	1
 1299              	ADC_CH6:
 1300 0000 0000     		.space	2
 1301              		.global	ADC_CH5
 1302              		.section	.bss.ADC_CH5,"aw",%nobits
 1303              		.align	1
 1306              	ADC_CH5:
 1307 0000 0000     		.space	2
 1308              		.global	hadc
 1309              		.section	.bss.hadc,"aw",%nobits
 1310              		.align	2
 1313              	hadc:
 1314 0000 00000000 		.space	92
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1315              		.text
 1316              	.Letext0:
 1317              		.file 3 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 1318              		.file 4 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1319              		.file 5 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1320              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 39


 1321              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 1322              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 1323              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 1324              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 1325              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 1326              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 1327              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 1328              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr.h"
 1329              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc_ex.h"
 1330              		.file 16 "<built-in>"
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:19     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:194    .text.MX_GPIO_Init:00000000000000b8 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:201    .text.load_switch_enable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:207    .text.load_switch_enable:0000000000000000 load_switch_enable
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:238    .text.load_switch_disable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:244    .text.load_switch_disable:0000000000000000 load_switch_disable
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:275    .text.led_blink:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:281    .text.led_blink:0000000000000000 led_blink
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:328    .text.led_blink:000000000000002c $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:333    .text.Enable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:339    .text.Enable_buck_converter:0000000000000000 Enable_buck_converter
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:378    .text.Disable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:384    .text.Disable_buck_converter:0000000000000000 Disable_buck_converter
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:419    .text.Error_Handler:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:425    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:457    .text.MX_ADC_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:462    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:651    .text.MX_ADC_Init:00000000000000c4 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1313   .bss.hadc:0000000000000000 hadc
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:661    .text.SystemClock_Config:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:667    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:770    .text.SystemClock_Config:000000000000006c $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:777    .text.main:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:783    .text.main:0000000000000000 main
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1017   .rodata.main:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1176   .text.main:00000000000001e8 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1237   .bss.current_state:0000000000000000 current_state
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1306   .bss.ADC_CH5:0000000000000000 ADC_CH5
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1299   .bss.ADC_CH6:0000000000000000 ADC_CH6
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1292   .bss.ADC_CH7:0000000000000000 ADC_CH7
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1285   .bss.ADC_REF:0000000000000000 ADC_REF
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1278   .bss.supply_voltage_mv:0000000000000000 supply_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1271   .bss.input_voltage_mv:0000000000000000 input_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1264   .bss.buck_output_voltage_mv:0000000000000000 buck_output_voltage_mv
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1257   .bss.buck_current_ma:0000000000000000 buck_current_ma
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1244   .bss.timer_check:0000000000000000 timer_check
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1203   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1209   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1238   .bss.current_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1241   .bss.timer_check:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1250   .bss.previous_state:0000000000000000 previous_state
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1251   .bss.previous_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1254   .bss.buck_current_ma:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1261   .bss.buck_output_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1268   .bss.input_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1275   .bss.supply_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1282   .bss.ADC_REF:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1289   .bss.ADC_CH7:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1296   .bss.ADC_CH6:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1303   .bss.ADC_CH5:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s:1310   .bss.hadc:0000000000000000 $d

UNDEFINED SYMBOLS
memset
ARM GAS  C:\Users\jarne\AppData\Local\Temp\ccs82WqY.s 			page 41


HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_idiv
HAL_Init
HAL_ADCEx_Calibration_Start
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_SuspendTick
HAL_PWR_EnterSTOPMode
HAL_ResumeTick

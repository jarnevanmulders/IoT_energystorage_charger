ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB46:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #define VREFINT_CAL_ADDR          ((uint16_t*) ((uint32_t) 0x1FF80078))
  36:Core/Src/main.c **** #define MIN_VOLTAGE               5000
  37:Core/Src/main.c **** #define MAX_VOLTAGE               22000
  38:Core/Src/main.c **** #define MIN_CURRENT               200
  39:Core/Src/main.c **** #define SLEEP_VOLTAGE             1000
  40:Core/Src/main.c **** #define MIN_CHARGE_CUTTOF_VOLTAGE 2600
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** UART_HandleTypeDef huart2;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_ADC_Init(void);
  66:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  67:Core/Src/main.c **** static void MX_SPI1_Init(void);
  68:Core/Src/main.c **** static void MX_TIM2_Init(void);
  69:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** // *** Load switch functions *** //
  72:Core/Src/main.c **** void load_switch_enable(void);
  73:Core/Src/main.c **** void load_switch_disable(void);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** // *** Blocking led functions *** //
  76:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2);
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** // *** Non blocking led functios *** //
  79:Core/Src/main.c **** void led_blink_nb(uint16_t time_delay_1, uint16_t time_delay_2);
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
  82:Core/Src/main.c **** void Enable_buck_converter(void);
  83:Core/Src/main.c **** void Disable_buck_converter(void);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** // *** Calculate CRC *** //
  86:Core/Src/main.c **** uint8_t calculate_crc_xor(const uint8_t *data, size_t length);
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PFP */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 3


  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** uint16_t ADC_CH5, ADC_CH6, ADC_CH7, ADC_REF;
  94:Core/Src/main.c **** uint16_t supply_voltage_mv = 0;
  95:Core/Src/main.c **** uint16_t input_voltage_mv = 0;
  96:Core/Src/main.c **** uint16_t buck_output_voltage_mv = 0;
  97:Core/Src/main.c **** uint16_t buck_current_ma = 0;
  98:Core/Src/main.c **** uint8_t previous_state = 0;
  99:Core/Src/main.c **** uint16_t timer_check = 0;
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** // Non blocking blink  
 102:Core/Src/main.c **** uint8_t isOn;
 103:Core/Src/main.c **** uint32_t timestamp;
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** // Send message
 106:Core/Src/main.c **** uint8_t send_status = 1;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** // Buffer keeping SPI commands to change resistance of programmable potentiometer 
 109:Core/Src/main.c **** uint8_t spi_buffer [2] = {0, 0};
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** // State machine
 112:Core/Src/main.c **** typedef enum {INIT, START_CHARGING, CHARGING, STOP_CHARGING, OVER_VOLTAGE, SLEEP} State_type;
 113:Core/Src/main.c **** State_type current_state = INIT;
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* USER CODE END 0 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief  The application entry point.
 119:Core/Src/main.c ****   * @retval int
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** int main(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END 1 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 130:Core/Src/main.c ****   HAL_Init();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END Init */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Configure the system clock */
 137:Core/Src/main.c ****   SystemClock_Config();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END SysInit */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Initialize all configured peripherals */
 144:Core/Src/main.c ****   MX_GPIO_Init();
 145:Core/Src/main.c ****   MX_ADC_Init();
 146:Core/Src/main.c ****   MX_USART2_UART_Init();
 147:Core/Src/main.c ****   MX_SPI1_Init();
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 4


 148:Core/Src/main.c ****   MX_TIM2_Init();
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   // Calibrate ADC
 152:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc, ADC_SINGLE_ENDED);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   // Start timer
 155:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE END 2 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* Infinite loop */
 160:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 161:Core/Src/main.c ****   while (1)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     /* USER CODE END WHILE */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     // Delay (prevent sampling ADC to quickly)
 168:Core/Src/main.c ****     HAL_Delay(100);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****     // Start ADC Conversion and read two ADC values
 171:Core/Src/main.c **** 		HAL_ADC_Start(&hadc);
 172:Core/Src/main.c ****     
 173:Core/Src/main.c ****     // ADC_CHANNEL_5 & Read The ADC Conversion Result
 174:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 175:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     // ADC_CHANNEL_6 & Read The ADC Conversion Result
 178:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 179:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     // ADC_CHANNEL_7 & Read The ADC Conversion Result
 182:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 183:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     // ADC_CHANNEL_VREFINT & Read The ADC Conversion Result
 186:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc, 100);
 187:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     // Stop ADC Conversion
 190:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****     // Calculate supply voltage MCU
 193:Core/Src/main.c ****     supply_voltage_mv = 1200*4096/ADC_REF;
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     // Calculate input voltage BUCK converter
 196:Core/Src/main.c ****     input_voltage_mv = ADC_CH5*supply_voltage_mv/4096*224700/4700;
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****     // Calculate buck converter output voltage
 199:Core/Src/main.c ****     buck_output_voltage_mv = ADC_CH7*supply_voltage_mv/4096*71000/15000;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****     // Calculate buck converter output current
 202:Core/Src/main.c ****     buck_current_ma = ADC_CH6*supply_voltage_mv/4096*1000/780;
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 5


 205:Core/Src/main.c ****     if(input_voltage_mv > MAX_VOLTAGE){
 206:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 207:Core/Src/main.c ****     }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****     
 210:Core/Src/main.c ****     ///////////////////////////
 211:Core/Src/main.c ****     // *** State machine *** //
 212:Core/Src/main.c ****     ///////////////////////////
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****     switch (current_state){
 215:Core/Src/main.c ****       case INIT:
 216:Core/Src/main.c ****         // No charging may occur in the INIT phase
 217:Core/Src/main.c ****         Disable_buck_converter();
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****         // Check input voltage before start charging
 220:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE && input_voltage_mv > MIN_VOLTAGE){
 221:Core/Src/main.c ****           current_state = START_CHARGING;
 222:Core/Src/main.c ****           break;
 223:Core/Src/main.c ****         }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****         // Check input voltage in not below minimum voltage
 226:Core/Src/main.c ****         if(input_voltage_mv < SLEEP_VOLTAGE){
 227:Core/Src/main.c ****           current_state = SLEEP;
 228:Core/Src/main.c ****         }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_RESET);
 231:Core/Src/main.c ****         spi_buffer[1] = 100;
 232:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 100);
 233:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****         // Blink led
 236:Core/Src/main.c ****         led_blink_nb(500, 500);
 237:Core/Src/main.c ****       break;
 238:Core/Src/main.c ****       case START_CHARGING: 
 239:Core/Src/main.c ****         // Enable buck converter safely
 240:Core/Src/main.c ****         Enable_buck_converter();
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****         // Change state
 243:Core/Src/main.c ****         current_state = CHARGING;
 244:Core/Src/main.c ****       break;
 245:Core/Src/main.c ****       case CHARGING:
 246:Core/Src/main.c ****         led_blink_nb(100, 900);
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****         // If under voltage occurs, wait for enough voltage to resume
 249:Core/Src/main.c ****         if(input_voltage_mv < MIN_VOLTAGE){
 250:Core/Src/main.c ****           current_state = INIT;
 251:Core/Src/main.c ****           break;
 252:Core/Src/main.c ****         }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****         // Check for current lower then MIN_CURRENT after 10 sec
 255:Core/Src/main.c ****         if(buck_current_ma < MIN_CURRENT && timer_check > 10 && supply_voltage_mv > MIN_CHARGE_CUTT
 256:Core/Src/main.c ****           timer_check = 0;
 257:Core/Src/main.c ****           current_state = STOP_CHARGING;
 258:Core/Src/main.c ****         }
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_RESET);
 261:Core/Src/main.c ****         spi_buffer[1] = 100;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 6


 262:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 200);
 263:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****         timer_check++;
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****       break;
 268:Core/Src/main.c ****       case STOP_CHARGING:
 269:Core/Src/main.c ****         // Disable buck conveter safely
 270:Core/Src/main.c ****         Disable_buck_converter();
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****         // SEND MESSAGE TO TRANSMITTER
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****         // if(buck_current_ma < MIN_CURRENT && supply_voltage_mv > MIN_CHARGE_CUTTOF_VOLTAGE){
 275:Core/Src/main.c ****         //   current_state = SLEEP;
 276:Core/Src/main.c ****         // }
 277:Core/Src/main.c ****         // else{
 278:Core/Src/main.c ****         //   current_state = INIT;
 279:Core/Src/main.c ****         // }
 280:Core/Src/main.c ****         current_state = SLEEP;
 281:Core/Src/main.c ****       break;
 282:Core/Src/main.c ****       case OVER_VOLTAGE:
 283:Core/Src/main.c ****         led_blink_nb(100, 100);
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****         // Disable buck conveter safely
 286:Core/Src/main.c ****         Disable_buck_converter();
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****         // Check for save voltage
 289:Core/Src/main.c ****         if(input_voltage_mv < MAX_VOLTAGE){
 290:Core/Src/main.c ****           current_state = INIT;
 291:Core/Src/main.c ****         }
 292:Core/Src/main.c ****       break;
 293:Core/Src/main.c ****       case SLEEP:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****         // Disable LED
 296:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****         // Check if input voltage is above 2 V and enable timer interrupt
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****         // Reconfigure GPIO pins for sleep mode: EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin
 301:Core/Src/main.c ****         // GPIO_InitTypeDef GPIO_InitStruct;
 302:Core/Src/main.c ****         // GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin;
 303:Core/Src/main.c ****         // GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 304:Core/Src/main.c ****         // GPIO_InitStruct.Pull = GPIO_NOPULL;
 305:Core/Src/main.c ****         // HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 306:Core/Src/main.c ****         
 307:Core/Src/main.c ****         // Disable the systick interrupt
 308:Core/Src/main.c ****         HAL_SuspendTick();
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****         // Enter Stop Mode
 311:Core/Src/main.c ****         HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****         // Change state
 314:Core/Src/main.c ****         current_state = INIT;
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****       break;
 317:Core/Src/main.c ****       default:
 318:Core/Src/main.c ****       current_state = INIT;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 7


 319:Core/Src/main.c ****       break;
 320:Core/Src/main.c ****     }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****     if(send_status){
 323:Core/Src/main.c ****       send_status = 0;
 324:Core/Src/main.c ****       uint8_t length = 11;
 325:Core/Src/main.c ****       uint8_t buffer [length];
 326:Core/Src/main.c ****       buffer [0] = 0x02;
 327:Core/Src/main.c ****       buffer [1] = length;
 328:Core/Src/main.c ****       buffer [2] = (input_voltage_mv >> 8);
 329:Core/Src/main.c ****       buffer [3] = (uint8_t)(input_voltage_mv);
 330:Core/Src/main.c ****       buffer [4] = (buck_output_voltage_mv >> 8);
 331:Core/Src/main.c ****       buffer [5] = (uint8_t)(buck_output_voltage_mv);
 332:Core/Src/main.c ****       buffer [6] = (buck_current_ma >> 8);
 333:Core/Src/main.c ****       buffer [7] = (uint8_t)(buck_current_ma);
 334:Core/Src/main.c ****       buffer [8] = (supply_voltage_mv >> 8);
 335:Core/Src/main.c ****       buffer [9] = (uint8_t)(supply_voltage_mv);
 336:Core/Src/main.c ****       buffer [10] = calculate_crc_xor(buffer, length-1);//0xFF;
 337:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, buffer, length, 100);
 338:Core/Src/main.c ****     }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   }
 341:Core/Src/main.c ****   /* USER CODE END 3 */
 342:Core/Src/main.c **** }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /**
 345:Core/Src/main.c ****   * @brief System Clock Configuration
 346:Core/Src/main.c ****   * @retval None
 347:Core/Src/main.c ****   */
 348:Core/Src/main.c **** void SystemClock_Config(void)
 349:Core/Src/main.c **** {
 350:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 351:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 352:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 359:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 362:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 363:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 364:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 365:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 366:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 374:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 375:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 8


 376:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 377:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 378:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 385:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 386:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 387:Core/Src/main.c ****   {
 388:Core/Src/main.c ****     Error_Handler();
 389:Core/Src/main.c ****   }
 390:Core/Src/main.c **** }
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** /**
 393:Core/Src/main.c ****   * @brief ADC Initialization Function
 394:Core/Src/main.c ****   * @param None
 395:Core/Src/main.c ****   * @retval None
 396:Core/Src/main.c ****   */
 397:Core/Src/main.c **** static void MX_ADC_Init(void)
 398:Core/Src/main.c **** {
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 411:Core/Src/main.c ****   */
 412:Core/Src/main.c ****   hadc.Instance = ADC1;
 413:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 414:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 415:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 416:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 417:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 418:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 419:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 420:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 421:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 422:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 423:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 424:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 425:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 426:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 427:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 428:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 429:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 9


 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 435:Core/Src/main.c ****   */
 436:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 437:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 438:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 446:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 454:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 455:Core/Src/main.c ****   {
 456:Core/Src/main.c ****     Error_Handler();
 457:Core/Src/main.c ****   }
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_VREFINT;
 462:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 463:Core/Src/main.c ****   {
 464:Core/Src/main.c ****     Error_Handler();
 465:Core/Src/main.c ****   }
 466:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** }
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** /**
 473:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 474:Core/Src/main.c ****   * @param None
 475:Core/Src/main.c ****   * @retval None
 476:Core/Src/main.c ****   */
 477:Core/Src/main.c **** static void MX_SPI1_Init(void)
 478:Core/Src/main.c **** {
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 487:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 488:Core/Src/main.c ****   hspi1.Instance = SPI1;
 489:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 10


 490:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 491:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 492:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 493:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 494:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 495:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 496:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 497:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 498:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 499:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 500:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 501:Core/Src/main.c ****   {
 502:Core/Src/main.c ****     Error_Handler();
 503:Core/Src/main.c ****   }
 504:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** }
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** /**
 511:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 512:Core/Src/main.c ****   * @param None
 513:Core/Src/main.c ****   * @retval None
 514:Core/Src/main.c ****   */
 515:Core/Src/main.c **** static void MX_TIM2_Init(void)
 516:Core/Src/main.c **** {
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 523:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 528:Core/Src/main.c ****   htim2.Instance = TIM2;
 529:Core/Src/main.c ****   htim2.Init.Prescaler = 2000;
 530:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 531:Core/Src/main.c ****   htim2.Init.Period = 1000;
 532:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 533:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 534:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 535:Core/Src/main.c ****   {
 536:Core/Src/main.c ****     Error_Handler();
 537:Core/Src/main.c ****   }
 538:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 539:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 540:Core/Src/main.c ****   {
 541:Core/Src/main.c ****     Error_Handler();
 542:Core/Src/main.c ****   }
 543:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 544:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 545:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 546:Core/Src/main.c ****   {
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 11


 547:Core/Src/main.c ****     Error_Handler();
 548:Core/Src/main.c ****   }
 549:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c **** }
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** /**
 556:Core/Src/main.c ****   * @brief USART2 Initialization Function
 557:Core/Src/main.c ****   * @param None
 558:Core/Src/main.c ****   * @retval None
 559:Core/Src/main.c ****   */
 560:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 561:Core/Src/main.c **** {
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 570:Core/Src/main.c ****   huart2.Instance = USART2;
 571:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 572:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 573:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 574:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 575:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 576:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 577:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 578:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 579:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 580:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 581:Core/Src/main.c ****   {
 582:Core/Src/main.c ****     Error_Handler();
 583:Core/Src/main.c ****   }
 584:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** }
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** /**
 591:Core/Src/main.c ****   * @brief GPIO Initialization Function
 592:Core/Src/main.c ****   * @param None
 593:Core/Src/main.c ****   * @retval None
 594:Core/Src/main.c ****   */
 595:Core/Src/main.c **** static void MX_GPIO_Init(void)
 596:Core/Src/main.c **** {
  26              		.loc 1 596 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 12


  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 C646     		mov	lr, r8
  38 0004 00B5     		push	{lr}
  39              		.cfi_def_cfa_offset 24
  40              		.cfi_offset 8, -24
  41 0006 88B0     		sub	sp, sp, #32
  42              		.cfi_def_cfa_offset 56
 597:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 597 3 view .LVU1
  44              		.loc 1 597 20 is_stmt 0 view .LVU2
  45 0008 1422     		movs	r2, #20
  46 000a 0021     		movs	r1, #0
  47 000c 03A8     		add	r0, sp, #12
  48 000e FFF7FEFF 		bl	memset
  49              	.LVL0:
 598:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 599:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 602:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 602 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 602 3 view .LVU4
  53              		.loc 1 602 3 view .LVU5
  54 0012 294B     		ldr	r3, .L2
  55 0014 D96A     		ldr	r1, [r3, #44]
  56 0016 0422     		movs	r2, #4
  57 0018 1143     		orrs	r1, r2
  58 001a D962     		str	r1, [r3, #44]
  59              		.loc 1 602 3 view .LVU6
  60 001c D96A     		ldr	r1, [r3, #44]
  61 001e 0A40     		ands	r2, r1
  62 0020 0092     		str	r2, [sp]
  63              		.loc 1 602 3 view .LVU7
  64 0022 009A     		ldr	r2, [sp]
  65              	.LBE4:
  66              		.loc 1 602 3 view .LVU8
 603:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 603 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 603 3 view .LVU10
  70              		.loc 1 603 3 view .LVU11
  71 0024 DA6A     		ldr	r2, [r3, #44]
  72 0026 0125     		movs	r5, #1
  73 0028 2A43     		orrs	r2, r5
  74 002a DA62     		str	r2, [r3, #44]
  75              		.loc 1 603 3 view .LVU12
  76 002c DA6A     		ldr	r2, [r3, #44]
  77 002e 2A40     		ands	r2, r5
  78 0030 0192     		str	r2, [sp, #4]
  79              		.loc 1 603 3 view .LVU13
  80 0032 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
  82              		.loc 1 603 3 view .LVU14
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 13


 604:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  83              		.loc 1 604 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 604 3 view .LVU16
  86              		.loc 1 604 3 view .LVU17
  87 0034 D96A     		ldr	r1, [r3, #44]
  88 0036 0222     		movs	r2, #2
  89 0038 1143     		orrs	r1, r2
  90 003a D962     		str	r1, [r3, #44]
  91              		.loc 1 604 3 view .LVU18
  92 003c DB6A     		ldr	r3, [r3, #44]
  93 003e 1A40     		ands	r2, r3
  94 0040 0292     		str	r2, [sp, #8]
  95              		.loc 1 604 3 view .LVU19
  96 0042 029B     		ldr	r3, [sp, #8]
  97              	.LBE6:
  98              		.loc 1 604 3 view .LVU20
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 607:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  99              		.loc 1 607 3 view .LVU21
 100 0044 8024     		movs	r4, #128
 101 0046 E401     		lsls	r4, r4, #7
 102 0048 1C4B     		ldr	r3, .L2+4
 103 004a 9846     		mov	r8, r3
 104 004c 0022     		movs	r2, #0
 105 004e 2100     		movs	r1, r4
 106 0050 1800     		movs	r0, r3
 107 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 610:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin
 109              		.loc 1 610 3 view .LVU22
 110 0056 1A4F     		ldr	r7, .L2+8
 111 0058 A026     		movs	r6, #160
 112 005a F605     		lsls	r6, r6, #23
 113 005c 0022     		movs	r2, #0
 114 005e 3900     		movs	r1, r7
 115 0060 3000     		movs	r0, r6
 116 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL2:
 611:Core/Src/main.c ****                           |SC_Pin, GPIO_PIN_RESET);
 612:Core/Src/main.c **** 
 613:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 614:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 118              		.loc 1 614 3 view .LVU23
 119              		.loc 1 614 23 is_stmt 0 view .LVU24
 120 0066 0394     		str	r4, [sp, #12]
 615:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 121              		.loc 1 615 3 is_stmt 1 view .LVU25
 122              		.loc 1 615 24 is_stmt 0 view .LVU26
 123 0068 0495     		str	r5, [sp, #16]
 616:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 616 3 is_stmt 1 view .LVU27
 125              		.loc 1 616 24 is_stmt 0 view .LVU28
 126 006a 0024     		movs	r4, #0
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 14


 127 006c 0594     		str	r4, [sp, #20]
 617:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 128              		.loc 1 617 3 is_stmt 1 view .LVU29
 129              		.loc 1 617 25 is_stmt 0 view .LVU30
 130 006e 0694     		str	r4, [sp, #24]
 618:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 131              		.loc 1 618 3 is_stmt 1 view .LVU31
 132 0070 03A9     		add	r1, sp, #12
 133 0072 4046     		mov	r0, r8
 134 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 135              	.LVL3:
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /*Configure GPIO pins : EN1_Pin EN2_Pin PG_Pin BUCK_EN_Pin
 621:Core/Src/main.c ****                            SC_Pin */
 622:Core/Src/main.c ****   GPIO_InitStruct.Pin = EN1_Pin|EN2_Pin|PG_Pin|BUCK_EN_Pin
 136              		.loc 1 622 3 view .LVU32
 137              		.loc 1 622 23 is_stmt 0 view .LVU33
 138 0078 0397     		str	r7, [sp, #12]
 623:Core/Src/main.c ****                           |SC_Pin;
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 139              		.loc 1 624 3 is_stmt 1 view .LVU34
 140              		.loc 1 624 24 is_stmt 0 view .LVU35
 141 007a 0495     		str	r5, [sp, #16]
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 625 3 is_stmt 1 view .LVU36
 143              		.loc 1 625 24 is_stmt 0 view .LVU37
 144 007c 0594     		str	r4, [sp, #20]
 626:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 145              		.loc 1 626 3 is_stmt 1 view .LVU38
 146              		.loc 1 626 25 is_stmt 0 view .LVU39
 147 007e 0694     		str	r4, [sp, #24]
 627:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 627 3 is_stmt 1 view .LVU40
 149 0080 03A9     		add	r1, sp, #12
 150 0082 3000     		movs	r0, r6
 151 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL4:
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /*Configure GPIO pin : INT_Pin */
 630:Core/Src/main.c ****   GPIO_InitStruct.Pin = INT_Pin;
 153              		.loc 1 630 3 view .LVU41
 154              		.loc 1 630 23 is_stmt 0 view .LVU42
 155 0088 8023     		movs	r3, #128
 156 008a DB00     		lsls	r3, r3, #3
 157 008c 0393     		str	r3, [sp, #12]
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 158              		.loc 1 631 3 is_stmt 1 view .LVU43
 159              		.loc 1 631 24 is_stmt 0 view .LVU44
 160 008e 8823     		movs	r3, #136
 161 0090 5B03     		lsls	r3, r3, #13
 162 0092 0493     		str	r3, [sp, #16]
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 632 3 is_stmt 1 view .LVU45
 164              		.loc 1 632 24 is_stmt 0 view .LVU46
 165 0094 0594     		str	r4, [sp, #20]
 633:Core/Src/main.c ****   HAL_GPIO_Init(INT_GPIO_Port, &GPIO_InitStruct);
 166              		.loc 1 633 3 is_stmt 1 view .LVU47
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 15


 167 0096 03A9     		add	r1, sp, #12
 168 0098 3000     		movs	r0, r6
 169 009a FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL5:
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /* EXTI interrupt init*/
 636:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 171              		.loc 1 636 3 view .LVU48
 172 009e 0022     		movs	r2, #0
 173 00a0 0021     		movs	r1, #0
 174 00a2 0720     		movs	r0, #7
 175 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 176              	.LVL6:
 637:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 177              		.loc 1 637 3 view .LVU49
 178 00a8 0720     		movs	r0, #7
 179 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 180              	.LVL7:
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 640:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 641:Core/Src/main.c **** }
 181              		.loc 1 641 1 is_stmt 0 view .LVU50
 182 00ae 08B0     		add	sp, sp, #32
 183              		@ sp needed
 184 00b0 80BC     		pop	{r7}
 185 00b2 B846     		mov	r8, r7
 186 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 187              	.L3:
 188 00b6 C046     		.align	2
 189              	.L2:
 190 00b8 00100240 		.word	1073876992
 191 00bc 00080050 		.word	1342179328
 192 00c0 13420000 		.word	16915
 193              		.cfi_endproc
 194              	.LFE46:
 196              		.section	.text.load_switch_enable,"ax",%progbits
 197              		.align	1
 198              		.global	load_switch_enable
 199              		.syntax unified
 200              		.code	16
 201              		.thumb_func
 203              	load_switch_enable:
 204              	.LFB47:
 642:Core/Src/main.c **** 
 643:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c **** // *** Load Switch functions *** //
 646:Core/Src/main.c **** // Enable load switch 1 and 2
 647:Core/Src/main.c **** void load_switch_enable(void){
 205              		.loc 1 647 30 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 10B5     		push	{r4, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 16


 212              		.cfi_offset 14, -4
 648:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 213              		.loc 1 648 3 view .LVU52
 214 0002 A024     		movs	r4, #160
 215 0004 E405     		lsls	r4, r4, #23
 216 0006 0122     		movs	r2, #1
 217 0008 0121     		movs	r1, #1
 218 000a 2000     		movs	r0, r4
 219 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL8:
 649:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 221              		.loc 1 649 3 view .LVU53
 222 0010 0122     		movs	r2, #1
 223 0012 0221     		movs	r1, #2
 224 0014 2000     		movs	r0, r4
 225 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL9:
 650:Core/Src/main.c **** }
 227              		.loc 1 650 1 is_stmt 0 view .LVU54
 228              		@ sp needed
 229 001a 10BD     		pop	{r4, pc}
 230              		.cfi_endproc
 231              	.LFE47:
 233              		.section	.text.load_switch_disable,"ax",%progbits
 234              		.align	1
 235              		.global	load_switch_disable
 236              		.syntax unified
 237              		.code	16
 238              		.thumb_func
 240              	load_switch_disable:
 241              	.LFB48:
 651:Core/Src/main.c **** 
 652:Core/Src/main.c **** // Disable load switch 1 and 2
 653:Core/Src/main.c **** void load_switch_disable(void){
 242              		.loc 1 653 31 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 654:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_RESET);
 250              		.loc 1 654 3 view .LVU56
 251 0002 A024     		movs	r4, #160
 252 0004 E405     		lsls	r4, r4, #23
 253 0006 0022     		movs	r2, #0
 254 0008 0121     		movs	r1, #1
 255 000a 2000     		movs	r0, r4
 256 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 257              	.LVL10:
 655:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_RESET);
 258              		.loc 1 655 3 view .LVU57
 259 0010 0022     		movs	r2, #0
 260 0012 0221     		movs	r1, #2
 261 0014 2000     		movs	r0, r4
 262 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 17


 263              	.LVL11:
 656:Core/Src/main.c **** }
 264              		.loc 1 656 1 is_stmt 0 view .LVU58
 265              		@ sp needed
 266 001a 10BD     		pop	{r4, pc}
 267              		.cfi_endproc
 268              	.LFE48:
 270              		.section	.text.led_blink,"ax",%progbits
 271              		.align	1
 272              		.global	led_blink
 273              		.syntax unified
 274              		.code	16
 275              		.thumb_func
 277              	led_blink:
 278              	.LVL12:
 279              	.LFB49:
 657:Core/Src/main.c **** 
 658:Core/Src/main.c **** void led_blink(uint16_t time_delay_1, uint16_t time_delay_2){
 280              		.loc 1 658 61 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		.loc 1 658 61 is_stmt 0 view .LVU60
 285 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 286              		.cfi_def_cfa_offset 24
 287              		.cfi_offset 3, -24
 288              		.cfi_offset 4, -20
 289              		.cfi_offset 5, -16
 290              		.cfi_offset 6, -12
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 0500     		movs	r5, r0
 294 0004 0C00     		movs	r4, r1
 659:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 295              		.loc 1 659 3 is_stmt 1 view .LVU61
 296 0006 8027     		movs	r7, #128
 297 0008 FF01     		lsls	r7, r7, #7
 298 000a 094E     		ldr	r6, .L7
 299 000c 0022     		movs	r2, #0
 300 000e 3900     		movs	r1, r7
 301              	.LVL13:
 302              		.loc 1 659 3 is_stmt 0 view .LVU62
 303 0010 3000     		movs	r0, r6
 304              	.LVL14:
 305              		.loc 1 659 3 view .LVU63
 306 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL15:
 660:Core/Src/main.c ****   HAL_Delay(time_delay_1);
 308              		.loc 1 660 3 is_stmt 1 view .LVU64
 309 0016 2800     		movs	r0, r5
 310 0018 FFF7FEFF 		bl	HAL_Delay
 311              	.LVL16:
 661:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 312              		.loc 1 661 3 view .LVU65
 313 001c 0122     		movs	r2, #1
 314 001e 3900     		movs	r1, r7
 315 0020 3000     		movs	r0, r6
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 18


 316 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 317              	.LVL17:
 662:Core/Src/main.c ****   HAL_Delay(time_delay_2);
 318              		.loc 1 662 3 view .LVU66
 319 0026 2000     		movs	r0, r4
 320 0028 FFF7FEFF 		bl	HAL_Delay
 321              	.LVL18:
 663:Core/Src/main.c **** }
 322              		.loc 1 663 1 is_stmt 0 view .LVU67
 323              		@ sp needed
 324 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 325              	.L8:
 326 002e C046     		.align	2
 327              	.L7:
 328 0030 00080050 		.word	1342179328
 329              		.cfi_endproc
 330              	.LFE49:
 332              		.section	.text.led_blink_nb,"ax",%progbits
 333              		.align	1
 334              		.global	led_blink_nb
 335              		.syntax unified
 336              		.code	16
 337              		.thumb_func
 339              	led_blink_nb:
 340              	.LVL19:
 341              	.LFB50:
 664:Core/Src/main.c **** 
 665:Core/Src/main.c **** void led_blink_nb(uint16_t time_delay_1, uint16_t time_delay_2){
 342              		.loc 1 665 64 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		.loc 1 665 64 is_stmt 0 view .LVU69
 347 0000 70B5     		push	{r4, r5, r6, lr}
 348              		.cfi_def_cfa_offset 16
 349              		.cfi_offset 4, -16
 350              		.cfi_offset 5, -12
 351              		.cfi_offset 6, -8
 352              		.cfi_offset 14, -4
 353 0002 0500     		movs	r5, r0
 354 0004 0C00     		movs	r4, r1
 666:Core/Src/main.c ****   uint32_t currentTime = HAL_GetTick();  // Get current timestamp (implementation-dependent)
 355              		.loc 1 666 3 is_stmt 1 view .LVU70
 356              		.loc 1 666 26 is_stmt 0 view .LVU71
 357 0006 FFF7FEFF 		bl	HAL_GetTick
 358              	.LVL20:
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****   if (isOn) {
 359              		.loc 1 668 3 is_stmt 1 view .LVU72
 360              		.loc 1 668 7 is_stmt 0 view .LVU73
 361 000a 134A     		ldr	r2, .L13
 362 000c 1278     		ldrb	r2, [r2]
 363              		.loc 1 668 6 view .LVU74
 364 000e 002A     		cmp	r2, #0
 365 0010 11D0     		beq	.L10
 669:Core/Src/main.c ****     if (currentTime - timestamp >= time_delay_1) {
 366              		.loc 1 669 5 is_stmt 1 view .LVU75
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 19


 367              		.loc 1 669 21 is_stmt 0 view .LVU76
 368 0012 124A     		ldr	r2, .L13+4
 369 0014 1268     		ldr	r2, [r2]
 370 0016 821A     		subs	r2, r0, r2
 371              		.loc 1 669 8 view .LVU77
 372 0018 AA42     		cmp	r2, r5
 373 001a 00D2     		bcs	.L12
 374              	.LVL21:
 375              	.L9:
 670:Core/Src/main.c ****       isOn = 0;
 671:Core/Src/main.c ****       timestamp = currentTime;
 672:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 673:Core/Src/main.c ****     }
 674:Core/Src/main.c ****   } else {
 675:Core/Src/main.c ****     if (currentTime - timestamp >= time_delay_2) {
 676:Core/Src/main.c ****       isOn = 1;
 677:Core/Src/main.c ****       timestamp = currentTime;
 678:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 679:Core/Src/main.c ****     }
 680:Core/Src/main.c ****   }
 681:Core/Src/main.c **** }
 376              		.loc 1 681 1 view .LVU78
 377              		@ sp needed
 378 001c 70BD     		pop	{r4, r5, r6, pc}
 379              	.LVL22:
 380              	.L12:
 670:Core/Src/main.c ****       isOn = 0;
 381              		.loc 1 670 7 is_stmt 1 view .LVU79
 670:Core/Src/main.c ****       isOn = 0;
 382              		.loc 1 670 12 is_stmt 0 view .LVU80
 383 001e 0E4A     		ldr	r2, .L13
 384 0020 0021     		movs	r1, #0
 385 0022 1170     		strb	r1, [r2]
 671:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 386              		.loc 1 671 7 is_stmt 1 view .LVU81
 671:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 387              		.loc 1 671 17 is_stmt 0 view .LVU82
 388 0024 0D4A     		ldr	r2, .L13+4
 389 0026 1060     		str	r0, [r2]
 672:Core/Src/main.c ****     }
 390              		.loc 1 672 7 is_stmt 1 view .LVU83
 391 0028 8031     		adds	r1, r1, #128
 392 002a 0022     		movs	r2, #0
 393 002c C901     		lsls	r1, r1, #7
 394 002e 0C48     		ldr	r0, .L13+8
 395              	.LVL23:
 672:Core/Src/main.c ****     }
 396              		.loc 1 672 7 is_stmt 0 view .LVU84
 397 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL24:
 672:Core/Src/main.c ****     }
 399              		.loc 1 672 7 view .LVU85
 400 0034 F2E7     		b	.L9
 401              	.LVL25:
 402              	.L10:
 675:Core/Src/main.c ****       isOn = 1;
 403              		.loc 1 675 5 is_stmt 1 view .LVU86
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 20


 675:Core/Src/main.c ****       isOn = 1;
 404              		.loc 1 675 21 is_stmt 0 view .LVU87
 405 0036 094A     		ldr	r2, .L13+4
 406 0038 1268     		ldr	r2, [r2]
 407 003a 821A     		subs	r2, r0, r2
 675:Core/Src/main.c ****       isOn = 1;
 408              		.loc 1 675 8 view .LVU88
 409 003c A242     		cmp	r2, r4
 410 003e EDD3     		bcc	.L9
 676:Core/Src/main.c ****       timestamp = currentTime;
 411              		.loc 1 676 7 is_stmt 1 view .LVU89
 676:Core/Src/main.c ****       timestamp = currentTime;
 412              		.loc 1 676 12 is_stmt 0 view .LVU90
 413 0040 054A     		ldr	r2, .L13
 414 0042 0121     		movs	r1, #1
 415 0044 1170     		strb	r1, [r2]
 677:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 416              		.loc 1 677 7 is_stmt 1 view .LVU91
 677:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 417              		.loc 1 677 17 is_stmt 0 view .LVU92
 418 0046 054A     		ldr	r2, .L13+4
 419 0048 1060     		str	r0, [r2]
 678:Core/Src/main.c ****     }
 420              		.loc 1 678 7 is_stmt 1 view .LVU93
 421 004a 7F31     		adds	r1, r1, #127
 422 004c 0122     		movs	r2, #1
 423 004e C901     		lsls	r1, r1, #7
 424 0050 0348     		ldr	r0, .L13+8
 425              	.LVL26:
 678:Core/Src/main.c ****     }
 426              		.loc 1 678 7 is_stmt 0 view .LVU94
 427 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 428              	.LVL27:
 429              		.loc 1 681 1 view .LVU95
 430 0056 E1E7     		b	.L9
 431              	.L14:
 432              		.align	2
 433              	.L13:
 434 0058 00000000 		.word	isOn
 435 005c 00000000 		.word	timestamp
 436 0060 00080050 		.word	1342179328
 437              		.cfi_endproc
 438              	.LFE50:
 440              		.section	.text.Enable_buck_converter,"ax",%progbits
 441              		.align	1
 442              		.global	Enable_buck_converter
 443              		.syntax unified
 444              		.code	16
 445              		.thumb_func
 447              	Enable_buck_converter:
 448              	.LFB52:
 682:Core/Src/main.c **** 
 683:Core/Src/main.c **** // *** WAKE UP *** //
 684:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 685:Core/Src/main.c **** {
 686:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 687:Core/Src/main.c ****   //{
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 21


 688:Core/Src/main.c **** 	  SystemClock_Config();
 689:Core/Src/main.c **** 	  HAL_ResumeTick();
 690:Core/Src/main.c ****   //}
 691:Core/Src/main.c **** }
 692:Core/Src/main.c **** 
 693:Core/Src/main.c **** // *** SAFELY ENABLE/DISABLE BUCK CONVERTER *** //
 694:Core/Src/main.c **** void Enable_buck_converter(void){
 449              		.loc 1 694 33 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 10B5     		push	{r4, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
 695:Core/Src/main.c ****   // Enable load switches
 696:Core/Src/main.c ****   load_switch_enable();
 457              		.loc 1 696 3 view .LVU97
 458 0002 FFF7FEFF 		bl	load_switch_enable
 459              	.LVL28:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   HAL_Delay(100);
 460              		.loc 1 698 3 view .LVU98
 461 0006 6420     		movs	r0, #100
 462 0008 FFF7FEFF 		bl	HAL_Delay
 463              	.LVL29:
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****   // Enable CC/CV buck converter
 701:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_SET);
 464              		.loc 1 701 3 view .LVU99
 465 000c 8021     		movs	r1, #128
 466 000e A024     		movs	r4, #160
 467 0010 E405     		lsls	r4, r4, #23
 468 0012 0122     		movs	r2, #1
 469 0014 8900     		lsls	r1, r1, #2
 470 0016 2000     		movs	r0, r4
 471 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 472              	.LVL30:
 702:Core/Src/main.c **** 
 703:Core/Src/main.c ****   // Connect input voltage to buck converter
 704:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_SET);
 473              		.loc 1 704 3 view .LVU100
 474 001c 0122     		movs	r2, #1
 475 001e 1021     		movs	r1, #16
 476 0020 2000     		movs	r0, r4
 477 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 478              	.LVL31:
 705:Core/Src/main.c **** }
 479              		.loc 1 705 1 is_stmt 0 view .LVU101
 480              		@ sp needed
 481 0026 10BD     		pop	{r4, pc}
 482              		.cfi_endproc
 483              	.LFE52:
 485              		.section	.text.Disable_buck_converter,"ax",%progbits
 486              		.align	1
 487              		.global	Disable_buck_converter
 488              		.syntax unified
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 22


 489              		.code	16
 490              		.thumb_func
 492              	Disable_buck_converter:
 493              	.LFB53:
 706:Core/Src/main.c **** 
 707:Core/Src/main.c **** 
 708:Core/Src/main.c **** void Disable_buck_converter(void){
 494              		.loc 1 708 34 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498 0000 10B5     		push	{r4, lr}
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 4, -8
 501              		.cfi_offset 14, -4
 709:Core/Src/main.c ****     // Disable CC/CV buck converter
 710:Core/Src/main.c ****   HAL_GPIO_WritePin(BUCK_EN_GPIO_Port, BUCK_EN_Pin, GPIO_PIN_RESET);
 502              		.loc 1 710 3 view .LVU103
 503 0002 8021     		movs	r1, #128
 504 0004 A024     		movs	r4, #160
 505 0006 E405     		lsls	r4, r4, #23
 506 0008 0022     		movs	r2, #0
 507 000a 8900     		lsls	r1, r1, #2
 508 000c 2000     		movs	r0, r4
 509 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 510              	.LVL32:
 711:Core/Src/main.c ****   
 712:Core/Src/main.c ****   // Disconnect input voltage from buck converter
 713:Core/Src/main.c ****   HAL_GPIO_WritePin(PG_GPIO_Port, PG_Pin, GPIO_PIN_RESET);
 511              		.loc 1 713 3 view .LVU104
 512 0012 0022     		movs	r2, #0
 513 0014 1021     		movs	r1, #16
 514 0016 2000     		movs	r0, r4
 515 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 516              	.LVL33:
 714:Core/Src/main.c **** 
 715:Core/Src/main.c ****   // Disable load switches
 716:Core/Src/main.c ****   load_switch_disable();
 517              		.loc 1 716 3 view .LVU105
 518 001c FFF7FEFF 		bl	load_switch_disable
 519              	.LVL34:
 717:Core/Src/main.c **** }
 520              		.loc 1 717 1 is_stmt 0 view .LVU106
 521              		@ sp needed
 522 0020 10BD     		pop	{r4, pc}
 523              		.cfi_endproc
 524              	.LFE53:
 526              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 527              		.align	1
 528              		.global	HAL_TIM_PeriodElapsedCallback
 529              		.syntax unified
 530              		.code	16
 531              		.thumb_func
 533              	HAL_TIM_PeriodElapsedCallback:
 534              	.LVL35:
 535              	.LFB54:
 718:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 23


 719:Core/Src/main.c **** // *** TIMER INTEGRATION *** //
 720:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 536              		.loc 1 720 60 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 721:Core/Src/main.c ****   send_status = 1;
 541              		.loc 1 721 3 view .LVU108
 542              		.loc 1 721 15 is_stmt 0 view .LVU109
 543 0000 014B     		ldr	r3, .L18
 544 0002 0122     		movs	r2, #1
 545 0004 1A70     		strb	r2, [r3]
 722:Core/Src/main.c **** }
 546              		.loc 1 722 1 view .LVU110
 547              		@ sp needed
 548 0006 7047     		bx	lr
 549              	.L19:
 550              		.align	2
 551              	.L18:
 552 0008 00000000 		.word	send_status
 553              		.cfi_endproc
 554              	.LFE54:
 556              		.section	.text.calculate_crc_xor,"ax",%progbits
 557              		.align	1
 558              		.global	calculate_crc_xor
 559              		.syntax unified
 560              		.code	16
 561              		.thumb_func
 563              	calculate_crc_xor:
 564              	.LVL36:
 565              	.LFB55:
 723:Core/Src/main.c **** 
 724:Core/Src/main.c **** 
 725:Core/Src/main.c **** // *** Calculate CRC *** //
 726:Core/Src/main.c **** uint8_t calculate_crc_xor(const uint8_t *data, size_t length) {
 566              		.loc 1 726 63 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		.loc 1 726 63 is_stmt 0 view .LVU112
 571 0000 10B5     		push	{r4, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 4, -8
 574              		.cfi_offset 14, -4
 575 0002 0400     		movs	r4, r0
 727:Core/Src/main.c ****     uint8_t crc = 0;
 576              		.loc 1 727 5 is_stmt 1 view .LVU113
 577              	.LVL37:
 728:Core/Src/main.c ****     size_t i;
 578              		.loc 1 728 5 view .LVU114
 729:Core/Src/main.c **** 
 730:Core/Src/main.c ****     for (i = 0; i < length; i++) {
 579              		.loc 1 730 5 view .LVU115
 580              		.loc 1 730 12 is_stmt 0 view .LVU116
 581 0004 0023     		movs	r3, #0
 727:Core/Src/main.c ****     size_t i;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 24


 582              		.loc 1 727 13 view .LVU117
 583 0006 0020     		movs	r0, #0
 584              	.LVL38:
 585              		.loc 1 730 5 view .LVU118
 586 0008 02E0     		b	.L21
 587              	.LVL39:
 588              	.L22:
 731:Core/Src/main.c ****         crc ^= data[i];
 589              		.loc 1 731 9 is_stmt 1 discriminator 3 view .LVU119
 590              		.loc 1 731 20 is_stmt 0 discriminator 3 view .LVU120
 591 000a E25C     		ldrb	r2, [r4, r3]
 592              		.loc 1 731 13 discriminator 3 view .LVU121
 593 000c 5040     		eors	r0, r2
 594              	.LVL40:
 730:Core/Src/main.c ****         crc ^= data[i];
 595              		.loc 1 730 30 is_stmt 1 discriminator 3 view .LVU122
 596 000e 0133     		adds	r3, r3, #1
 597              	.LVL41:
 598              	.L21:
 730:Core/Src/main.c ****         crc ^= data[i];
 599              		.loc 1 730 19 discriminator 1 view .LVU123
 600 0010 8B42     		cmp	r3, r1
 601 0012 FAD3     		bcc	.L22
 732:Core/Src/main.c ****     }
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****     return crc;
 602              		.loc 1 734 5 view .LVU124
 735:Core/Src/main.c **** }
 603              		.loc 1 735 1 is_stmt 0 view .LVU125
 604              		@ sp needed
 605              	.LVL42:
 606              		.loc 1 735 1 view .LVU126
 607 0014 10BD     		pop	{r4, pc}
 608              		.cfi_endproc
 609              	.LFE55:
 611              		.section	.text.Error_Handler,"ax",%progbits
 612              		.align	1
 613              		.global	Error_Handler
 614              		.syntax unified
 615              		.code	16
 616              		.thumb_func
 618              	Error_Handler:
 619              	.LFB56:
 736:Core/Src/main.c **** 
 737:Core/Src/main.c **** /* USER CODE END 4 */
 738:Core/Src/main.c **** 
 739:Core/Src/main.c **** /**
 740:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 741:Core/Src/main.c ****   * @retval None
 742:Core/Src/main.c ****   */
 743:Core/Src/main.c **** void Error_Handler(void)
 744:Core/Src/main.c **** {
 620              		.loc 1 744 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ Volatile: function does not return.
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 25


 625              		@ link register save eliminated.
 745:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 746:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 747:Core/Src/main.c ****   __disable_irq();
 626              		.loc 1 747 3 view .LVU128
 627              	.LBB7:
 628              	.LBI7:
 629              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 26


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 27


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 630              		.loc 2 140 27 view .LVU129
 631              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 632              		.loc 2 142 3 view .LVU130
 633              		.syntax divided
 634              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 635 0000 72B6     		cpsid i
 636              	@ 0 "" 2
 637              		.thumb
 638              		.syntax unified
 639              	.L24:
 640              	.LBE8:
 641              	.LBE7:
 748:Core/Src/main.c ****   while (1)
 642              		.loc 1 748 3 discriminator 1 view .LVU131
 749:Core/Src/main.c ****   {
 750:Core/Src/main.c ****   }
 643              		.loc 1 750 3 discriminator 1 view .LVU132
 748:Core/Src/main.c ****   while (1)
 644              		.loc 1 748 9 discriminator 1 view .LVU133
 645 0002 FEE7     		b	.L24
 646              		.cfi_endproc
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 28


 647              	.LFE56:
 649              		.section	.text.MX_ADC_Init,"ax",%progbits
 650              		.align	1
 651              		.syntax unified
 652              		.code	16
 653              		.thumb_func
 655              	MX_ADC_Init:
 656              	.LFB42:
 398:Core/Src/main.c **** 
 657              		.loc 1 398 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661 0000 00B5     		push	{lr}
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 14, -4
 664 0002 83B0     		sub	sp, sp, #12
 665              		.cfi_def_cfa_offset 16
 404:Core/Src/main.c **** 
 666              		.loc 1 404 3 view .LVU135
 404:Core/Src/main.c **** 
 667              		.loc 1 404 26 is_stmt 0 view .LVU136
 668 0004 0822     		movs	r2, #8
 669 0006 0021     		movs	r1, #0
 670 0008 6846     		mov	r0, sp
 671 000a FFF7FEFF 		bl	memset
 672              	.LVL43:
 412:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 673              		.loc 1 412 3 is_stmt 1 view .LVU137
 412:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 674              		.loc 1 412 17 is_stmt 0 view .LVU138
 675 000e 2948     		ldr	r0, .L36
 676 0010 294B     		ldr	r3, .L36+4
 677 0012 0360     		str	r3, [r0]
 413:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 678              		.loc 1 413 3 is_stmt 1 view .LVU139
 413:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV1;
 679              		.loc 1 413 30 is_stmt 0 view .LVU140
 680 0014 0023     		movs	r3, #0
 681 0016 C363     		str	r3, [r0, #60]
 414:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 682              		.loc 1 414 3 is_stmt 1 view .LVU141
 414:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 683              		.loc 1 414 28 is_stmt 0 view .LVU142
 684 0018 C022     		movs	r2, #192
 685 001a 1206     		lsls	r2, r2, #24
 686 001c 4260     		str	r2, [r0, #4]
 415:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 687              		.loc 1 415 3 is_stmt 1 view .LVU143
 415:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_160CYCLES_5;
 688              		.loc 1 415 24 is_stmt 0 view .LVU144
 689 001e 8360     		str	r3, [r0, #8]
 416:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 690              		.loc 1 416 3 is_stmt 1 view .LVU145
 416:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 691              		.loc 1 416 26 is_stmt 0 view .LVU146
 692 0020 0722     		movs	r2, #7
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 29


 693 0022 8263     		str	r2, [r0, #56]
 417:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 694              		.loc 1 417 3 is_stmt 1 view .LVU147
 417:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 695              		.loc 1 417 26 is_stmt 0 view .LVU148
 696 0024 063A     		subs	r2, r2, #6
 697 0026 0261     		str	r2, [r0, #16]
 418:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 698              		.loc 1 418 3 is_stmt 1 view .LVU149
 418:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 699              		.loc 1 418 23 is_stmt 0 view .LVU150
 700 0028 C360     		str	r3, [r0, #12]
 419:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 701              		.loc 1 419 3 is_stmt 1 view .LVU151
 419:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 702              		.loc 1 419 32 is_stmt 0 view .LVU152
 703 002a 2021     		movs	r1, #32
 704 002c 4254     		strb	r2, [r0, r1]
 420:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 705              		.loc 1 420 3 is_stmt 1 view .LVU153
 420:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 706              		.loc 1 420 35 is_stmt 0 view .LVU154
 707 002e 0131     		adds	r1, r1, #1
 708 0030 4354     		strb	r3, [r0, r1]
 421:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 709              		.loc 1 421 3 is_stmt 1 view .LVU155
 421:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 710              		.loc 1 421 34 is_stmt 0 view .LVU156
 711 0032 8362     		str	r3, [r0, #40]
 422:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 712              		.loc 1 422 3 is_stmt 1 view .LVU157
 422:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 713              		.loc 1 422 30 is_stmt 0 view .LVU158
 714 0034 C221     		movs	r1, #194
 715 0036 FF31     		adds	r1, r1, #255
 716 0038 4162     		str	r1, [r0, #36]
 423:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 717              		.loc 1 423 3 is_stmt 1 view .LVU159
 423:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 718              		.loc 1 423 35 is_stmt 0 view .LVU160
 719 003a 9639     		subs	r1, r1, #150
 720 003c FF39     		subs	r1, r1, #255
 721 003e 4354     		strb	r3, [r0, r1]
 424:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 722              		.loc 1 424 3 is_stmt 1 view .LVU161
 424:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 723              		.loc 1 424 26 is_stmt 0 view .LVU162
 724 0040 2839     		subs	r1, r1, #40
 725 0042 4161     		str	r1, [r0, #20]
 425:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 726              		.loc 1 425 3 is_stmt 1 view .LVU163
 425:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 727              		.loc 1 425 21 is_stmt 0 view .LVU164
 728 0044 0363     		str	r3, [r0, #48]
 426:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
 729              		.loc 1 426 3 is_stmt 1 view .LVU165
 426:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = ENABLE;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 30


 730              		.loc 1 426 30 is_stmt 0 view .LVU166
 731 0046 8361     		str	r3, [r0, #24]
 427:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 732              		.loc 1 427 3 is_stmt 1 view .LVU167
 427:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 733              		.loc 1 427 35 is_stmt 0 view .LVU168
 734 0048 4263     		str	r2, [r0, #52]
 428:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 735              		.loc 1 428 3 is_stmt 1 view .LVU169
 428:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 736              		.loc 1 428 34 is_stmt 0 view .LVU170
 737 004a C361     		str	r3, [r0, #28]
 429:Core/Src/main.c ****   {
 738              		.loc 1 429 3 is_stmt 1 view .LVU171
 429:Core/Src/main.c ****   {
 739              		.loc 1 429 7 is_stmt 0 view .LVU172
 740 004c FFF7FEFF 		bl	HAL_ADC_Init
 741              	.LVL44:
 429:Core/Src/main.c ****   {
 742              		.loc 1 429 6 view .LVU173
 743 0050 0028     		cmp	r0, #0
 744 0052 24D1     		bne	.L31
 436:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 745              		.loc 1 436 3 is_stmt 1 view .LVU174
 436:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 746              		.loc 1 436 19 is_stmt 0 view .LVU175
 747 0054 194B     		ldr	r3, .L36+8
 748 0056 0093     		str	r3, [sp]
 437:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 749              		.loc 1 437 3 is_stmt 1 view .LVU176
 437:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 750              		.loc 1 437 16 is_stmt 0 view .LVU177
 751 0058 8023     		movs	r3, #128
 752 005a 5B01     		lsls	r3, r3, #5
 753 005c 0193     		str	r3, [sp, #4]
 438:Core/Src/main.c ****   {
 754              		.loc 1 438 3 is_stmt 1 view .LVU178
 438:Core/Src/main.c ****   {
 755              		.loc 1 438 7 is_stmt 0 view .LVU179
 756 005e 1548     		ldr	r0, .L36
 757 0060 6946     		mov	r1, sp
 758 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 759              	.LVL45:
 438:Core/Src/main.c ****   {
 760              		.loc 1 438 6 view .LVU180
 761 0066 0028     		cmp	r0, #0
 762 0068 1BD1     		bne	.L32
 445:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 763              		.loc 1 445 3 is_stmt 1 view .LVU181
 445:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 764              		.loc 1 445 19 is_stmt 0 view .LVU182
 765 006a 154B     		ldr	r3, .L36+12
 766 006c 0093     		str	r3, [sp]
 446:Core/Src/main.c ****   {
 767              		.loc 1 446 3 is_stmt 1 view .LVU183
 446:Core/Src/main.c ****   {
 768              		.loc 1 446 7 is_stmt 0 view .LVU184
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 31


 769 006e 1148     		ldr	r0, .L36
 770 0070 6946     		mov	r1, sp
 771 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 772              	.LVL46:
 446:Core/Src/main.c ****   {
 773              		.loc 1 446 6 view .LVU185
 774 0076 0028     		cmp	r0, #0
 775 0078 15D1     		bne	.L33
 453:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 776              		.loc 1 453 3 is_stmt 1 view .LVU186
 453:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 777              		.loc 1 453 19 is_stmt 0 view .LVU187
 778 007a 124B     		ldr	r3, .L36+16
 779 007c 0093     		str	r3, [sp]
 454:Core/Src/main.c ****   {
 780              		.loc 1 454 3 is_stmt 1 view .LVU188
 454:Core/Src/main.c ****   {
 781              		.loc 1 454 7 is_stmt 0 view .LVU189
 782 007e 0D48     		ldr	r0, .L36
 783 0080 6946     		mov	r1, sp
 784 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 785              	.LVL47:
 454:Core/Src/main.c ****   {
 786              		.loc 1 454 6 view .LVU190
 787 0086 0028     		cmp	r0, #0
 788 0088 0FD1     		bne	.L34
 461:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 789              		.loc 1 461 3 is_stmt 1 view .LVU191
 461:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 790              		.loc 1 461 19 is_stmt 0 view .LVU192
 791 008a 0F4B     		ldr	r3, .L36+20
 792 008c 0093     		str	r3, [sp]
 462:Core/Src/main.c ****   {
 793              		.loc 1 462 3 is_stmt 1 view .LVU193
 462:Core/Src/main.c ****   {
 794              		.loc 1 462 7 is_stmt 0 view .LVU194
 795 008e 0948     		ldr	r0, .L36
 796 0090 6946     		mov	r1, sp
 797 0092 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 798              	.LVL48:
 462:Core/Src/main.c ****   {
 799              		.loc 1 462 6 view .LVU195
 800 0096 0028     		cmp	r0, #0
 801 0098 09D1     		bne	.L35
 470:Core/Src/main.c **** 
 802              		.loc 1 470 1 view .LVU196
 803 009a 03B0     		add	sp, sp, #12
 804              		@ sp needed
 805 009c 00BD     		pop	{pc}
 806              	.L31:
 431:Core/Src/main.c ****   }
 807              		.loc 1 431 5 is_stmt 1 view .LVU197
 808 009e FFF7FEFF 		bl	Error_Handler
 809              	.LVL49:
 810              	.L32:
 440:Core/Src/main.c ****   }
 811              		.loc 1 440 5 view .LVU198
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 32


 812 00a2 FFF7FEFF 		bl	Error_Handler
 813              	.LVL50:
 814              	.L33:
 448:Core/Src/main.c ****   }
 815              		.loc 1 448 5 view .LVU199
 816 00a6 FFF7FEFF 		bl	Error_Handler
 817              	.LVL51:
 818              	.L34:
 456:Core/Src/main.c ****   }
 819              		.loc 1 456 5 view .LVU200
 820 00aa FFF7FEFF 		bl	Error_Handler
 821              	.LVL52:
 822              	.L35:
 464:Core/Src/main.c ****   }
 823              		.loc 1 464 5 view .LVU201
 824 00ae FFF7FEFF 		bl	Error_Handler
 825              	.LVL53:
 826              	.L37:
 827 00b2 C046     		.align	2
 828              	.L36:
 829 00b4 00000000 		.word	hadc
 830 00b8 00240140 		.word	1073816576
 831 00bc 20000014 		.word	335544352
 832 00c0 40000018 		.word	402653248
 833 00c4 8000001C 		.word	469762176
 834 00c8 00000244 		.word	1140981760
 835              		.cfi_endproc
 836              	.LFE42:
 838              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 839              		.align	1
 840              		.syntax unified
 841              		.code	16
 842              		.thumb_func
 844              	MX_USART2_UART_Init:
 845              	.LFB45:
 561:Core/Src/main.c **** 
 846              		.loc 1 561 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850 0000 10B5     		push	{r4, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 570:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 854              		.loc 1 570 3 view .LVU203
 570:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 855              		.loc 1 570 19 is_stmt 0 view .LVU204
 856 0002 0B48     		ldr	r0, .L41
 857 0004 0B4B     		ldr	r3, .L41+4
 858 0006 0360     		str	r3, [r0]
 571:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 859              		.loc 1 571 3 is_stmt 1 view .LVU205
 571:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 860              		.loc 1 571 24 is_stmt 0 view .LVU206
 861 0008 E123     		movs	r3, #225
 862 000a 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 33


 863 000c 4360     		str	r3, [r0, #4]
 572:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 864              		.loc 1 572 3 is_stmt 1 view .LVU207
 572:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 865              		.loc 1 572 26 is_stmt 0 view .LVU208
 866 000e 0023     		movs	r3, #0
 867 0010 8360     		str	r3, [r0, #8]
 573:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 868              		.loc 1 573 3 is_stmt 1 view .LVU209
 573:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 869              		.loc 1 573 24 is_stmt 0 view .LVU210
 870 0012 C360     		str	r3, [r0, #12]
 574:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 871              		.loc 1 574 3 is_stmt 1 view .LVU211
 574:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 872              		.loc 1 574 22 is_stmt 0 view .LVU212
 873 0014 0361     		str	r3, [r0, #16]
 575:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 874              		.loc 1 575 3 is_stmt 1 view .LVU213
 575:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 875              		.loc 1 575 20 is_stmt 0 view .LVU214
 876 0016 0C22     		movs	r2, #12
 877 0018 4261     		str	r2, [r0, #20]
 576:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 878              		.loc 1 576 3 is_stmt 1 view .LVU215
 576:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 879              		.loc 1 576 25 is_stmt 0 view .LVU216
 880 001a 8361     		str	r3, [r0, #24]
 577:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 881              		.loc 1 577 3 is_stmt 1 view .LVU217
 577:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 882              		.loc 1 577 28 is_stmt 0 view .LVU218
 883 001c C361     		str	r3, [r0, #28]
 578:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 884              		.loc 1 578 3 is_stmt 1 view .LVU219
 578:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 885              		.loc 1 578 30 is_stmt 0 view .LVU220
 886 001e 0362     		str	r3, [r0, #32]
 579:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 887              		.loc 1 579 3 is_stmt 1 view .LVU221
 579:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 888              		.loc 1 579 38 is_stmt 0 view .LVU222
 889 0020 4362     		str	r3, [r0, #36]
 580:Core/Src/main.c ****   {
 890              		.loc 1 580 3 is_stmt 1 view .LVU223
 580:Core/Src/main.c ****   {
 891              		.loc 1 580 7 is_stmt 0 view .LVU224
 892 0022 FFF7FEFF 		bl	HAL_UART_Init
 893              	.LVL54:
 580:Core/Src/main.c ****   {
 894              		.loc 1 580 6 view .LVU225
 895 0026 0028     		cmp	r0, #0
 896 0028 00D1     		bne	.L40
 588:Core/Src/main.c **** 
 897              		.loc 1 588 1 view .LVU226
 898              		@ sp needed
 899 002a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 34


 900              	.L40:
 582:Core/Src/main.c ****   }
 901              		.loc 1 582 5 is_stmt 1 view .LVU227
 902 002c FFF7FEFF 		bl	Error_Handler
 903              	.LVL55:
 904              	.L42:
 905              		.align	2
 906              	.L41:
 907 0030 00000000 		.word	huart2
 908 0034 00440040 		.word	1073759232
 909              		.cfi_endproc
 910              	.LFE45:
 912              		.section	.text.MX_SPI1_Init,"ax",%progbits
 913              		.align	1
 914              		.syntax unified
 915              		.code	16
 916              		.thumb_func
 918              	MX_SPI1_Init:
 919              	.LFB43:
 478:Core/Src/main.c **** 
 920              		.loc 1 478 1 view -0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924 0000 10B5     		push	{r4, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 488:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 928              		.loc 1 488 3 view .LVU229
 488:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 929              		.loc 1 488 18 is_stmt 0 view .LVU230
 930 0002 0D48     		ldr	r0, .L46
 931 0004 0D4B     		ldr	r3, .L46+4
 932 0006 0360     		str	r3, [r0]
 489:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 933              		.loc 1 489 3 is_stmt 1 view .LVU231
 489:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 934              		.loc 1 489 19 is_stmt 0 view .LVU232
 935 0008 8223     		movs	r3, #130
 936 000a 5B00     		lsls	r3, r3, #1
 937 000c 4360     		str	r3, [r0, #4]
 490:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 938              		.loc 1 490 3 is_stmt 1 view .LVU233
 490:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 939              		.loc 1 490 24 is_stmt 0 view .LVU234
 940 000e 0023     		movs	r3, #0
 941 0010 8360     		str	r3, [r0, #8]
 491:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 942              		.loc 1 491 3 is_stmt 1 view .LVU235
 491:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 943              		.loc 1 491 23 is_stmt 0 view .LVU236
 944 0012 C360     		str	r3, [r0, #12]
 492:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 945              		.loc 1 492 3 is_stmt 1 view .LVU237
 492:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 946              		.loc 1 492 26 is_stmt 0 view .LVU238
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 35


 947 0014 0361     		str	r3, [r0, #16]
 493:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 948              		.loc 1 493 3 is_stmt 1 view .LVU239
 493:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 949              		.loc 1 493 23 is_stmt 0 view .LVU240
 950 0016 4361     		str	r3, [r0, #20]
 494:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 951              		.loc 1 494 3 is_stmt 1 view .LVU241
 494:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 952              		.loc 1 494 18 is_stmt 0 view .LVU242
 953 0018 8022     		movs	r2, #128
 954 001a 9200     		lsls	r2, r2, #2
 955 001c 8261     		str	r2, [r0, #24]
 495:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 956              		.loc 1 495 3 is_stmt 1 view .LVU243
 495:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 957              		.loc 1 495 32 is_stmt 0 view .LVU244
 958 001e C361     		str	r3, [r0, #28]
 496:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 959              		.loc 1 496 3 is_stmt 1 view .LVU245
 496:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 960              		.loc 1 496 23 is_stmt 0 view .LVU246
 961 0020 0362     		str	r3, [r0, #32]
 497:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 962              		.loc 1 497 3 is_stmt 1 view .LVU247
 497:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 963              		.loc 1 497 21 is_stmt 0 view .LVU248
 964 0022 4362     		str	r3, [r0, #36]
 498:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 965              		.loc 1 498 3 is_stmt 1 view .LVU249
 498:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 966              		.loc 1 498 29 is_stmt 0 view .LVU250
 967 0024 8362     		str	r3, [r0, #40]
 499:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 968              		.loc 1 499 3 is_stmt 1 view .LVU251
 499:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 969              		.loc 1 499 28 is_stmt 0 view .LVU252
 970 0026 0733     		adds	r3, r3, #7
 971 0028 C362     		str	r3, [r0, #44]
 500:Core/Src/main.c ****   {
 972              		.loc 1 500 3 is_stmt 1 view .LVU253
 500:Core/Src/main.c ****   {
 973              		.loc 1 500 7 is_stmt 0 view .LVU254
 974 002a FFF7FEFF 		bl	HAL_SPI_Init
 975              	.LVL56:
 500:Core/Src/main.c ****   {
 976              		.loc 1 500 6 view .LVU255
 977 002e 0028     		cmp	r0, #0
 978 0030 00D1     		bne	.L45
 508:Core/Src/main.c **** 
 979              		.loc 1 508 1 view .LVU256
 980              		@ sp needed
 981 0032 10BD     		pop	{r4, pc}
 982              	.L45:
 502:Core/Src/main.c ****   }
 983              		.loc 1 502 5 is_stmt 1 view .LVU257
 984 0034 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 36


 985              	.LVL57:
 986              	.L47:
 987              		.align	2
 988              	.L46:
 989 0038 00000000 		.word	hspi1
 990 003c 00300140 		.word	1073819648
 991              		.cfi_endproc
 992              	.LFE43:
 994              		.section	.text.MX_TIM2_Init,"ax",%progbits
 995              		.align	1
 996              		.syntax unified
 997              		.code	16
 998              		.thumb_func
 1000              	MX_TIM2_Init:
 1001              	.LFB44:
 516:Core/Src/main.c **** 
 1002              		.loc 1 516 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 24
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006 0000 00B5     		push	{lr}
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 14, -4
 1009 0002 87B0     		sub	sp, sp, #28
 1010              		.cfi_def_cfa_offset 32
 522:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1011              		.loc 1 522 3 view .LVU259
 522:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1012              		.loc 1 522 26 is_stmt 0 view .LVU260
 1013 0004 1022     		movs	r2, #16
 1014 0006 0021     		movs	r1, #0
 1015 0008 02A8     		add	r0, sp, #8
 1016 000a FFF7FEFF 		bl	memset
 1017              	.LVL58:
 523:Core/Src/main.c **** 
 1018              		.loc 1 523 3 is_stmt 1 view .LVU261
 523:Core/Src/main.c **** 
 1019              		.loc 1 523 27 is_stmt 0 view .LVU262
 1020 000e 0822     		movs	r2, #8
 1021 0010 0021     		movs	r1, #0
 1022 0012 6846     		mov	r0, sp
 1023 0014 FFF7FEFF 		bl	memset
 1024              	.LVL59:
 528:Core/Src/main.c ****   htim2.Init.Prescaler = 2000;
 1025              		.loc 1 528 3 is_stmt 1 view .LVU263
 528:Core/Src/main.c ****   htim2.Init.Prescaler = 2000;
 1026              		.loc 1 528 18 is_stmt 0 view .LVU264
 1027 0018 1648     		ldr	r0, .L55
 1028 001a 8023     		movs	r3, #128
 1029 001c DB05     		lsls	r3, r3, #23
 1030 001e 0360     		str	r3, [r0]
 529:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1031              		.loc 1 529 3 is_stmt 1 view .LVU265
 529:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1032              		.loc 1 529 24 is_stmt 0 view .LVU266
 1033 0020 FA23     		movs	r3, #250
 1034 0022 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 37


 1035 0024 4360     		str	r3, [r0, #4]
 530:Core/Src/main.c ****   htim2.Init.Period = 1000;
 1036              		.loc 1 530 3 is_stmt 1 view .LVU267
 530:Core/Src/main.c ****   htim2.Init.Period = 1000;
 1037              		.loc 1 530 26 is_stmt 0 view .LVU268
 1038 0026 0023     		movs	r3, #0
 1039 0028 8360     		str	r3, [r0, #8]
 531:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1040              		.loc 1 531 3 is_stmt 1 view .LVU269
 531:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1041              		.loc 1 531 21 is_stmt 0 view .LVU270
 1042 002a FA22     		movs	r2, #250
 1043 002c 9200     		lsls	r2, r2, #2
 1044 002e C260     		str	r2, [r0, #12]
 532:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1045              		.loc 1 532 3 is_stmt 1 view .LVU271
 532:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1046              		.loc 1 532 28 is_stmt 0 view .LVU272
 1047 0030 0361     		str	r3, [r0, #16]
 533:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1048              		.loc 1 533 3 is_stmt 1 view .LVU273
 533:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1049              		.loc 1 533 32 is_stmt 0 view .LVU274
 1050 0032 8033     		adds	r3, r3, #128
 1051 0034 4361     		str	r3, [r0, #20]
 534:Core/Src/main.c ****   {
 1052              		.loc 1 534 3 is_stmt 1 view .LVU275
 534:Core/Src/main.c ****   {
 1053              		.loc 1 534 7 is_stmt 0 view .LVU276
 1054 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1055              	.LVL60:
 534:Core/Src/main.c ****   {
 1056              		.loc 1 534 6 view .LVU277
 1057 003a 0028     		cmp	r0, #0
 1058 003c 13D1     		bne	.L52
 538:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1059              		.loc 1 538 3 is_stmt 1 view .LVU278
 538:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1060              		.loc 1 538 34 is_stmt 0 view .LVU279
 1061 003e 8023     		movs	r3, #128
 1062 0040 5B01     		lsls	r3, r3, #5
 1063 0042 0293     		str	r3, [sp, #8]
 539:Core/Src/main.c ****   {
 1064              		.loc 1 539 3 is_stmt 1 view .LVU280
 539:Core/Src/main.c ****   {
 1065              		.loc 1 539 7 is_stmt 0 view .LVU281
 1066 0044 0B48     		ldr	r0, .L55
 1067 0046 02A9     		add	r1, sp, #8
 1068 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1069              	.LVL61:
 539:Core/Src/main.c ****   {
 1070              		.loc 1 539 6 view .LVU282
 1071 004c 0028     		cmp	r0, #0
 1072 004e 0CD1     		bne	.L53
 543:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1073              		.loc 1 543 3 is_stmt 1 view .LVU283
 543:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 38


 1074              		.loc 1 543 37 is_stmt 0 view .LVU284
 1075 0050 0023     		movs	r3, #0
 1076 0052 0093     		str	r3, [sp]
 544:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1077              		.loc 1 544 3 is_stmt 1 view .LVU285
 544:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1078              		.loc 1 544 33 is_stmt 0 view .LVU286
 1079 0054 0193     		str	r3, [sp, #4]
 545:Core/Src/main.c ****   {
 1080              		.loc 1 545 3 is_stmt 1 view .LVU287
 545:Core/Src/main.c ****   {
 1081              		.loc 1 545 7 is_stmt 0 view .LVU288
 1082 0056 0748     		ldr	r0, .L55
 1083 0058 6946     		mov	r1, sp
 1084 005a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1085              	.LVL62:
 545:Core/Src/main.c ****   {
 1086              		.loc 1 545 6 view .LVU289
 1087 005e 0028     		cmp	r0, #0
 1088 0060 05D1     		bne	.L54
 553:Core/Src/main.c **** 
 1089              		.loc 1 553 1 view .LVU290
 1090 0062 07B0     		add	sp, sp, #28
 1091              		@ sp needed
 1092 0064 00BD     		pop	{pc}
 1093              	.L52:
 536:Core/Src/main.c ****   }
 1094              		.loc 1 536 5 is_stmt 1 view .LVU291
 1095 0066 FFF7FEFF 		bl	Error_Handler
 1096              	.LVL63:
 1097              	.L53:
 541:Core/Src/main.c ****   }
 1098              		.loc 1 541 5 view .LVU292
 1099 006a FFF7FEFF 		bl	Error_Handler
 1100              	.LVL64:
 1101              	.L54:
 547:Core/Src/main.c ****   }
 1102              		.loc 1 547 5 view .LVU293
 1103 006e FFF7FEFF 		bl	Error_Handler
 1104              	.LVL65:
 1105              	.L56:
 1106 0072 C046     		.align	2
 1107              	.L55:
 1108 0074 00000000 		.word	htim2
 1109              		.cfi_endproc
 1110              	.LFE44:
 1112              		.section	.text.SystemClock_Config,"ax",%progbits
 1113              		.align	1
 1114              		.global	SystemClock_Config
 1115              		.syntax unified
 1116              		.code	16
 1117              		.thumb_func
 1119              	SystemClock_Config:
 1120              	.LFB41:
 349:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1121              		.loc 1 349 1 view -0
 1122              		.cfi_startproc
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 39


 1123              		@ args = 0, pretend = 0, frame = 96
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125 0000 00B5     		push	{lr}
 1126              		.cfi_def_cfa_offset 4
 1127              		.cfi_offset 14, -4
 1128 0002 99B0     		sub	sp, sp, #100
 1129              		.cfi_def_cfa_offset 104
 350:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1130              		.loc 1 350 3 view .LVU295
 350:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1131              		.loc 1 350 22 is_stmt 0 view .LVU296
 1132 0004 3422     		movs	r2, #52
 1133 0006 0021     		movs	r1, #0
 1134 0008 0BA8     		add	r0, sp, #44
 1135 000a FFF7FEFF 		bl	memset
 1136              	.LVL66:
 351:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1137              		.loc 1 351 3 is_stmt 1 view .LVU297
 351:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1138              		.loc 1 351 22 is_stmt 0 view .LVU298
 1139 000e 1422     		movs	r2, #20
 1140 0010 0021     		movs	r1, #0
 1141 0012 06A8     		add	r0, sp, #24
 1142 0014 FFF7FEFF 		bl	memset
 1143              	.LVL67:
 352:Core/Src/main.c **** 
 1144              		.loc 1 352 3 is_stmt 1 view .LVU299
 352:Core/Src/main.c **** 
 1145              		.loc 1 352 28 is_stmt 0 view .LVU300
 1146 0018 1822     		movs	r2, #24
 1147 001a 0021     		movs	r1, #0
 1148 001c 6846     		mov	r0, sp
 1149 001e FFF7FEFF 		bl	memset
 1150              	.LVL68:
 356:Core/Src/main.c **** 
 1151              		.loc 1 356 3 is_stmt 1 view .LVU301
 1152 0022 1A49     		ldr	r1, .L64
 1153 0024 0A68     		ldr	r2, [r1]
 1154 0026 1A4B     		ldr	r3, .L64+4
 1155 0028 1A40     		ands	r2, r3
 1156 002a 8023     		movs	r3, #128
 1157 002c 1B01     		lsls	r3, r3, #4
 1158 002e 1343     		orrs	r3, r2
 1159 0030 0B60     		str	r3, [r1]
 361:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1160              		.loc 1 361 3 view .LVU302
 361:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1161              		.loc 1 361 36 is_stmt 0 view .LVU303
 1162 0032 1023     		movs	r3, #16
 1163 0034 0B93     		str	r3, [sp, #44]
 362:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1164              		.loc 1 362 3 is_stmt 1 view .LVU304
 362:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1165              		.loc 1 362 30 is_stmt 0 view .LVU305
 1166 0036 0F3B     		subs	r3, r3, #15
 1167 0038 1193     		str	r3, [sp, #68]
 363:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 40


 1168              		.loc 1 363 3 is_stmt 1 view .LVU306
 363:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 1169              		.loc 1 363 41 is_stmt 0 view .LVU307
 1170 003a 0023     		movs	r3, #0
 1171 003c 1293     		str	r3, [sp, #72]
 364:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1172              		.loc 1 364 3 is_stmt 1 view .LVU308
 364:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1173              		.loc 1 364 35 is_stmt 0 view .LVU309
 1174 003e A022     		movs	r2, #160
 1175 0040 1202     		lsls	r2, r2, #8
 1176 0042 1392     		str	r2, [sp, #76]
 365:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1177              		.loc 1 365 3 is_stmt 1 view .LVU310
 365:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1178              		.loc 1 365 34 is_stmt 0 view .LVU311
 1179 0044 1493     		str	r3, [sp, #80]
 366:Core/Src/main.c ****   {
 1180              		.loc 1 366 3 is_stmt 1 view .LVU312
 366:Core/Src/main.c ****   {
 1181              		.loc 1 366 7 is_stmt 0 view .LVU313
 1182 0046 0BA8     		add	r0, sp, #44
 1183 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1184              	.LVL69:
 366:Core/Src/main.c ****   {
 1185              		.loc 1 366 6 view .LVU314
 1186 004c 0028     		cmp	r0, #0
 1187 004e 17D1     		bne	.L61
 373:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1188              		.loc 1 373 3 is_stmt 1 view .LVU315
 373:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1189              		.loc 1 373 31 is_stmt 0 view .LVU316
 1190 0050 0F23     		movs	r3, #15
 1191 0052 0693     		str	r3, [sp, #24]
 375:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1192              		.loc 1 375 3 is_stmt 1 view .LVU317
 375:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1193              		.loc 1 375 34 is_stmt 0 view .LVU318
 1194 0054 0023     		movs	r3, #0
 1195 0056 0793     		str	r3, [sp, #28]
 376:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1196              		.loc 1 376 3 is_stmt 1 view .LVU319
 376:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1197              		.loc 1 376 35 is_stmt 0 view .LVU320
 1198 0058 0893     		str	r3, [sp, #32]
 377:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1199              		.loc 1 377 3 is_stmt 1 view .LVU321
 377:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1200              		.loc 1 377 36 is_stmt 0 view .LVU322
 1201 005a 0993     		str	r3, [sp, #36]
 378:Core/Src/main.c **** 
 1202              		.loc 1 378 3 is_stmt 1 view .LVU323
 378:Core/Src/main.c **** 
 1203              		.loc 1 378 36 is_stmt 0 view .LVU324
 1204 005c 0A93     		str	r3, [sp, #40]
 380:Core/Src/main.c ****   {
 1205              		.loc 1 380 3 is_stmt 1 view .LVU325
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 41


 380:Core/Src/main.c ****   {
 1206              		.loc 1 380 7 is_stmt 0 view .LVU326
 1207 005e 0021     		movs	r1, #0
 1208 0060 06A8     		add	r0, sp, #24
 1209 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1210              	.LVL70:
 380:Core/Src/main.c ****   {
 1211              		.loc 1 380 6 view .LVU327
 1212 0066 0028     		cmp	r0, #0
 1213 0068 0CD1     		bne	.L62
 384:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1214              		.loc 1 384 3 is_stmt 1 view .LVU328
 384:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1215              		.loc 1 384 38 is_stmt 0 view .LVU329
 1216 006a 0223     		movs	r3, #2
 1217 006c 0093     		str	r3, [sp]
 385:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1218              		.loc 1 385 3 is_stmt 1 view .LVU330
 385:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1219              		.loc 1 385 38 is_stmt 0 view .LVU331
 1220 006e 0023     		movs	r3, #0
 1221 0070 0293     		str	r3, [sp, #8]
 386:Core/Src/main.c ****   {
 1222              		.loc 1 386 3 is_stmt 1 view .LVU332
 386:Core/Src/main.c ****   {
 1223              		.loc 1 386 7 is_stmt 0 view .LVU333
 1224 0072 6846     		mov	r0, sp
 1225 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1226              	.LVL71:
 386:Core/Src/main.c ****   {
 1227              		.loc 1 386 6 view .LVU334
 1228 0078 0028     		cmp	r0, #0
 1229 007a 05D1     		bne	.L63
 390:Core/Src/main.c **** 
 1230              		.loc 1 390 1 view .LVU335
 1231 007c 19B0     		add	sp, sp, #100
 1232              		@ sp needed
 1233 007e 00BD     		pop	{pc}
 1234              	.L61:
 368:Core/Src/main.c ****   }
 1235              		.loc 1 368 5 is_stmt 1 view .LVU336
 1236 0080 FFF7FEFF 		bl	Error_Handler
 1237              	.LVL72:
 1238              	.L62:
 382:Core/Src/main.c ****   }
 1239              		.loc 1 382 5 view .LVU337
 1240 0084 FFF7FEFF 		bl	Error_Handler
 1241              	.LVL73:
 1242              	.L63:
 388:Core/Src/main.c ****   }
 1243              		.loc 1 388 5 view .LVU338
 1244 0088 FFF7FEFF 		bl	Error_Handler
 1245              	.LVL74:
 1246              	.L65:
 1247              		.align	2
 1248              	.L64:
 1249 008c 00700040 		.word	1073770496
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 42


 1250 0090 FFE7FFFF 		.word	-6145
 1251              		.cfi_endproc
 1252              	.LFE41:
 1254              		.global	__aeabi_idiv
 1255              		.section	.text.main,"ax",%progbits
 1256              		.align	1
 1257              		.global	main
 1258              		.syntax unified
 1259              		.code	16
 1260              		.thumb_func
 1262              	main:
 1263              	.LFB40:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1264              		.loc 1 122 1 view -0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 16
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1269              		.cfi_def_cfa_offset 20
 1270              		.cfi_offset 4, -20
 1271              		.cfi_offset 5, -16
 1272              		.cfi_offset 6, -12
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 C646     		mov	lr, r8
 1276 0004 00B5     		push	{lr}
 1277              		.cfi_def_cfa_offset 24
 1278              		.cfi_offset 8, -24
 1279 0006 84B0     		sub	sp, sp, #16
 1280              		.cfi_def_cfa_offset 40
 130:Core/Src/main.c **** 
 1281              		.loc 1 130 3 view .LVU340
 1282 0008 FFF7FEFF 		bl	HAL_Init
 1283              	.LVL75:
 137:Core/Src/main.c **** 
 1284              		.loc 1 137 3 view .LVU341
 1285 000c FFF7FEFF 		bl	SystemClock_Config
 1286              	.LVL76:
 144:Core/Src/main.c ****   MX_ADC_Init();
 1287              		.loc 1 144 3 view .LVU342
 1288 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1289              	.LVL77:
 145:Core/Src/main.c ****   MX_USART2_UART_Init();
 1290              		.loc 1 145 3 view .LVU343
 1291 0014 FFF7FEFF 		bl	MX_ADC_Init
 1292              	.LVL78:
 146:Core/Src/main.c ****   MX_SPI1_Init();
 1293              		.loc 1 146 3 view .LVU344
 1294 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 1295              	.LVL79:
 147:Core/Src/main.c ****   MX_TIM2_Init();
 1296              		.loc 1 147 3 view .LVU345
 1297 001c FFF7FEFF 		bl	MX_SPI1_Init
 1298              	.LVL80:
 148:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1299              		.loc 1 148 3 view .LVU346
 1300 0020 FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 43


 1301              	.LVL81:
 152:Core/Src/main.c **** 
 1302              		.loc 1 152 3 view .LVU347
 1303 0024 A248     		ldr	r0, .L84
 1304 0026 0021     		movs	r1, #0
 1305 0028 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1306              	.LVL82:
 155:Core/Src/main.c **** 
 1307              		.loc 1 155 3 view .LVU348
 1308 002c A148     		ldr	r0, .L84+4
 1309 002e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1310              	.LVL83:
 1311 0032 39E0     		b	.L81
 1312              	.L75:
 217:Core/Src/main.c **** 
 1313              		.loc 1 217 9 view .LVU349
 1314 0034 FFF7FEFF 		bl	Disable_buck_converter
 1315              	.LVL84:
 220:Core/Src/main.c ****           current_state = START_CHARGING;
 1316              		.loc 1 220 9 view .LVU350
 220:Core/Src/main.c ****           current_state = START_CHARGING;
 1317              		.loc 1 220 43 is_stmt 0 view .LVU351
 1318 0038 9F4B     		ldr	r3, .L84+8
 1319 003a 1A88     		ldrh	r2, [r3]
 1320 003c 9F4B     		ldr	r3, .L84+12
 1321 003e D318     		adds	r3, r2, r3
 1322 0040 9BB2     		uxth	r3, r3
 220:Core/Src/main.c ****           current_state = START_CHARGING;
 1323              		.loc 1 220 11 view .LVU352
 1324 0042 9F49     		ldr	r1, .L84+16
 1325 0044 8B42     		cmp	r3, r1
 1326 0046 03D8     		bhi	.L76
 221:Core/Src/main.c ****           break;
 1327              		.loc 1 221 11 is_stmt 1 view .LVU353
 221:Core/Src/main.c ****           break;
 1328              		.loc 1 221 25 is_stmt 0 view .LVU354
 1329 0048 9E4B     		ldr	r3, .L84+20
 1330 004a 0122     		movs	r2, #1
 1331 004c 1A70     		strb	r2, [r3]
 222:Core/Src/main.c ****         }
 1332              		.loc 1 222 11 is_stmt 1 view .LVU355
 1333 004e 26E0     		b	.L77
 1334              	.L76:
 226:Core/Src/main.c ****           current_state = SLEEP;
 1335              		.loc 1 226 9 view .LVU356
 226:Core/Src/main.c ****           current_state = SLEEP;
 1336              		.loc 1 226 11 is_stmt 0 view .LVU357
 1337 0050 FA23     		movs	r3, #250
 1338 0052 9B00     		lsls	r3, r3, #2
 1339 0054 9A42     		cmp	r2, r3
 1340 0056 02D2     		bcs	.L78
 227:Core/Src/main.c ****         }
 1341              		.loc 1 227 11 is_stmt 1 view .LVU358
 227:Core/Src/main.c ****         }
 1342              		.loc 1 227 25 is_stmt 0 view .LVU359
 1343 0058 9A4B     		ldr	r3, .L84+20
 1344 005a 0522     		movs	r2, #5
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 44


 1345 005c 1A70     		strb	r2, [r3]
 1346              	.L78:
 230:Core/Src/main.c ****         spi_buffer[1] = 100;
 1347              		.loc 1 230 9 is_stmt 1 view .LVU360
 1348 005e 8025     		movs	r5, #128
 1349 0060 ED01     		lsls	r5, r5, #7
 1350 0062 A024     		movs	r4, #160
 1351 0064 E405     		lsls	r4, r4, #23
 1352 0066 0022     		movs	r2, #0
 1353 0068 2900     		movs	r1, r5
 1354 006a 2000     		movs	r0, r4
 1355 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1356              	.LVL85:
 231:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 100);
 1357              		.loc 1 231 9 view .LVU361
 231:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 100);
 1358              		.loc 1 231 23 is_stmt 0 view .LVU362
 1359 0070 9549     		ldr	r1, .L84+24
 1360 0072 6423     		movs	r3, #100
 1361 0074 4B70     		strb	r3, [r1, #1]
 232:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 1362              		.loc 1 232 9 is_stmt 1 view .LVU363
 1363 0076 9548     		ldr	r0, .L84+28
 1364 0078 0222     		movs	r2, #2
 1365 007a FFF7FEFF 		bl	HAL_SPI_Transmit
 1366              	.LVL86:
 233:Core/Src/main.c **** 
 1367              		.loc 1 233 9 view .LVU364
 1368 007e 0122     		movs	r2, #1
 1369 0080 2900     		movs	r1, r5
 1370 0082 2000     		movs	r0, r4
 1371 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1372              	.LVL87:
 236:Core/Src/main.c ****       break;
 1373              		.loc 1 236 9 view .LVU365
 1374 0088 FA20     		movs	r0, #250
 1375 008a 4000     		lsls	r0, r0, #1
 1376 008c 0100     		movs	r1, r0
 1377 008e FFF7FEFF 		bl	led_blink_nb
 1378              	.LVL88:
 237:Core/Src/main.c ****       case START_CHARGING: 
 1379              		.loc 1 237 7 view .LVU366
 1380 0092 04E0     		b	.L77
 1381              	.L74:
 240:Core/Src/main.c **** 
 1382              		.loc 1 240 9 view .LVU367
 1383 0094 FFF7FEFF 		bl	Enable_buck_converter
 1384              	.LVL89:
 243:Core/Src/main.c ****       break;
 1385              		.loc 1 243 9 view .LVU368
 243:Core/Src/main.c ****       break;
 1386              		.loc 1 243 23 is_stmt 0 view .LVU369
 1387 0098 8A4B     		ldr	r3, .L84+20
 1388 009a 0222     		movs	r2, #2
 1389 009c 1A70     		strb	r2, [r3]
 244:Core/Src/main.c ****       case CHARGING:
 1390              		.loc 1 244 7 is_stmt 1 view .LVU370
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 45


 1391              	.L77:
 322:Core/Src/main.c ****       send_status = 0;
 1392              		.loc 1 322 5 view .LVU371
 322:Core/Src/main.c ****       send_status = 0;
 1393              		.loc 1 322 8 is_stmt 0 view .LVU372
 1394 009e 8C4B     		ldr	r3, .L84+32
 1395 00a0 1B78     		ldrb	r3, [r3]
 322:Core/Src/main.c ****       send_status = 0;
 1396              		.loc 1 322 7 view .LVU373
 1397 00a2 002B     		cmp	r3, #0
 1398 00a4 00D0     		beq	.LCB1115
 1399 00a6 DBE0     		b	.L83	@long jump
 1400              	.LCB1115:
 1401              	.L81:
 161:Core/Src/main.c ****   {
 1402              		.loc 1 161 3 is_stmt 1 view .LVU374
 168:Core/Src/main.c **** 
 1403              		.loc 1 168 5 view .LVU375
 1404 00a8 6420     		movs	r0, #100
 1405 00aa FFF7FEFF 		bl	HAL_Delay
 1406              	.LVL90:
 171:Core/Src/main.c ****     
 1407              		.loc 1 171 3 view .LVU376
 1408 00ae 804C     		ldr	r4, .L84
 1409 00b0 2000     		movs	r0, r4
 1410 00b2 FFF7FEFF 		bl	HAL_ADC_Start
 1411              	.LVL91:
 174:Core/Src/main.c **** 		ADC_CH5 = HAL_ADC_GetValue(&hadc);
 1412              		.loc 1 174 5 view .LVU377
 1413 00b6 6421     		movs	r1, #100
 1414 00b8 2000     		movs	r0, r4
 1415 00ba FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1416              	.LVL92:
 175:Core/Src/main.c **** 
 1417              		.loc 1 175 3 view .LVU378
 175:Core/Src/main.c **** 
 1418              		.loc 1 175 13 is_stmt 0 view .LVU379
 1419 00be 2000     		movs	r0, r4
 1420 00c0 FFF7FEFF 		bl	HAL_ADC_GetValue
 1421              	.LVL93:
 175:Core/Src/main.c **** 
 1422              		.loc 1 175 11 view .LVU380
 1423 00c4 834D     		ldr	r5, .L84+36
 1424 00c6 2880     		strh	r0, [r5]
 178:Core/Src/main.c **** 		ADC_CH6 = HAL_ADC_GetValue(&hadc);
 1425              		.loc 1 178 5 is_stmt 1 view .LVU381
 1426 00c8 6421     		movs	r1, #100
 1427 00ca 2000     		movs	r0, r4
 1428 00cc FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1429              	.LVL94:
 179:Core/Src/main.c **** 
 1430              		.loc 1 179 3 view .LVU382
 179:Core/Src/main.c **** 
 1431              		.loc 1 179 13 is_stmt 0 view .LVU383
 1432 00d0 2000     		movs	r0, r4
 1433 00d2 FFF7FEFF 		bl	HAL_ADC_GetValue
 1434              	.LVL95:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 46


 179:Core/Src/main.c **** 
 1435              		.loc 1 179 11 view .LVU384
 1436 00d6 804E     		ldr	r6, .L84+40
 1437 00d8 3080     		strh	r0, [r6]
 182:Core/Src/main.c **** 		ADC_CH7 = HAL_ADC_GetValue(&hadc);
 1438              		.loc 1 182 5 is_stmt 1 view .LVU385
 1439 00da 6421     		movs	r1, #100
 1440 00dc 2000     		movs	r0, r4
 1441 00de FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1442              	.LVL96:
 183:Core/Src/main.c **** 
 1443              		.loc 1 183 3 view .LVU386
 183:Core/Src/main.c **** 
 1444              		.loc 1 183 13 is_stmt 0 view .LVU387
 1445 00e2 2000     		movs	r0, r4
 1446 00e4 FFF7FEFF 		bl	HAL_ADC_GetValue
 1447              	.LVL97:
 183:Core/Src/main.c **** 
 1448              		.loc 1 183 11 view .LVU388
 1449 00e8 7C4F     		ldr	r7, .L84+44
 1450 00ea 3880     		strh	r0, [r7]
 186:Core/Src/main.c **** 		ADC_REF = HAL_ADC_GetValue(&hadc);
 1451              		.loc 1 186 5 is_stmt 1 view .LVU389
 1452 00ec 6421     		movs	r1, #100
 1453 00ee 2000     		movs	r0, r4
 1454 00f0 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1455              	.LVL98:
 187:Core/Src/main.c **** 
 1456              		.loc 1 187 3 view .LVU390
 187:Core/Src/main.c **** 
 1457              		.loc 1 187 13 is_stmt 0 view .LVU391
 1458 00f4 2000     		movs	r0, r4
 1459 00f6 FFF7FEFF 		bl	HAL_ADC_GetValue
 1460              	.LVL99:
 187:Core/Src/main.c **** 
 1461              		.loc 1 187 11 view .LVU392
 1462 00fa 794B     		ldr	r3, .L84+48
 1463 00fc 9846     		mov	r8, r3
 1464 00fe 1880     		strh	r0, [r3]
 190:Core/Src/main.c **** 
 1465              		.loc 1 190 5 is_stmt 1 view .LVU393
 1466 0100 2000     		movs	r0, r4
 1467 0102 FFF7FEFF 		bl	HAL_ADC_Stop
 1468              	.LVL100:
 193:Core/Src/main.c **** 
 1469              		.loc 1 193 5 view .LVU394
 193:Core/Src/main.c **** 
 1470              		.loc 1 193 34 is_stmt 0 view .LVU395
 1471 0106 4346     		mov	r3, r8
 1472 0108 1988     		ldrh	r1, [r3]
 1473 010a 9620     		movs	r0, #150
 1474 010c C003     		lsls	r0, r0, #15
 1475 010e FFF7FEFF 		bl	__aeabi_idiv
 1476              	.LVL101:
 193:Core/Src/main.c **** 
 1477              		.loc 1 193 23 view .LVU396
 1478 0112 744B     		ldr	r3, .L84+52
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 47


 1479 0114 1880     		strh	r0, [r3]
 196:Core/Src/main.c **** 
 1480              		.loc 1 196 5 is_stmt 1 view .LVU397
 1481 0116 0004     		lsls	r0, r0, #16
 1482 0118 040C     		lsrs	r4, r0, #16
 196:Core/Src/main.c **** 
 1483              		.loc 1 196 31 is_stmt 0 view .LVU398
 1484 011a 2A88     		ldrh	r2, [r5]
 1485 011c 6243     		muls	r2, r4
 196:Core/Src/main.c **** 
 1486              		.loc 1 196 49 view .LVU399
 1487 011e D317     		asrs	r3, r2, #31
 1488 0120 1B05     		lsls	r3, r3, #20
 1489 0122 1B0D     		lsrs	r3, r3, #20
 1490 0124 9B18     		adds	r3, r3, r2
 1491 0126 1B13     		asrs	r3, r3, #12
 196:Core/Src/main.c **** 
 1492              		.loc 1 196 54 view .LVU400
 1493 0128 6F48     		ldr	r0, .L84+56
 1494 012a 5843     		muls	r0, r3
 196:Core/Src/main.c **** 
 1495              		.loc 1 196 61 view .LVU401
 1496 012c 6F49     		ldr	r1, .L84+60
 1497 012e FFF7FEFF 		bl	__aeabi_idiv
 1498              	.LVL102:
 196:Core/Src/main.c **** 
 1499              		.loc 1 196 22 view .LVU402
 1500 0132 85B2     		uxth	r5, r0
 1501 0134 604B     		ldr	r3, .L84+8
 1502 0136 1D80     		strh	r5, [r3]
 199:Core/Src/main.c **** 
 1503              		.loc 1 199 5 is_stmt 1 view .LVU403
 199:Core/Src/main.c **** 
 1504              		.loc 1 199 37 is_stmt 0 view .LVU404
 1505 0138 3A88     		ldrh	r2, [r7]
 1506 013a 6243     		muls	r2, r4
 199:Core/Src/main.c **** 
 1507              		.loc 1 199 55 view .LVU405
 1508 013c D317     		asrs	r3, r2, #31
 1509 013e 1B05     		lsls	r3, r3, #20
 1510 0140 1B0D     		lsrs	r3, r3, #20
 1511 0142 9B18     		adds	r3, r3, r2
 1512 0144 1B13     		asrs	r3, r3, #12
 199:Core/Src/main.c **** 
 1513              		.loc 1 199 60 view .LVU406
 1514 0146 6A48     		ldr	r0, .L84+64
 1515 0148 5843     		muls	r0, r3
 199:Core/Src/main.c **** 
 1516              		.loc 1 199 66 view .LVU407
 1517 014a 6A49     		ldr	r1, .L84+68
 1518 014c FFF7FEFF 		bl	__aeabi_idiv
 1519              	.LVL103:
 199:Core/Src/main.c **** 
 1520              		.loc 1 199 28 view .LVU408
 1521 0150 694B     		ldr	r3, .L84+72
 1522 0152 1880     		strh	r0, [r3]
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 48


 1523              		.loc 1 202 5 is_stmt 1 view .LVU409
 202:Core/Src/main.c **** 
 1524              		.loc 1 202 30 is_stmt 0 view .LVU410
 1525 0154 3388     		ldrh	r3, [r6]
 1526 0156 5C43     		muls	r4, r3
 202:Core/Src/main.c **** 
 1527              		.loc 1 202 48 view .LVU411
 1528 0158 E317     		asrs	r3, r4, #31
 1529 015a 1B05     		lsls	r3, r3, #20
 1530 015c 1B0D     		lsrs	r3, r3, #20
 1531 015e 1C19     		adds	r4, r3, r4
 1532 0160 2413     		asrs	r4, r4, #12
 202:Core/Src/main.c **** 
 1533              		.loc 1 202 53 view .LVU412
 1534 0162 6001     		lsls	r0, r4, #5
 1535 0164 001B     		subs	r0, r0, r4
 1536 0166 8000     		lsls	r0, r0, #2
 1537 0168 0019     		adds	r0, r0, r4
 1538 016a C000     		lsls	r0, r0, #3
 202:Core/Src/main.c **** 
 1539              		.loc 1 202 58 view .LVU413
 1540 016c C321     		movs	r1, #195
 1541 016e 8900     		lsls	r1, r1, #2
 1542 0170 FFF7FEFF 		bl	__aeabi_idiv
 1543              	.LVL104:
 202:Core/Src/main.c **** 
 1544              		.loc 1 202 21 view .LVU414
 1545 0174 614B     		ldr	r3, .L84+76
 1546 0176 1880     		strh	r0, [r3]
 205:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 1547              		.loc 1 205 5 is_stmt 1 view .LVU415
 205:Core/Src/main.c ****       current_state = OVER_VOLTAGE;
 1548              		.loc 1 205 7 is_stmt 0 view .LVU416
 1549 0178 614B     		ldr	r3, .L84+80
 1550 017a 9D42     		cmp	r5, r3
 1551 017c 02D9     		bls	.L67
 206:Core/Src/main.c ****     }
 1552              		.loc 1 206 7 is_stmt 1 view .LVU417
 206:Core/Src/main.c ****     }
 1553              		.loc 1 206 21 is_stmt 0 view .LVU418
 1554 017e 514B     		ldr	r3, .L84+20
 1555 0180 0422     		movs	r2, #4
 1556 0182 1A70     		strb	r2, [r3]
 1557              	.L67:
 214:Core/Src/main.c ****       case INIT:
 1558              		.loc 1 214 5 is_stmt 1 view .LVU419
 1559 0184 4F4B     		ldr	r3, .L84+20
 1560 0186 1A78     		ldrb	r2, [r3]
 1561 0188 052A     		cmp	r2, #5
 1562 018a 65D8     		bhi	.L68
 1563 018c 9300     		lsls	r3, r2, #2
 1564 018e 5D4A     		ldr	r2, .L84+84
 1565 0190 D358     		ldr	r3, [r2, r3]
 1566 0192 9F46     		mov	pc, r3
 1567              		.section	.rodata.main,"a",%progbits
 1568              		.align	2
 1569              	.L70:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 49


 1570 0000 34000000 		.word	.L75
 1571 0004 94000000 		.word	.L74
 1572 0008 94010000 		.word	.L73
 1573 000c 0C020000 		.word	.L72
 1574 0010 18020000 		.word	.L71
 1575 0014 38020000 		.word	.L69
 1576              		.section	.text.main
 1577              	.L73:
 246:Core/Src/main.c **** 
 1578              		.loc 1 246 9 view .LVU420
 1579 0194 E121     		movs	r1, #225
 1580 0196 8900     		lsls	r1, r1, #2
 1581 0198 6420     		movs	r0, #100
 1582 019a FFF7FEFF 		bl	led_blink_nb
 1583              	.LVL105:
 249:Core/Src/main.c ****           current_state = INIT;
 1584              		.loc 1 249 9 view .LVU421
 249:Core/Src/main.c ****           current_state = INIT;
 1585              		.loc 1 249 29 is_stmt 0 view .LVU422
 1586 019e 464B     		ldr	r3, .L84+8
 1587 01a0 1A88     		ldrh	r2, [r3]
 249:Core/Src/main.c ****           current_state = INIT;
 1588              		.loc 1 249 11 view .LVU423
 1589 01a2 594B     		ldr	r3, .L84+88
 1590 01a4 9A42     		cmp	r2, r3
 1591 01a6 03D8     		bhi	.L79
 250:Core/Src/main.c ****           break;
 1592              		.loc 1 250 11 is_stmt 1 view .LVU424
 250:Core/Src/main.c ****           break;
 1593              		.loc 1 250 25 is_stmt 0 view .LVU425
 1594 01a8 464B     		ldr	r3, .L84+20
 1595 01aa 0022     		movs	r2, #0
 1596 01ac 1A70     		strb	r2, [r3]
 251:Core/Src/main.c ****         }
 1597              		.loc 1 251 11 is_stmt 1 view .LVU426
 1598 01ae 76E7     		b	.L77
 1599              	.L79:
 255:Core/Src/main.c ****           timer_check = 0;
 1600              		.loc 1 255 9 view .LVU427
 255:Core/Src/main.c ****           timer_check = 0;
 1601              		.loc 1 255 28 is_stmt 0 view .LVU428
 1602 01b0 524B     		ldr	r3, .L84+76
 1603 01b2 1B88     		ldrh	r3, [r3]
 255:Core/Src/main.c ****           timer_check = 0;
 1604              		.loc 1 255 11 view .LVU429
 1605 01b4 C72B     		cmp	r3, #199
 1606 01b6 0ED8     		bhi	.L80
 255:Core/Src/main.c ****           timer_check = 0;
 1607              		.loc 1 255 57 discriminator 1 view .LVU430
 1608 01b8 544B     		ldr	r3, .L84+92
 1609 01ba 1B88     		ldrh	r3, [r3]
 255:Core/Src/main.c ****           timer_check = 0;
 1610              		.loc 1 255 42 discriminator 1 view .LVU431
 1611 01bc 0A2B     		cmp	r3, #10
 1612 01be 0AD9     		bls	.L80
 255:Core/Src/main.c ****           timer_check = 0;
 1613              		.loc 1 255 83 discriminator 2 view .LVU432
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 50


 1614 01c0 484B     		ldr	r3, .L84+52
 1615 01c2 1A88     		ldrh	r2, [r3]
 255:Core/Src/main.c ****           timer_check = 0;
 1616              		.loc 1 255 62 discriminator 2 view .LVU433
 1617 01c4 524B     		ldr	r3, .L84+96
 1618 01c6 9A42     		cmp	r2, r3
 1619 01c8 05D9     		bls	.L80
 256:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1620              		.loc 1 256 11 is_stmt 1 view .LVU434
 256:Core/Src/main.c ****           current_state = STOP_CHARGING;
 1621              		.loc 1 256 23 is_stmt 0 view .LVU435
 1622 01ca 504B     		ldr	r3, .L84+92
 1623 01cc 0022     		movs	r2, #0
 1624 01ce 1A80     		strh	r2, [r3]
 257:Core/Src/main.c ****         }
 1625              		.loc 1 257 11 is_stmt 1 view .LVU436
 257:Core/Src/main.c ****         }
 1626              		.loc 1 257 25 is_stmt 0 view .LVU437
 1627 01d0 3C4B     		ldr	r3, .L84+20
 1628 01d2 0332     		adds	r2, r2, #3
 1629 01d4 1A70     		strb	r2, [r3]
 1630              	.L80:
 260:Core/Src/main.c ****         spi_buffer[1] = 100;
 1631              		.loc 1 260 9 is_stmt 1 view .LVU438
 1632 01d6 8025     		movs	r5, #128
 1633 01d8 ED01     		lsls	r5, r5, #7
 1634 01da A024     		movs	r4, #160
 1635 01dc E405     		lsls	r4, r4, #23
 1636 01de 0022     		movs	r2, #0
 1637 01e0 2900     		movs	r1, r5
 1638 01e2 2000     		movs	r0, r4
 1639 01e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1640              	.LVL106:
 261:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 200);
 1641              		.loc 1 261 9 view .LVU439
 261:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, spi_buffer, 2, 200);
 1642              		.loc 1 261 23 is_stmt 0 view .LVU440
 1643 01e8 3749     		ldr	r1, .L84+24
 1644 01ea 6423     		movs	r3, #100
 1645 01ec 4B70     		strb	r3, [r1, #1]
 262:Core/Src/main.c ****         HAL_GPIO_WritePin(SC_GPIO_Port, SC_Pin, GPIO_PIN_SET);
 1646              		.loc 1 262 9 is_stmt 1 view .LVU441
 1647 01ee 3748     		ldr	r0, .L84+28
 1648 01f0 6433     		adds	r3, r3, #100
 1649 01f2 0222     		movs	r2, #2
 1650 01f4 FFF7FEFF 		bl	HAL_SPI_Transmit
 1651              	.LVL107:
 263:Core/Src/main.c **** 
 1652              		.loc 1 263 9 view .LVU442
 1653 01f8 0122     		movs	r2, #1
 1654 01fa 2900     		movs	r1, r5
 1655 01fc 2000     		movs	r0, r4
 1656 01fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 1657              	.LVL108:
 265:Core/Src/main.c **** 
 1658              		.loc 1 265 9 view .LVU443
 265:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 51


 1659              		.loc 1 265 20 is_stmt 0 view .LVU444
 1660 0202 424A     		ldr	r2, .L84+92
 1661 0204 1388     		ldrh	r3, [r2]
 1662 0206 0133     		adds	r3, r3, #1
 1663 0208 1380     		strh	r3, [r2]
 267:Core/Src/main.c ****       case STOP_CHARGING:
 1664              		.loc 1 267 7 is_stmt 1 view .LVU445
 1665 020a 48E7     		b	.L77
 1666              	.L72:
 270:Core/Src/main.c **** 
 1667              		.loc 1 270 9 view .LVU446
 1668 020c FFF7FEFF 		bl	Disable_buck_converter
 1669              	.LVL109:
 280:Core/Src/main.c ****       break;
 1670              		.loc 1 280 9 view .LVU447
 280:Core/Src/main.c ****       break;
 1671              		.loc 1 280 23 is_stmt 0 view .LVU448
 1672 0210 2C4B     		ldr	r3, .L84+20
 1673 0212 0522     		movs	r2, #5
 1674 0214 1A70     		strb	r2, [r3]
 281:Core/Src/main.c ****       case OVER_VOLTAGE:
 1675              		.loc 1 281 7 is_stmt 1 view .LVU449
 1676 0216 42E7     		b	.L77
 1677              	.L71:
 283:Core/Src/main.c **** 
 1678              		.loc 1 283 9 view .LVU450
 1679 0218 6421     		movs	r1, #100
 1680 021a 6420     		movs	r0, #100
 1681 021c FFF7FEFF 		bl	led_blink_nb
 1682              	.LVL110:
 286:Core/Src/main.c **** 
 1683              		.loc 1 286 9 view .LVU451
 1684 0220 FFF7FEFF 		bl	Disable_buck_converter
 1685              	.LVL111:
 289:Core/Src/main.c ****           current_state = INIT;
 1686              		.loc 1 289 9 view .LVU452
 289:Core/Src/main.c ****           current_state = INIT;
 1687              		.loc 1 289 29 is_stmt 0 view .LVU453
 1688 0224 244B     		ldr	r3, .L84+8
 1689 0226 1A88     		ldrh	r2, [r3]
 289:Core/Src/main.c ****           current_state = INIT;
 1690              		.loc 1 289 11 view .LVU454
 1691 0228 3A4B     		ldr	r3, .L84+100
 1692 022a 9A42     		cmp	r2, r3
 1693 022c 00D9     		bls	.LCB1354
 1694 022e 36E7     		b	.L77	@long jump
 1695              	.LCB1354:
 290:Core/Src/main.c ****         }
 1696              		.loc 1 290 11 is_stmt 1 view .LVU455
 290:Core/Src/main.c ****         }
 1697              		.loc 1 290 25 is_stmt 0 view .LVU456
 1698 0230 244B     		ldr	r3, .L84+20
 1699 0232 0022     		movs	r2, #0
 1700 0234 1A70     		strb	r2, [r3]
 1701 0236 32E7     		b	.L77
 1702              	.L69:
 296:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 52


 1703              		.loc 1 296 9 is_stmt 1 view .LVU457
 1704 0238 8021     		movs	r1, #128
 1705 023a 0022     		movs	r2, #0
 1706 023c C901     		lsls	r1, r1, #7
 1707 023e 3648     		ldr	r0, .L84+104
 1708 0240 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1709              	.LVL112:
 308:Core/Src/main.c **** 
 1710              		.loc 1 308 9 view .LVU458
 1711 0244 FFF7FEFF 		bl	HAL_SuspendTick
 1712              	.LVL113:
 311:Core/Src/main.c **** 
 1713              		.loc 1 311 9 view .LVU459
 1714 0248 0121     		movs	r1, #1
 1715 024a 0120     		movs	r0, #1
 1716 024c FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
 1717              	.LVL114:
 314:Core/Src/main.c **** 
 1718              		.loc 1 314 9 view .LVU460
 314:Core/Src/main.c **** 
 1719              		.loc 1 314 23 is_stmt 0 view .LVU461
 1720 0250 1C4B     		ldr	r3, .L84+20
 1721 0252 0022     		movs	r2, #0
 1722 0254 1A70     		strb	r2, [r3]
 316:Core/Src/main.c ****       default:
 1723              		.loc 1 316 7 is_stmt 1 view .LVU462
 1724 0256 22E7     		b	.L77
 1725              	.L68:
 318:Core/Src/main.c ****       break;
 1726              		.loc 1 318 7 view .LVU463
 318:Core/Src/main.c ****       break;
 1727              		.loc 1 318 21 is_stmt 0 view .LVU464
 1728 0258 1A4B     		ldr	r3, .L84+20
 1729 025a 0022     		movs	r2, #0
 1730 025c 1A70     		strb	r2, [r3]
 319:Core/Src/main.c ****     }
 1731              		.loc 1 319 7 is_stmt 1 view .LVU465
 1732 025e 1EE7     		b	.L77
 1733              	.L83:
 1734              	.LBB9:
 323:Core/Src/main.c ****       uint8_t length = 11;
 1735              		.loc 1 323 7 discriminator 1 view .LVU466
 323:Core/Src/main.c ****       uint8_t length = 11;
 1736              		.loc 1 323 19 is_stmt 0 discriminator 1 view .LVU467
 1737 0260 1B4B     		ldr	r3, .L84+32
 1738 0262 0022     		movs	r2, #0
 1739 0264 1A70     		strb	r2, [r3]
 324:Core/Src/main.c ****       uint8_t buffer [length];
 1740              		.loc 1 324 7 is_stmt 1 discriminator 1 view .LVU468
 1741              	.LVL115:
 325:Core/Src/main.c ****       buffer [0] = 0x02;
 1742              		.loc 1 325 7 discriminator 1 view .LVU469
 326:Core/Src/main.c ****       buffer [1] = length;
 1743              		.loc 1 326 7 discriminator 1 view .LVU470
 326:Core/Src/main.c ****       buffer [1] = length;
 1744              		.loc 1 326 18 is_stmt 0 discriminator 1 view .LVU471
 1745 0266 01AC     		add	r4, sp, #4
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 53


 1746              	.LVL116:
 326:Core/Src/main.c ****       buffer [1] = length;
 1747              		.loc 1 326 18 discriminator 1 view .LVU472
 1748 0268 0223     		movs	r3, #2
 1749 026a 2370     		strb	r3, [r4]
 327:Core/Src/main.c ****       buffer [2] = (input_voltage_mv >> 8);
 1750              		.loc 1 327 7 is_stmt 1 discriminator 1 view .LVU473
 327:Core/Src/main.c ****       buffer [2] = (input_voltage_mv >> 8);
 1751              		.loc 1 327 18 is_stmt 0 discriminator 1 view .LVU474
 1752 026c 0933     		adds	r3, r3, #9
 1753 026e 6370     		strb	r3, [r4, #1]
 328:Core/Src/main.c ****       buffer [3] = (uint8_t)(input_voltage_mv);
 1754              		.loc 1 328 7 is_stmt 1 discriminator 1 view .LVU475
 328:Core/Src/main.c ****       buffer [3] = (uint8_t)(input_voltage_mv);
 1755              		.loc 1 328 18 is_stmt 0 discriminator 1 view .LVU476
 1756 0270 114B     		ldr	r3, .L84+8
 1757 0272 1B88     		ldrh	r3, [r3]
 1758 0274 1A0A     		lsrs	r2, r3, #8
 1759 0276 A270     		strb	r2, [r4, #2]
 329:Core/Src/main.c ****       buffer [4] = (buck_output_voltage_mv >> 8);
 1760              		.loc 1 329 7 is_stmt 1 discriminator 1 view .LVU477
 329:Core/Src/main.c ****       buffer [4] = (buck_output_voltage_mv >> 8);
 1761              		.loc 1 329 18 is_stmt 0 discriminator 1 view .LVU478
 1762 0278 E370     		strb	r3, [r4, #3]
 330:Core/Src/main.c ****       buffer [5] = (uint8_t)(buck_output_voltage_mv);
 1763              		.loc 1 330 7 is_stmt 1 discriminator 1 view .LVU479
 330:Core/Src/main.c ****       buffer [5] = (uint8_t)(buck_output_voltage_mv);
 1764              		.loc 1 330 18 is_stmt 0 discriminator 1 view .LVU480
 1765 027a 1F4B     		ldr	r3, .L84+72
 1766 027c 1B88     		ldrh	r3, [r3]
 1767 027e 1A0A     		lsrs	r2, r3, #8
 1768 0280 2271     		strb	r2, [r4, #4]
 331:Core/Src/main.c ****       buffer [6] = (buck_current_ma >> 8);
 1769              		.loc 1 331 7 is_stmt 1 discriminator 1 view .LVU481
 331:Core/Src/main.c ****       buffer [6] = (buck_current_ma >> 8);
 1770              		.loc 1 331 18 is_stmt 0 discriminator 1 view .LVU482
 1771 0282 6371     		strb	r3, [r4, #5]
 332:Core/Src/main.c ****       buffer [7] = (uint8_t)(buck_current_ma);
 1772              		.loc 1 332 7 is_stmt 1 discriminator 1 view .LVU483
 332:Core/Src/main.c ****       buffer [7] = (uint8_t)(buck_current_ma);
 1773              		.loc 1 332 18 is_stmt 0 discriminator 1 view .LVU484
 1774 0284 1D4B     		ldr	r3, .L84+76
 1775 0286 1B88     		ldrh	r3, [r3]
 1776 0288 1A0A     		lsrs	r2, r3, #8
 1777 028a A271     		strb	r2, [r4, #6]
 333:Core/Src/main.c ****       buffer [8] = (supply_voltage_mv >> 8);
 1778              		.loc 1 333 7 is_stmt 1 discriminator 1 view .LVU485
 333:Core/Src/main.c ****       buffer [8] = (supply_voltage_mv >> 8);
 1779              		.loc 1 333 18 is_stmt 0 discriminator 1 view .LVU486
 1780 028c E371     		strb	r3, [r4, #7]
 334:Core/Src/main.c ****       buffer [9] = (uint8_t)(supply_voltage_mv);
 1781              		.loc 1 334 7 is_stmt 1 discriminator 1 view .LVU487
 334:Core/Src/main.c ****       buffer [9] = (uint8_t)(supply_voltage_mv);
 1782              		.loc 1 334 18 is_stmt 0 discriminator 1 view .LVU488
 1783 028e 154B     		ldr	r3, .L84+52
 1784 0290 1B88     		ldrh	r3, [r3]
 1785 0292 1A0A     		lsrs	r2, r3, #8
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 54


 1786 0294 2272     		strb	r2, [r4, #8]
 335:Core/Src/main.c ****       buffer [10] = calculate_crc_xor(buffer, length-1);//0xFF;
 1787              		.loc 1 335 7 is_stmt 1 discriminator 1 view .LVU489
 335:Core/Src/main.c ****       buffer [10] = calculate_crc_xor(buffer, length-1);//0xFF;
 1788              		.loc 1 335 18 is_stmt 0 discriminator 1 view .LVU490
 1789 0296 6372     		strb	r3, [r4, #9]
 336:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, buffer, length, 100);
 1790              		.loc 1 336 7 is_stmt 1 discriminator 1 view .LVU491
 336:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, buffer, length, 100);
 1791              		.loc 1 336 21 is_stmt 0 discriminator 1 view .LVU492
 1792 0298 0A21     		movs	r1, #10
 1793 029a 2000     		movs	r0, r4
 1794 029c FFF7FEFF 		bl	calculate_crc_xor
 1795              	.LVL117:
 336:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, buffer, length, 100);
 1796              		.loc 1 336 19 discriminator 1 view .LVU493
 1797 02a0 A072     		strb	r0, [r4, #10]
 337:Core/Src/main.c ****     }
 1798              		.loc 1 337 7 is_stmt 1 discriminator 1 view .LVU494
 1799 02a2 1E48     		ldr	r0, .L84+108
 1800 02a4 6423     		movs	r3, #100
 1801 02a6 0B22     		movs	r2, #11
 1802 02a8 2100     		movs	r1, r4
 1803 02aa FFF7FEFF 		bl	HAL_UART_Transmit
 1804              	.LVL118:
 1805 02ae FBE6     		b	.L81
 1806              	.L85:
 1807              		.align	2
 1808              	.L84:
 1809 02b0 00000000 		.word	hadc
 1810 02b4 00000000 		.word	htim2
 1811 02b8 00000000 		.word	input_voltage_mv
 1812 02bc 77ECFFFF 		.word	-5001
 1813 02c0 66420000 		.word	16998
 1814 02c4 00000000 		.word	current_state
 1815 02c8 00000000 		.word	spi_buffer
 1816 02cc 00000000 		.word	hspi1
 1817 02d0 00000000 		.word	send_status
 1818 02d4 00000000 		.word	ADC_CH5
 1819 02d8 00000000 		.word	ADC_CH6
 1820 02dc 00000000 		.word	ADC_CH7
 1821 02e0 00000000 		.word	ADC_REF
 1822 02e4 00000000 		.word	supply_voltage_mv
 1823 02e8 BC6D0300 		.word	224700
 1824 02ec 5C120000 		.word	4700
 1825 02f0 58150100 		.word	71000
 1826 02f4 983A0000 		.word	15000
 1827 02f8 00000000 		.word	buck_output_voltage_mv
 1828 02fc 00000000 		.word	buck_current_ma
 1829 0300 F0550000 		.word	22000
 1830 0304 00000000 		.word	.L70
 1831 0308 87130000 		.word	4999
 1832 030c 00000000 		.word	timer_check
 1833 0310 280A0000 		.word	2600
 1834 0314 EF550000 		.word	21999
 1835 0318 00080050 		.word	1342179328
 1836 031c 00000000 		.word	huart2
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 55


 1837              	.LBE9:
 1838              		.cfi_endproc
 1839              	.LFE40:
 1841              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1842              		.align	1
 1843              		.global	HAL_GPIO_EXTI_Callback
 1844              		.syntax unified
 1845              		.code	16
 1846              		.thumb_func
 1848              	HAL_GPIO_EXTI_Callback:
 1849              	.LVL119:
 1850              	.LFB51:
 685:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1851              		.loc 1 685 1 view -0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
 685:Core/Src/main.c ****   //if(GPIO_Pin == INT_Pin)
 1855              		.loc 1 685 1 is_stmt 0 view .LVU496
 1856 0000 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 688:Core/Src/main.c **** 	  HAL_ResumeTick();
 1860              		.loc 1 688 4 is_stmt 1 view .LVU497
 1861 0002 FFF7FEFF 		bl	SystemClock_Config
 1862              	.LVL120:
 689:Core/Src/main.c ****   //}
 1863              		.loc 1 689 4 view .LVU498
 1864 0006 FFF7FEFF 		bl	HAL_ResumeTick
 1865              	.LVL121:
 691:Core/Src/main.c **** 
 1866              		.loc 1 691 1 is_stmt 0 view .LVU499
 1867              		@ sp needed
 1868 000a 10BD     		pop	{r4, pc}
 1869              		.cfi_endproc
 1870              	.LFE51:
 1872              		.global	current_state
 1873              		.section	.bss.current_state,"aw",%nobits
 1876              	current_state:
 1877 0000 00       		.space	1
 1878              		.global	spi_buffer
 1879              		.section	.bss.spi_buffer,"aw",%nobits
 1880              		.align	2
 1883              	spi_buffer:
 1884 0000 0000     		.space	2
 1885              		.global	send_status
 1886              		.section	.data.send_status,"aw"
 1889              	send_status:
 1890 0000 01       		.byte	1
 1891              		.global	timestamp
 1892              		.section	.bss.timestamp,"aw",%nobits
 1893              		.align	2
 1896              	timestamp:
 1897 0000 00000000 		.space	4
 1898              		.global	isOn
 1899              		.section	.bss.isOn,"aw",%nobits
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 56


 1902              	isOn:
 1903 0000 00       		.space	1
 1904              		.global	timer_check
 1905              		.section	.bss.timer_check,"aw",%nobits
 1906              		.align	1
 1909              	timer_check:
 1910 0000 0000     		.space	2
 1911              		.global	previous_state
 1912              		.section	.bss.previous_state,"aw",%nobits
 1915              	previous_state:
 1916 0000 00       		.space	1
 1917              		.global	buck_current_ma
 1918              		.section	.bss.buck_current_ma,"aw",%nobits
 1919              		.align	1
 1922              	buck_current_ma:
 1923 0000 0000     		.space	2
 1924              		.global	buck_output_voltage_mv
 1925              		.section	.bss.buck_output_voltage_mv,"aw",%nobits
 1926              		.align	1
 1929              	buck_output_voltage_mv:
 1930 0000 0000     		.space	2
 1931              		.global	input_voltage_mv
 1932              		.section	.bss.input_voltage_mv,"aw",%nobits
 1933              		.align	1
 1936              	input_voltage_mv:
 1937 0000 0000     		.space	2
 1938              		.global	supply_voltage_mv
 1939              		.section	.bss.supply_voltage_mv,"aw",%nobits
 1940              		.align	1
 1943              	supply_voltage_mv:
 1944 0000 0000     		.space	2
 1945              		.global	ADC_REF
 1946              		.section	.bss.ADC_REF,"aw",%nobits
 1947              		.align	1
 1950              	ADC_REF:
 1951 0000 0000     		.space	2
 1952              		.global	ADC_CH7
 1953              		.section	.bss.ADC_CH7,"aw",%nobits
 1954              		.align	1
 1957              	ADC_CH7:
 1958 0000 0000     		.space	2
 1959              		.global	ADC_CH6
 1960              		.section	.bss.ADC_CH6,"aw",%nobits
 1961              		.align	1
 1964              	ADC_CH6:
 1965 0000 0000     		.space	2
 1966              		.global	ADC_CH5
 1967              		.section	.bss.ADC_CH5,"aw",%nobits
 1968              		.align	1
 1971              	ADC_CH5:
 1972 0000 0000     		.space	2
 1973              		.global	huart2
 1974              		.section	.bss.huart2,"aw",%nobits
 1975              		.align	2
 1978              	huart2:
 1979 0000 00000000 		.space	136
 1979      00000000 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 57


 1979      00000000 
 1979      00000000 
 1979      00000000 
 1980              		.global	htim2
 1981              		.section	.bss.htim2,"aw",%nobits
 1982              		.align	2
 1985              	htim2:
 1986 0000 00000000 		.space	64
 1986      00000000 
 1986      00000000 
 1986      00000000 
 1986      00000000 
 1987              		.global	hspi1
 1988              		.section	.bss.hspi1,"aw",%nobits
 1989              		.align	2
 1992              	hspi1:
 1993 0000 00000000 		.space	88
 1993      00000000 
 1993      00000000 
 1993      00000000 
 1993      00000000 
 1994              		.global	hadc
 1995              		.section	.bss.hadc,"aw",%nobits
 1996              		.align	2
 1999              	hadc:
 2000 0000 00000000 		.space	92
 2000      00000000 
 2000      00000000 
 2000      00000000 
 2000      00000000 
 2001              		.text
 2002              	.Letext0:
 2003              		.file 3 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 2004              		.file 4 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2005              		.file 5 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2006              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 2007              		.file 7 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2008              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2009              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 2010              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 2011              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 2012              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 2013              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 2014              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
 2015              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 2016              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 2017              		.file 17 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim_ex.h"
 2018              		.file 18 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 2019              		.file 19 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr.h"
 2020              		.file 20 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 2021              		.file 21 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc_ex.h"
 2022              		.file 22 "<built-in>"
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:19     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:190    .text.MX_GPIO_Init:00000000000000b8 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:197    .text.load_switch_enable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:203    .text.load_switch_enable:0000000000000000 load_switch_enable
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:234    .text.load_switch_disable:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:240    .text.load_switch_disable:0000000000000000 load_switch_disable
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:271    .text.led_blink:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:277    .text.led_blink:0000000000000000 led_blink
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:328    .text.led_blink:0000000000000030 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:333    .text.led_blink_nb:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:339    .text.led_blink_nb:0000000000000000 led_blink_nb
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:434    .text.led_blink_nb:0000000000000058 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1902   .bss.isOn:0000000000000000 isOn
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1896   .bss.timestamp:0000000000000000 timestamp
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:441    .text.Enable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:447    .text.Enable_buck_converter:0000000000000000 Enable_buck_converter
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:486    .text.Disable_buck_converter:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:492    .text.Disable_buck_converter:0000000000000000 Disable_buck_converter
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:527    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:533    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:552    .text.HAL_TIM_PeriodElapsedCallback:0000000000000008 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1889   .data.send_status:0000000000000000 send_status
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:557    .text.calculate_crc_xor:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:563    .text.calculate_crc_xor:0000000000000000 calculate_crc_xor
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:612    .text.Error_Handler:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:618    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:650    .text.MX_ADC_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:655    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:829    .text.MX_ADC_Init:00000000000000b4 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1999   .bss.hadc:0000000000000000 hadc
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:839    .text.MX_USART2_UART_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:844    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:907    .text.MX_USART2_UART_Init:0000000000000030 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1978   .bss.huart2:0000000000000000 huart2
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:913    .text.MX_SPI1_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:918    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:989    .text.MX_SPI1_Init:0000000000000038 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1992   .bss.hspi1:0000000000000000 hspi1
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:995    .text.MX_TIM2_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1000   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1108   .text.MX_TIM2_Init:0000000000000074 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1985   .bss.htim2:0000000000000000 htim2
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1113   .text.SystemClock_Config:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1119   .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1249   .text.SystemClock_Config:000000000000008c $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1256   .text.main:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1262   .text.main:0000000000000000 main
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1568   .rodata.main:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1809   .text.main:00000000000002b0 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1936   .bss.input_voltage_mv:0000000000000000 input_voltage_mv
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1876   .bss.current_state:0000000000000000 current_state
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1883   .bss.spi_buffer:0000000000000000 spi_buffer
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1971   .bss.ADC_CH5:0000000000000000 ADC_CH5
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1964   .bss.ADC_CH6:0000000000000000 ADC_CH6
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 59


C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1957   .bss.ADC_CH7:0000000000000000 ADC_CH7
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1950   .bss.ADC_REF:0000000000000000 ADC_REF
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1943   .bss.supply_voltage_mv:0000000000000000 supply_voltage_mv
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1929   .bss.buck_output_voltage_mv:0000000000000000 buck_output_voltage_mv
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1922   .bss.buck_current_ma:0000000000000000 buck_current_ma
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1909   .bss.timer_check:0000000000000000 timer_check
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1842   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1848   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1877   .bss.current_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1880   .bss.spi_buffer:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1893   .bss.timestamp:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1903   .bss.isOn:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1906   .bss.timer_check:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1915   .bss.previous_state:0000000000000000 previous_state
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1916   .bss.previous_state:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1919   .bss.buck_current_ma:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1926   .bss.buck_output_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1933   .bss.input_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1940   .bss.supply_voltage_mv:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1947   .bss.ADC_REF:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1954   .bss.ADC_CH7:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1961   .bss.ADC_CH6:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1968   .bss.ADC_CH5:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1975   .bss.huart2:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1982   .bss.htim2:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1989   .bss.hspi1:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s:1996   .bss.hadc:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_GetTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_idiv
HAL_Init
HAL_ADCEx_Calibration_Start
HAL_TIM_Base_Start_IT
HAL_SPI_Transmit
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_SuspendTick
HAL_PWR_EnterSTOPMode
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8BH3Xh.s 			page 60


HAL_UART_Transmit
HAL_ResumeTick
